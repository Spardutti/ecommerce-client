{"version":3,"sources":["API/API.js","Components/ProductCard.jsx","Context/Contexts.js","Components/SearchProduct.jsx","Components/Home.jsx","Components/Admin/AdminNav.jsx","Components/ClientNav.jsx","Components/Navbar.jsx","Components/Token.jsx","Components/LoginScreen.jsx","Components/NewAccount.jsx","Components/Admin/AddProduct.jsx","Components/Admin/AddCategory.jsx","Components/Admin/AdminHome.jsx","Components/Admin/SingleProduct/ProductInfoUpdate.jsx","Components/Admin/SingleProduct/AddProductImage.jsx","Components/Admin/SingleProduct/NewInfoForm.jsx","Components/Admin/SingleProduct/SingleProduct.jsx","Components/Styled/ColorSquares.js","Components/Styled/GoBackArrow.js","Components/ProductSlideShow.jsx","Components/ProductDetail.jsx","Components/Admin/AdminCategory.jsx","Components/CartItem.jsx","Components/Cart.jsx","Components/Transactions/PurchaseSuccess.jsx","Components/Transactions/TransactionList.jsx","Components/Transactions/TransactionDetail.jsx","Components/Categories.jsx","Components/Admin/AdminTransactions.jsx","Components/Transactions/PurchaseFailure.jsx","App.js","index.js"],"names":["token","decodedToken","url","params","Authorization","userData","a","id","_id","fetch","response","json","data","logout","localStorage","clear","localUser","email","password","method","headers","body","JSON","stringify","status","setItem","newUser","username","confirm","getProducts","addNewProduct","name","category","price","color","size","quantity","image","description","formData","FormData","append","productDetail","productId","deleteProduct","updateDescription","updateProduct","addImagesToProduct","img","deleteProductImage","index","imageToDeleteIndex","deleteProductInfo","addToCart","updateUserCart","cart","checkStock","newTransaction","userId","transaction_id","items","date","getTransaction","userTransactions","updateTransactionStatus","allTransactions","getCategories","getProductByCat","newCategory","ProductCard","props","useState","setColors","setSizes","images","useEffect","sizeArr","colorArr","indexOf","push","className","to","style","textDecoration","Card","CardBody","CardTitle","tag","CardSubtitle","toLocaleString","CardImg","top","width","src","length","alt","height","userContext","createContext","SearchProduct","products","productName","setProductName","suggestions","setSuggestions","setProductId","redirect","setRedirect","Input","onChange","e","matches","target","value","filter","elem","regex","RegExp","match","onClick","map","suggestion","product","Home","setProducts","user","useContext","admin","Row","Col","md","lg","xs","uniqid","AdminNav","isOpen","setIsOpen","setUser","logOut","window","location","replace","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","ClientNav","cartItems","setCartItems","NavBar","Token","setToken","urlToken","split","localToken","history","pushState","LoginScreen","setEmail","setPassword","logged","setLogged","loginError","setLogginErros","Form","FormGroup","Label","for","type","placeholder","Button","NewAccount","setUsername","setConfirm","createAccErrors","setCreateAccErrors","accCreated","setAccCreated","count","setCount","setTimeout","vaue","error","msg","info","errors","AddProduct","productPrice","setProductPrice","categoryId","setCategoryId","setSize","setColor","setQuantity","categories","setCategories","showProductForm","setShowProductForm","productErrors","setProductErrors","setImage","setDescription","loading","setLoading","productForm","resetState","encType","selectedIndex","element","options","defaultValue","disabled","cat","autoComplete","onFocus","files","err","role","result","AddCategory","categoryName","setCategoryName","showCategoryForm","setShowCategoryForm","toggleForm","AdminHome","ProductInfoUpdate","editProduct","setEditProduct","deleted","alert","setProduct","AddProductImage","imagesToAdd","setImagesToAdd","imagex","isLoading","setIsLoading","imageHandler","old","i","ele","multiple","updatedProduct","hideForm","NewInfoForm","edit","details","setNewInfoForm","newInfoForm","SingleProduct","showImageForm","setShowImageForm","productDeleted","setProductDeleted","descriptionForm","setShowDescription","countDown","setCountDown","countDownOver","setCountDownOver","toggleDescription","ColorSquares","styled","div","GoBackArrow","route","fontSize","ProductSlideShow","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","previous","prevIndex","slides","CarouselItem","onExiting","onExited","CarouselCaption","captionText","Carousel","CarouselIndicators","onClickHandler","CarouselControl","direction","directionText","ProductDetail","sizes","colors","selectedSize","setSelectedSize","selectedColor","setSelectedColor","addedToCart","setAddedToCart","getItem","availableSizes","forEach","key","selectSize","colorsBySize","showColorsBySize","GoToCart","sm","newCart","AdminCategory","active","setActive","Breadcrumb","BreadcrumbItem","pro","CartItem","increment","decrement","removeItem","splice","updatedUser","Cart","total","setTotal","sum","item","checkoutButton","date_created","init_point","PurchaseSuccess","success","setSuccess","preferenceId","setPreferenceId","compareCollectionsId","replaceState","TransactionList","purchases","setPurchases","getUserTransactions","transactions","Table","responsive","bordered","scope","Date","toLocaleDateString","title","TransactionDetail","detail","setDetail","getDetail","transaction","totalPrice","unit_price","Categories","AdminTransactions","setTransactions","getAllTransactions","PurchaseFailure","console","log","App","jwt","decode","exp","now","Provider","path","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dcfcaff0.chunk.js","sourcesContent":["import jwt from \"jsonwebtoken\";\n\n//const url = \"http://localhost:5000\"; // DEVELOPMENT\nconst url = \"https://ecommercedemosite.herokuapp.com\"; // LIVE\nlet token;\nlet decodedToken;\nconst params = {\n  Authorization: token,\n  \"Content-Type\": \"application/json\",\n};\n\n/**************************************************** USER  ***************************************************************/\n// CHECK FOR LOCAL TOKEN\nexport const checkForToken = () => {\n  token = localStorage.getItem(\"token\");\n  if (token) {\n    decodedToken = jwt.decode(token);\n    const expiresAt = new Date(decodedToken.exp * 1000);\n    if (expiresAt < new Date(Date.now())) {\n      localStorage.clear();\n    } else {\n      return (token = \"Bearer \" + token);\n    }\n  } else return null;\n};\n\n// GET THE USER DATA\nexport const userData = async () => {\n  try {\n    let id = decodedToken._id;\n    const response = await fetch(url + \"/user/\" + id);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// LOGOUT USER\nexport const logout = async () => {\n  await fetch(url + \"/logout\");\n  localStorage.clear();\n};\n\n// LOG IN LOCAL USER\nexport const localUser = async (email, password) => {\n  const response = await fetch(url + \"/user/login\", {\n    method: \"POST\",\n    headers: params,\n    body: JSON.stringify({\n      email,\n      password,\n    }),\n  });\n  const data = await response.json();\n  if (response.status === 200) localStorage.setItem(\"token\", data.token);\n  return { data, status: response.status };\n};\n\n// CREATE LOCAL USER\nexport const newUser = async (email, username, password, confirm) => {\n  const response = await fetch(url + \"/user/new\", {\n    method: \"POST\",\n    headers: params,\n    body: JSON.stringify({\n      email,\n      username,\n      password,\n      confirm,\n    }),\n  });\n  const data = await response.json();\n  return { response, data };\n};\n\n/********************************************************* PRODUCTS ****************************************/\n// GET PRODUCTS\nexport const getProducts = async () => {\n  try {\n    const response = await fetch(url + \"/products\");\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// ADD NEW PRODUCT\nexport const addNewProduct = async (\n  name,\n  category,\n  price,\n  color,\n  size,\n  quantity,\n  image,\n  description\n) => {\n  const formData = new FormData();\n  formData.append(\"name\", name);\n  formData.append(\"price\", price);\n  formData.append(\"category\", category);\n  formData.append(\"color\", color);\n  formData.append(\"size\", size);\n  formData.append(\"quantity\", quantity);\n  formData.append(\"image\", image);\n  formData.append(\"description\", description);\n  try {\n    const response = await fetch(url + \"/product/new\", {\n      method: \"POST\",\n      body: formData,\n    });\n    const data = await response.json();\n    return { status: response.status, data };\n  } catch (err) {\n    return err;\n  }\n};\n\n// PRODUCT DETAIL\nexport const productDetail = async (productId) => {\n  try {\n    const response = await fetch(url + \"/product/\" + productId, {\n      method: \"GET\",\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// DELETE PRODUCT WITH ALL INFO AND IMAGES\nexport const deleteProduct = async (id) => {\n  await fetch(url + \"/product/\" + id, {\n    method: \"DELETE\",\n    headers: params,\n  });\n};\n\n// UPDATE DESCRIPTION\nexport const updateDescription = async (id, description) => {\n  await fetch(url + \"/product/description/\" + id, {\n    method: \"PUT\",\n    headers: params,\n    body: JSON.stringify({\n      description,\n    }),\n  });\n};\n\n// EDIT PRODUCT PRICE STOCK\nexport const updateProduct = async (id, size, quantity, color, description) => {\n  try {\n    const response = await fetch(url + \"/product/update/\" + id, {\n      method: \"PUT\",\n      headers: params,\n      body: JSON.stringify({ size, quantity, color, description }),\n    });\n    const data = await response.json();\n    return { status: response.status, data };\n  } catch (err) {\n    return err;\n  }\n};\n\n// ADD IMAGES TO PRODUCT\nexport const addImagesToProduct = async (id, image) => {\n  const formData = new FormData();\n  for (let img of image) {\n    formData.append(\"image\", img);\n  }\n  try {\n    const response = await fetch(url + \"/product/image/\" + id, {\n      method: \"PUT\",\n      body: formData,\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// DELETE PRODUCT IMAGE\nexport const deleteProductImage = async (index, id) => {\n  try {\n    const response = await fetch(url + \"/product/delete/image/\" + id, {\n      method: \"DELETE\",\n      headers: params,\n      body: JSON.stringify({ imageToDeleteIndex: index }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// DELETE PRODUCT DETAIL\nexport const deleteProductInfo = async (id, index) => {\n  try {\n    const response = await fetch(url + \"/product/details/\" + id, {\n      method: \"DELETE\",\n      headers: params,\n      body: JSON.stringify({\n        index,\n      }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// ADD PRODUC TO USER CART\nexport const addToCart = async (id, productId, size, color, quantity) => {\n  const response = await fetch(url + \"/product/cart/\" + id, {\n    method: \"PUT\",\n    headers: params,\n    body: JSON.stringify({\n      id: productId,\n      size,\n      color,\n      quantity,\n    }),\n  });\n  const data = await response.json();\n  return data;\n};\n\n// UPDATE USER CART\nexport const updateUserCart = async (id, cart) => {\n  try {\n    const response = await fetch(url + \"/user/product/cart/\" + id, {\n      method: \"PUT\",\n      headers: params,\n      body: JSON.stringify({\n        cart,\n      }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// UPDATE USER PURCHASES ARRAY\nexport const updatePurchases = async (userId, purchase) => {\n  try {\n    const response = await fetch(url + \"/user/purchases/\" + userId, {\n      method: \"PUT\",\n      headers: params,\n      body: JSON.stringify({\n        purchase,\n      }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\n// GET PURCHASE DETAIL\nexport const purchaseDetail = async (userId, index) => {\n  try {\n    const response = await fetch(url + \"/purchase/detail/\" + userId, {\n      method: \"POST\",\n      headers: params,\n      body: JSON.stringify({\n        index,\n      }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n/****************************************************************** CHECKOUT    *******************************************************************/\n\n// CHECK STOCK BEFORE CHECKOUT AND REDIRECT\nexport const checkStock = async (id) => {\n  try {\n    const response = await fetch(url + \"/checkout/\" + id, {\n      method: \"POST\",\n      headers: params,\n    });\n    const data = await response.json();\n    return { data, status: response.status };\n  } catch (err) {\n    return err;\n  }\n};\n\n//SUCCESS TEST\nexport const success = async () => {\n  try {\n    const resposne = await fetch(url + \"/success\");\n    const data = await resposne.json();\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const updateSuccessPurchase = async (id, index) => {\n  try {\n    const response = await fetch(url + \"/user/success/\" + id, {\n      method: \"PUT\",\n      headers: params,\n      body: JSON.stringify({\n        index,\n      }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n/******************************************************************* TRANSACTIONS ***************************/\n\n// NEW TRANSACTION\nexport const newTransaction = async (\n  userId,\n  transaction_id,\n  status,\n  items,\n  date\n) => {\n  try {\n    const response = await fetch(url + \"/transaction/new\", {\n      method: \"POST\",\n      headers: params,\n      body: JSON.stringify({\n        userId,\n        transaction_id,\n        status,\n        items,\n        date,\n      }),\n    });\n    const data = await response.json();\n  } catch (err) {\n    return err;\n  }\n};\n\n// GET  SPECIFIC TRANSACTION\nexport const getTransaction = async (transaction_id) => {\n  try {\n    const response = await fetch(url + \"/transaction/\" + transaction_id);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// GET USER TRANSACTIONS\nexport const userTransactions = async (userId) => {\n  try {\n    const response = await fetch(url + \"/transactions/user/\" + userId);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n//UPDATE TRANSACTION STATUS\nexport const updateTransactionStatus = async (id, status) => {\n  try {\n    await fetch(url + \"/transaction/update\", {\n      method: \"PUT\",\n      headers: params,\n      body: JSON.stringify({\n        id,\n        status,\n      }),\n    });\n  } catch (err) {\n    return err;\n  }\n};\n\n// GET ALL TRANSACTIONS\nexport const allTransactions = async () => {\n  try {\n    const response = await fetch(url + \"/transactions/all\", {\n      method: \"GET\",\n      headers: params,\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n/******************************************************************* CATEGORIES  *******************************************************************/\n\n// GET ALL CATEGORIES\nexport const getCategories = async () => {\n  try {\n    const response = await fetch(url + \"/categories\");\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// GET PRODUCT BY CATEGORY\nexport const getProductByCat = async (category) => {\n  try {\n    const response = await fetch(url + \"/category/product\", {\n      method: \"POST\",\n      headers: params,\n      body: JSON.stringify({ category }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {}\n};\n\n// NEW CATEGORY\nexport const newCategory = async (name) => {\n  try {\n    const response = await fetch(url + \"/category/new\", {\n      method: \"POST\",\n      headers: params,\n      body: JSON.stringify({\n        name,\n      }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {}\n};\n","import { useEffect, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardImg, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\n\n// DISPLAY THE PRODUCTS CARDS WITH TITLE; PRICE AND IMAGE\n\nexport const ProductCard = (props) => {\n  const [, setColors] = useState([]);\n  const [, setSizes] = useState([]);\n  const { id, name, price, images, size, color } = props;\n\n  useEffect(() => {\n    // FIND ALL THE UNIQUE COLORS AND SIZES\n    let sizeArr = [],\n      colorArr = [];\n    if (size && color) {\n      if (sizeArr.indexOf(size) === -1) sizeArr.push(size);\n      if (colorArr.indexOf(color) === -1) colorArr.push(color);\n      setSizes(sizeArr);\n      setColors(colorArr);\n    }\n  }, []);\n\n  return (\n    <div className=\"pb-2\">\n      <Link\n        to={\"/product?\" + id}\n        id={id}\n        style={{ textDecoration: \"none\" }}\n        className=\"text-dark\"\n      >\n        <Card className=\"w-75 mx-auto text-center\">\n          <CardBody>\n            <CardTitle tag=\"h5\">{name}</CardTitle>\n            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n              $ {price.toLocaleString()}\n            </CardSubtitle>\n            <CardImg\n              top\n              width=\"auto\"\n              src={images.length ? images[0].url : null}\n              alt=\"Product image\"\n              style={{ height: \"150px\" }}\n            />\n          </CardBody>\n        </Card>\n      </Link>\n    </div>\n  );\n};\n","import { createContext } from \"react\";\n\nexport const userContext = createContext({});\nexport const userCartContext = createContext([]);\n","import { Input } from \"reactstrap\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router\";\n\n// SEARCH PRODUCTS ON INPUT\n\nexport const SearchProduct = (props) => {\n  const { products } = props;\n  const [productName, setProductName] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [productId, setProductId] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  const nameHandler = (e) => {\n    let matches = [];\n    // VALIDATES THE INPUT WITH POSSIBLE SUGGESTIONS\n    if (e.target.value.length) {\n      matches = products.filter((elem) => {\n        const regex = new RegExp(`${e.target.value}`, \"gi\");\n        return elem.name.match(regex);\n      });\n    }\n    setSuggestions(matches);\n    setProductName(e.target.value);\n  };\n\n  const suggestionHandler = (product) => {\n    setProductName(product.name);\n    setProductId(product._id);\n    setSuggestions([]);\n    setRedirect(true);\n  };\n\n  return (\n    <div>\n      {redirect && <Redirect to={\"/product/?\" + productId} />}\n      <div className=\" mx-auto  search my-3\">\n        <Input onChange={nameHandler} value={productName} />\n        <i\n          onClick={() => setRedirect(true)}\n          className=\"fas fa-search searchIcon text-center\"\n        ></i>\n      </div>\n      {suggestions &&\n        suggestions.map((suggestion, index) => {\n          return (\n            <div\n              key={index}\n              className=\"suggestion mx-auto p-1\"\n              onClick={() => suggestionHandler(suggestion)}\n            >\n              {suggestion.name}\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n","import { useContext, useEffect, useState } from \"react\";\nimport { getProducts } from \"../API/API\";\nimport { ProductCard } from \"./ProductCard\";\nimport uniqid from \"uniqid\";\nimport { Row, Col } from \"reactstrap\";\nimport { userContext } from \"../Context/Contexts\";\nimport { Redirect } from \"react-router\";\nimport { SearchProduct } from \"./SearchProduct\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  const [products, setProducts] = useState([]);\n\n  const { user } = useContext(userContext);\n\n  // GET ALL PRODUCTS\n  useEffect(() => {\n    (async () => {\n      setProducts(await getProducts());\n    })();\n    return () => {\n      setProducts();\n    };\n  }, []);\n\n  return user ? (\n    user.admin ? (\n      <Redirect to=\"/admin-productos\" />\n    ) : (\n      <div>\n        <SearchProduct products={products} />\n        <Row className=\"container mx-auto\">\n          {products\n            ? products.map((product) => {\n                const { name, _id, description, images, size, color, price } =\n                  product;\n                return (\n                  <Col\n                    md={6}\n                    lg={3}\n                    xs={12}\n                    className=\"mt-5 mx-auto mb-2\"\n                    key={_id}\n                  >\n                    <ProductCard\n                      key={uniqid()}\n                      id={_id}\n                      name={name}\n                      price={price}\n                      images={images}\n                      description={description}\n                      size={size}\n                      color={color}\n                    />\n                  </Col>\n                );\n              })\n            : null}\n        </Row>\n      </div>\n    )\n  ) : (\n    <h5 className=\"text-center mt-5\">\n      Please{\" \"}\n      <Link to=\"/login\" className=\"text-primary\">\n        Log in\n      </Link>\n    </h5>\n  );\n};\n\nexport default Home;\n","import React, { useState, useContext } from \"react\";\nimport { userContext } from \"../../Context/Contexts\";\nimport { logout } from \"../../API/API\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from \"reactstrap\";\n\n/* DISPLAY THE ADMIN NAV BAR, WITH LINKS TO SELLS, CATEGORIES AND \nPRODUCTS LINKS */\n\nexport const AdminNav = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const { user, setUser } = useContext(userContext);\n\n  const logOut = async () => {\n    await logout();\n    setUser(null);\n    window.location.replace(\"/ecommerce-client/\");\n  };\n\n  return (\n    <div className=\"px-2 container\">\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/ecommerce-client/#/admin-productos\">\n          {user.username}\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/ecommerce-client/#/admin-transactions\">\n                Transactions\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/ecommerce-client/#/admin-categorias\">\n                Categories\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/ecommerce-client/#/admin-productos\">\n                Products\n              </NavLink>\n            </NavItem>\n            {user ? (\n              <NavItem>\n                <NavLink href=\"#\" onClick={logOut}>\n                  Log out\n                </NavLink>\n              </NavItem>\n            ) : null}\n          </Nav>\n        </Collapse>\n      </Navbar>\n      <div className=\"home-title\">\n        <h1>Lorem</h1>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { userContext } from \"../Context/Contexts\";\nimport { logout } from \"../API/API\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Col,\n  Row,\n} from \"reactstrap\";\n\n// DISPLAY THE CLIENT NAV BAR\n\nexport const ClientNav = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const { user, setUser } = useContext(userContext);\n\n  useEffect(() => {\n    if (user) {\n      setCartItems(user.cart);\n    }\n  }, [user]);\n\n  const logOut = async () => {\n    await logout();\n    setUser(null);\n    setCartItems(null);\n  };\n\n  return (\n    <div className=\"px-lg-2 container\">\n      {user ? (\n        <Row className=\"bg-light \">\n          <Col xs={6} md={8}>\n            <Navbar light expand=\"md\">\n              <NavbarBrand className=\"px-1\" href=\"/ecommerce-client/\">\n                Logo\n              </NavbarBrand>\n              <NavbarToggler onClick={toggle} />\n              <Collapse isOpen={isOpen} navbar>\n                <Nav navbar>\n                  <NavItem>\n                    <NavLink href=\"/ecommerce-client/#/\">Products</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"/ecommerce-client/#/transactions/\">\n                      Transactions\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"/ecommerce-client/#/categories\">\n                      Categories\n                    </NavLink>\n                  </NavItem>\n                  {user ? (\n                    <NavItem>\n                      <NavLink\n                        href=\"#\"\n                        onClick={() => {\n                          logOut();\n                        }}\n                      >\n                        Log out\n                      </NavLink>\n                    </NavItem>\n                  ) : null}\n                </Nav>\n              </Collapse>\n            </Navbar>\n          </Col>\n          <Col>\n            <Navbar light expand=\"xs\">\n              <Nav navbar>\n                <NavItem>\n                  <NavLink>Hello, {user.username}</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"cart\" href=\"/ecommerce-client/#/cart\">\n                    <i className=\"fas fa-shopping-cart\"></i>\n                    {cartItems && cartItems.length ? (\n                      <div className=\"arrow\">\n                        <p>{cartItems.length}</p>\n                      </div>\n                    ) : null}\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </Navbar>\n          </Col>\n        </Row>\n      ) : (\n        <Navbar>\n          <a href=\"/ecommerce-client/#/login\" className=\"btn btn-primary\">\n            Log in\n          </a>\n        </Navbar>\n      )}\n      <div className=\"home-title\">\n        <h1>Lorem</h1>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { userContext } from \"../Context/Contexts\";\nimport { AdminNav } from \"./Admin/AdminNav\";\nimport { ClientNav } from \"./ClientNav\";\n\nexport const NavBar = () => {\n  const { user } = useContext(userContext);\n  return user ? user.admin ? <AdminNav /> : <ClientNav /> : <ClientNav />;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nexport const Token = (props) => {\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {\n    const url = window.location.href;\n    const urlToken = url.split(\"?\")[1];\n    //split token=\n    const localToken = urlToken.split(\"=\")[1];\n    setToken(urlToken.split(\"=\")[1]);\n    window.history.pushState({}, \"\", url.split(\"?\")[0]);\n    localStorage.setItem(\"token\", localToken);\n  }, []);\n  return <div>{token ? <Redirect to=\"/\" /> : null}</div>;\n};\n","import { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport \"../Styles/google-btn.css\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { localUser } from \"../API/API\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { userContext } from \"../Context/Contexts\";\n\nexport const LoginScreen = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [logged, setLogged] = useState(false);\n  const [loginError, setLogginErros] = useState(\"\");\n  const { setUser } = useContext(userContext);\n\n  const emailHandler = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const passwordHandler = (e) => {\n    setPassword(e.target.value);\n  };\n\n  return (\n    <Form className=\"container  mt-4 bg-dark text-light p-4 rounded\">\n      <FormGroup>\n        <Label for=\"email\">Email</Label>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email..\"\n          value={email}\n          onChange={emailHandler}\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"passowrd\">Password</Label>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password..\"\n          value={password}\n          onChange={passwordHandler}\n        />\n      </FormGroup>\n      {loginError ? (\n        <FormGroup className=\"text-center pt-1\">\n          <Label>{loginError}</Label>\n        </FormGroup>\n      ) : null}\n      <FormGroup className=\"text-center\">\n        <Button\n          className=\"mt-2 mb-1 bg-primary w-25\"\n          onClick={async () => {\n            const response = await localUser(email, password);\n            if (response.status === 200) {\n              setLogged(true);\n              setUser(response.data.user);\n            }\n            if (response.status === 500) setLogginErros(response.data);\n          }}\n        >\n          Log in\n        </Button>\n      </FormGroup>\n      <FormGroup className=\"d-flex justify-content-center pt-2\">\n        <div className=\"google-btn\">\n          <div className=\"google-icon-wrapper\">\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n              alt=\"\"\n              className=\"google-icon\"\n            />\n          </div>\n          {/* CHANGE URL ON */}\n          <a\n            href=\"https://ecommercedemosite.herokuapp.com/user/google/login\"\n            className=\"btn-text\"\n          >\n            <b>Log in with google</b>\n          </a>\n        </div>\n      </FormGroup>\n      <hr />\n      <FormGroup className=\"text-center\">\n        <Link to=\"/newaccount\" className=\"btn bg-success\">\n          Crear cuenta\n        </Link>\n      </FormGroup>\n      {logged ? <Redirect to=\"/\" /> : null}\n    </Form>\n  );\n};\n","import { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { useState, useEffect } from \"react\";\nimport { newUser } from \"../API/API\";\nimport { Redirect } from \"react-router-dom\";\n\nexport const NewAccount = () => {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [createAccErrors, setCreateAccErrors] = useState([]);\n  const [accCreated, setAccCreated] = useState(false);\n  const [count, setCount] = useState(3);\n  const [redirect, setRedirect] = useState(false);\n\n  const emailHandler = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const usernameHandler = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const passwordHandler = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const confirmHandler = (e) => {\n    setConfirm(e.target.value);\n  };\n\n  useEffect(() => {\n    setAccCreated(false);\n  }, []);\n\n  useEffect(() => {\n    if (accCreated) {\n      if (count > 0) {\n        setTimeout(() => {\n          setCount(count - 1);\n        }, 1000);\n      }\n    }\n  }, [accCreated, count]);\n\n  useEffect(() => {\n    if (count === 0) setRedirect(true);\n  }, [count]);\n\n  return (\n    <Form className=\"container mt-5 text-light p-2 bg-dark rounded\">\n      {accCreated ? (\n        <FormGroup className=\"text-center\">\n          <div className=\"p-5\">\n            <Label className=\"p-5\">Account created</Label>\n            <br />\n            <Label>Redirecting in {count}</Label>\n          </div>\n        </FormGroup>\n      ) : (\n        <div>\n          <FormGroup>\n            <Label for=\"email\">Email</Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email\"\n              onChange={emailHandler}\n              vaue={email}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"username\">Usuario</Label>\n            <Input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Enter your username\"\n              onChange={usernameHandler}\n              value={username}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"password\">Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter your password\"\n              onChange={passwordHandler}\n              value={password}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"confirmPassowrd\">Email</Label>\n            <Input\n              type=\"password\"\n              name=\"confirm\"\n              placeholder=\"Confirm password\"\n              onChange={confirmHandler}\n              value={confirm}\n            />\n          </FormGroup>\n          {createAccErrors\n            ? createAccErrors.map((error) => {\n                return (\n                  <FormGroup className=\"text-center\">\n                    <Label>{error.msg}</Label>\n                  </FormGroup>\n                );\n              })\n            : null}\n          <FormGroup className=\"d-flex justify-content-center\">\n            <Button\n              className=\"btn bg-primary mt-3 w-25\"\n              onClick={async () => {\n                let info = await newUser(email, username, password, confirm);\n                if (info.response.status === 500) {\n                  setCreateAccErrors(info.data.errors);\n                }\n                if (info.response.status === 200) setAccCreated(true);\n              }}\n            >\n              Crear\n            </Button>\n          </FormGroup>\n        </div>\n      )}\n      {redirect ? <Redirect to=\"/login\" /> : null}\n    </Form>\n  );\n};\n","import { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { getCategories, addNewProduct } from \"../../API/API\";\nimport { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport uniqid from \"uniqid\";\n\n/* ADDS A NEW PRODUCT WITH ALL THE DETAILS AND 1 IMAGE, \nMORE IMAGES CAN BE ADDED LATER. REDIRECTS TO SINGLEPRODUCT */\n\nexport const AddProduct = () => {\n  const [productName, setProductName] = useState(\"\");\n  const [productPrice, setProductPrice] = useState(0);\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [quantity, setQuantity] = useState(0);\n  const [categories, setCategories] = useState([]);\n  const [showProductForm, setShowProductForm] = useState(false);\n  const [productErrors, setProductErrors] = useState();\n  const [productId, setProductId] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const nameHandler = (e) => {\n    setProductName(e.target.value);\n  };\n\n  const categoryHandler = (e) => {\n    const index = e.target.selectedIndex;\n    const element = e.target.options[index];\n    setCategoryId(element.id);\n  };\n\n  const priceHandler = (e) => {\n    setProductPrice(e.target.value);\n  };\n\n  const sizeHandler = (e) => {\n    setSize(e.target.value);\n  };\n\n  const colorHandler = (e) => {\n    setColor(e.target.value);\n  };\n\n  const stockHandler = (e) => {\n    setQuantity(e.target.value);\n  };\n\n  const imageHandler = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  const descriptionHandler = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const productForm = () => {\n    setShowProductForm(!showProductForm);\n    resetState();\n  };\n\n  const resetState = () => {\n    setCategoryId(\"\");\n    setProductName(\"\");\n    setProductPrice(0);\n    setColor(\"\");\n    setQuantity(0);\n    setSize(\"\");\n    setDescription(\"\");\n  };\n\n  // GET ALL CATEGORIES\n  useEffect(() => {\n    (async () => {\n      setCategories(await getCategories());\n    })();\n    return () => setCategories();\n  }, []);\n\n  return categories ? (\n    !showProductForm ? (\n      <div className=\"text-center mb-2\">\n        <Button className=\"bg-primary\" onClick={productForm}>\n          Add new product\n        </Button>\n      </div>\n    ) : (\n      <div className=\" mb-2\">\n        <div className=\"text-center\">\n          <Button className=\"bg-primary\" onClick={productForm}>\n            Hide\n          </Button>\n        </div>\n        <Form encType=\"multipart/form-data\">\n          <FormGroup>\n            <Label>Category</Label>\n            <Input\n              type=\"select\"\n              name=\"category\"\n              onChange={categoryHandler}\n              defaultValue={categoryId}\n            >\n              <option value=\"\" disabled>\n                Select a category\n              </option>\n              {categories.map((cat) => {\n                return (\n                  <option id={cat._id} key={cat._id}>\n                    {cat.name}\n                  </option>\n                );\n              })}\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label>Product name</Label>\n            <Input\n              name=\"productName\"\n              autoComplete=\"off\"\n              value={productName}\n              placeholder=\"enter product name\"\n              onChange={nameHandler}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>Product description</Label>\n            <Input\n              name=\"description\"\n              autoComplete=\"off\"\n              value={description}\n              onChange={descriptionHandler}\n              placeholder=\"brief description\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>Product price</Label>\n            <Input\n              type=\"number\"\n              name=\"productPrice\"\n              autoComplete=\"off\"\n              value={productPrice}\n              onChange={priceHandler}\n              placeholder=\"Enter product price\"\n              onFocus={() => setProductPrice(\"\")}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>Product size</Label>\n            <Input\n              name=\"size\"\n              autoComplete=\"off\"\n              value={size}\n              placeholder=\"enter product size\"\n              onChange={sizeHandler}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>Product color</Label>\n            <Input\n              name=\"color\"\n              autoComplete=\"off\"\n              value={color}\n              placeholder=\"enter product color\"\n              onChange={colorHandler}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>Product stock</Label>\n            <Input\n              type=\"number\"\n              name=\"quantity\"\n              autoComplete=\"off\"\n              value={quantity}\n              placeholder=\"enter product quantity/stock\"\n              onChange={stockHandler}\n              onFocus={() => setQuantity(\"\")}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>Product picture</Label>\n            <div>\n              <Input type=\"file\" name=\"image\" onChange={imageHandler} />\n            </div>\n          </FormGroup>\n          <FormGroup className=\"text-center mt-3\">\n            {productErrors\n              ? productErrors.map((err) => {\n                  return (\n                    <FormGroup key={uniqid()} className=\"mb-1\">\n                      <Label>{err.msg}</Label>\n                    </FormGroup>\n                  );\n                })\n              : null}\n            {loading ? (\n              <div className=\"spinner-grow\" role=\"status\"></div>\n            ) : (\n              <Button\n                className=\"bg-primary\"\n                onClick={async () => {\n                  setLoading(true);\n                  const result = await addNewProduct(\n                    productName,\n                    categoryId,\n                    productPrice,\n                    color,\n                    size,\n                    quantity,\n                    image,\n                    description\n                  );\n                  setLoading(false);\n                  if (result.status === 500) {\n                    setProductErrors(result.data);\n                  } else {\n                    resetState();\n                    setProductId(result.data._id);\n                  }\n                }}\n              >\n                Add product\n              </Button>\n            )}\n          </FormGroup>\n        </Form>\n        {productId ? <Redirect to={\"/product?\" + productId} /> : null}\n      </div>\n    )\n  ) : (\n    <p>loading</p>\n  );\n};\n","import { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { getCategories, newCategory } from \"../../API/API\";\nimport { useState, useEffect } from \"react\";\n\n/* ADDS A NEW PRODUCT CATEGORY */\n\nexport const AddCategory = () => {\n  const [categoryName, setCategoryName] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [showCategoryForm, setShowCategoryForm] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const nameHandler = (e) => {\n    setCategoryName(e.target.value);\n  };\n\n  const toggleForm = () => setShowCategoryForm(!showCategoryForm);\n\n  useEffect(() => {\n    (async () => {\n      setCategories(await getCategories());\n    })();\n  }, []);\n\n  return !showCategoryForm ? (\n    <div className=\"text-center mb-2\">\n      <Button className=\"bg-primary\" onClick={toggleForm}>\n        Add new category\n      </Button>\n    </div>\n  ) : (\n    <div className=\"text-center mb-2\">\n      <Button className=\"bg-primary\" onClick={toggleForm}>\n        Hide\n      </Button>\n      <Form>\n        <FormGroup>\n          <Label>Category name</Label>\n          <Input\n            name=\"productCategory\"\n            value={categoryName}\n            placeholder=\"enter category name\"\n            onChange={nameHandler}\n          />\n        </FormGroup>\n        <FormGroup className=\"text-center mt-3\">\n          {loading ? (\n            <div className=\"spinner-grow\"></div>\n          ) : (\n            <Button\n              className=\"bg-primary\"\n              onClick={async () => {\n                setLoading(true);\n                await newCategory(categoryName);\n                setLoading(false);\n                setShowCategoryForm(false);\n              }}\n            >\n              Add category\n            </Button>\n          )}\n        </FormGroup>\n      </Form>\n    </div>\n  );\n};\n","import { getProducts } from \"../../API/API\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { ProductCard } from \"../ProductCard\";\nimport uniqid from \"uniqid\";\nimport { Col, Row } from \"reactstrap\";\nimport { userContext } from \"../../Context/Contexts\";\nimport { Redirect } from \"react-router-dom\";\nimport { AddProduct } from \"./AddProduct\";\nimport { AddCategory } from \"./AddCategory\";\nimport { SearchProduct } from \"../SearchProduct\";\n\n/* DISPLAY THE ADMIN PRODUDCT PAGE WITH ALL THE PRODUCTS */\n\nexport const AdminHome = () => {\n  const [products, setProducts] = useState([]);\n\n  const { user } = useContext(userContext);\n\n  useEffect(() => {\n    (async () => {\n      setProducts(await getProducts());\n    })();\n\n    return () => setProducts();\n  }, []);\n\n  return user ? (\n    !user.admin ? (\n      <Redirect to=\"/\" />\n    ) : (\n      <Col className=\"mt-5 mx-auto container\">\n        <Row>\n          <Col md={6}>\n            <AddProduct />\n          </Col>\n          <Col md={6}>\n            <AddCategory />\n          </Col>\n        </Row>\n        <Row>\n          <div className=\"text-center\">\n            <SearchProduct products={products} />\n          </div>\n          {products\n            ? products.map((product) => {\n                const { name, _id, images, description, color, size, price } =\n                  product;\n                return (\n                  <Col\n                    md={6}\n                    lg={3}\n                    xs={12}\n                    className=\"mt-2 mx-auto\"\n                    key={uniqid()}\n                  >\n                    <ProductCard\n                      key={uniqid()}\n                      id={_id}\n                      name={name}\n                      price={price}\n                      images={images}\n                      description={description}\n                      color={color}\n                      size={size}\n                    />\n                  </Col>\n                );\n              })\n            : null}\n        </Row>\n      </Col>\n    )\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n","import { useState } from \"react\";\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { updateProduct, deleteProductInfo } from \"../../../API/API\";\n\n/* ALLOWS TO EDIT THE PRICE AND STOCK,\n DELETE A SPECIFIC PRODUCT SIZE OR COLOR */\n\nexport const ProductInfoUpdate = (props) => {\n  const [editProduct, setEditProduct] = useState(false);\n  const [quantity, setQuantity] = useState(props.quantity);\n\n  const quantityHandler = (e) => {\n    setQuantity(e.target.value);\n  };\n\n  return editProduct ? (\n    <Form>\n      <FormGroup>\n        <Label>Size: {props.size}</Label>\n      </FormGroup>\n      <FormGroup>\n        <Label>Color: {props.color}</Label>\n      </FormGroup>\n      <FormGroup>\n        <Label>Quantity to add to stock</Label>\n        <Input value={quantity} onChange={quantityHandler} type=\"number\" />\n      </FormGroup>\n\n      <Button\n        className=\"bg-primary my-1\"\n        onClick={() => {\n          const edit = updateProduct(\n            props.id,\n            props.size,\n            quantity,\n            props.color,\n            props.description\n          );\n          if (edit) {\n            setEditProduct(!editProduct);\n          }\n        }}\n      >\n        Add\n      </Button>\n    </Form>\n  ) : (\n    <div className=\"border border-dark m-1\">\n      <p>Size: {props.size}</p>\n      <p>Color: {props.color}</p>\n      <p>Stock: {quantity}</p>\n      <div className=\"d-flex justify-content-around\">\n        <Button\n          className=\"bg-primary mb-1\"\n          onClick={() => setEditProduct(!editProduct)}\n        >\n          Edit\n        </Button>\n        <Button\n          className=\"bg-danger mb-1\"\n          onClick={async () => {\n            const deleted = await deleteProductInfo(props.id, props.index);\n            if (deleted.status === 500) {\n              alert(deleted.msg);\n            } else {\n              let product = deleted;\n              props.setProduct(product);\n            }\n          }}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import { Form, FormGroup, Input, Label, Button } from \"reactstrap\";\nimport { useEffect, useState } from \"react\";\nimport { addImagesToProduct } from \"../../../API/API\";\n// ADD PRODUCTS IMAGE\n\nexport const AddProductImage = (props) => {\n  const [images] = useState(props.product.images);\n  const [imagesToAdd, setImagesToAdd] = useState([]);\n  const [imagex, setImage] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const imageHandler = (e) => {\n    setImage((old) => [...old, e.target.files[0]]);\n  };\n\n  useEffect(() => {\n    let count = [];\n    for (let i = images.length; i < 5; i++) {\n      count.push(i);\n    }\n    setImagesToAdd(count);\n  }, []);\n\n  return (\n    <Form>\n      {imagesToAdd.map((ele, index) => {\n        return (\n          <FormGroup className=\"mt-1\" key={index}>\n            <Label>Product picture</Label>\n            <div>\n              <Input\n                type=\"file\"\n                multiple\n                name=\"image\"\n                onChange={imageHandler}\n              />\n              <hr />\n            </div>\n          </FormGroup>\n        );\n      })}\n      {isLoading ? (\n        <div className=\"spinner-grow\" role=\"status\"></div>\n      ) : (\n        <Button\n          className=\"bg-primary mb-2\"\n          onClick={async () => {\n            setIsLoading(true);\n            const updatedProduct = await addImagesToProduct(props.id, imagex);\n            props.setProduct(updatedProduct);\n            setIsLoading(false);\n            props.hideForm();\n          }}\n        >\n          add\n        </Button>\n      )}\n    </Form>\n  );\n};\n","import { useState } from \"react\";\nimport { Form, FormGroup, Input, Label, Button } from \"reactstrap\";\nimport { updateProduct } from \"../../../API/API\";\n\n/* FORM TO ADD A NEW PRODUCT DETAIL, MEANING A NEW COLOR,\nSIZE, PRICE AND STOCK */\n\nexport const NewInfoForm = (props) => {\n  const [size, setSize] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [quantity, setQuantity] = useState(0);\n\n  const quantityHandler = (e) => {\n    setQuantity(e.target.value);\n  };\n\n  const sizeHandler = (e) => {\n    setSize(e.target.value);\n  };\n\n  const colorHandler = (e) => {\n    setColor(e.target.value);\n  };\n\n  const resetValues = () => {\n    setColor(\"\");\n    setSize(\"\");\n    setQuantity(0);\n  };\n  return (\n    <Form>\n      <FormGroup>\n        <Label>Size</Label>\n        <Input\n          autoComplete=\"off\"\n          value={size}\n          onChange={sizeHandler}\n          placeholder=\"Product size\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label>Color</Label>\n        <Input\n          autoComplete=\"off\"\n          value={color}\n          onChange={colorHandler}\n          placeholder=\"Product color\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label>Quantity</Label>\n        <Input\n          autoComplete=\"off\"\n          value={quantity}\n          onChange={quantityHandler}\n          type=\"number\"\n          placeholder=\"Enter product quantity\"\n          onFocus={() => setQuantity(\"\")}\n        />\n      </FormGroup>\n\n      <div className=\"text-center\">\n        <Button\n          className=\"bg-primary my-1\"\n          onClick={async () => {\n            if (size && quantity && color) {\n              const edit = await updateProduct(props.id, size, quantity, color);\n              if (edit) {\n                let product = props.product;\n                product.details.push(edit.data);\n                props.setProduct(product);\n                resetValues();\n                props.setNewInfoForm(!props.newInfoForm);\n              }\n            } else alert(\"please fill all fields\");\n          }}\n        >\n          Add new info\n        </Button>\n      </div>\n    </Form>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport {\n  productDetail,\n  deleteProduct,\n  deleteProductImage,\n  updateDescription,\n} from \"../../../API/API\";\nimport { Col, Row, Button, Input } from \"reactstrap\";\nimport { ProductInfoUpdate } from \"./ProductInfoUpdate\";\nimport uniqid from \"uniqid\";\nimport { AddProductImage } from \"./AddProductImage\";\nimport { NewInfoForm } from \"./NewInfoForm\";\nimport { Redirect } from \"react-router\";\n\n/*  DISPLAY A SINGLE PRODUCT, WITH ALL THE INFO. ALLOWS TO\nDELETE THE PRODUCT, ADD NEW INFO OR ADD NEW IMAGES */\n\nexport const SingleProduct = () => {\n  const [productId, setProductId] = useState(\"\");\n  const [product, setProduct] = useState({});\n  const [showImageForm, setShowImageForm] = useState(false);\n  const [newInfoForm, setNewInfoForm] = useState(false);\n  const [productDeleted, setProductDeleted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [descriptionForm, setShowDescription] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [countDown, setCountDown] = useState(5);\n  const [countDownOver, setCountDownOver] = useState(false);\n\n  // TOGGLE ADD IMAGE FORM\n  const toggleForm = () => {\n    setShowImageForm(!showImageForm);\n  };\n\n  const descriptionHandler = (e) => {\n    setDescription(e.target.value);\n  };\n  // TOGGLE ADD NEW INFO FORM\n  const toggleInfoForm = () => {\n    setNewInfoForm(!newInfoForm);\n  };\n\n  // TOGGLE DESCRIPTION FORM\n  const toggleDescription = () => {\n    setShowDescription(!descriptionForm);\n  };\n\n  // GET THE ID FROM URL\n  useEffect(() => {\n    const url = window.location.href;\n    const id = url.split(\"?\")[1];\n    setProductId(id);\n    return () => setProductId(\"\");\n  }, []);\n\n  // FETCH THE PRODUCT\n  useEffect(() => {\n    if (productId) {\n      (async () => {\n        setProduct(await productDetail(productId));\n      })();\n    }\n  }, [productId]);\n\n  // GET THE DESCRIPTION\n  useEffect(() => {\n    setDescription(product.description);\n  }, [product]);\n\n  useEffect(() => {\n    if (countDown === 0) {\n      setCountDown(0);\n      setCountDownOver(true);\n    }\n\n    if (countDown > 0) {\n      setTimeout(() => {\n        setCountDown(countDown - 1);\n      }, 1000);\n    }\n  }, [countDown]);\n\n  return productId ? (\n    product.details ? (\n      <div className=\"container mt-5  pb-2\">\n        <Row>\n          <Col xs={12} md={6} className=\" bg-light \">\n            <h1 className=\"text-center\">{product.name}</h1>\n            {descriptionForm ? (\n              <div className=\"text-center\">\n                <Input\n                  value={description}\n                  placeholder={description}\n                  onChange={descriptionHandler}\n                />\n                <Button\n                  className=\"bg-primary mt-2\"\n                  onClick={() => {\n                    updateDescription(productId, description);\n                    toggleDescription();\n                  }}\n                >\n                  update\n                </Button>\n              </div>\n            ) : (\n              <div className=\"text-center\">\n                <p>{description}</p>\n                <i onClick={toggleDescription} className=\"far fa-edit\"></i>\n              </div>\n            )}\n            <div className=\"text-center\">\n              <p> Price: ${product.price.toLocaleString()}</p>\n            </div>\n            <hr />\n            <div className=\"d-flex justify-content-around\">\n              <Button className=\"bg-primary mb-1\" onClick={toggleInfoForm}>\n                {newInfoForm ? \"Hide\" : \"Add new info\"}\n              </Button>\n              <Button\n                className=\"bg-danger mb-1\"\n                onClick={async () => {\n                  // TODO REMOVE FROM ALL USERS CART\n                  await deleteProduct(productId);\n                  setProductDeleted(true);\n                }}\n              >\n                Delete product\n              </Button>\n            </div>\n            {newInfoForm ? (\n              <NewInfoForm\n                newInfoForm={newInfoForm}\n                setNewInfoForm={setNewInfoForm}\n                id={productId}\n                setProduct={setProduct}\n                product={product}\n              />\n            ) : null}\n            <Row>\n              {product.details.map((elem, index) => {\n                const { color, size, quantity } = elem;\n                return (\n                  <Col xs={12} md={6} className=\"text-center\" key={uniqid()}>\n                    <ProductInfoUpdate\n                      price={product.price}\n                      color={color}\n                      size={size}\n                      quantity={quantity}\n                      id={productId}\n                      index={index}\n                      setProduct={setProduct}\n                      product={product}\n                    />\n                  </Col>\n                );\n              })}\n            </Row>\n          </Col>\n          <Col xs={6} className=\"mx-auto text-center\">\n            <Row>\n              {product.images.map((image, index) => {\n                return (\n                  <Col xs={12} md={6} className=\"mx-auto\" key={uniqid()}>\n                    <img className=\"w-100 h-75 p-2 \" src={image.url} alt=\"\" />\n                    {isLoading ? (\n                      <div className=\"spinner-grow\" role=\"status\"></div>\n                    ) : (\n                      <Button\n                        className=\"bg-danger\"\n                        onClick={async () => {\n                          setIsLoading(true);\n                          const updatedProduct = await deleteProductImage(\n                            index,\n                            productId\n                          );\n                          setProduct(updatedProduct);\n                          setIsLoading(false);\n                        }}\n                      >\n                        Delete\n                      </Button>\n                    )}\n                  </Col>\n                );\n              })}\n            </Row>\n            {product.images.length === 5 ? null : (\n              <Button className=\"bg-primary mb-2\" onClick={toggleForm}>\n                {showImageForm ? \"hide\" : \"Add product image\"}\n              </Button>\n            )}\n            {showImageForm ? (\n              <AddProductImage\n                product={product}\n                setProduct={setProduct}\n                id={productId}\n                hideForm={toggleForm}\n              />\n            ) : null}\n          </Col>\n        </Row>\n        {productDeleted ? <Redirect to=\"/#/admin-productos\" /> : null}\n      </div>\n    ) : (\n      <p>loading</p>\n    )\n  ) : (\n    <div className=\"text-center mt-5\">\n      <h5>Product not found</h5>\n      <p>Redirecting in: {countDown}</p>\n      {countDownOver ? (\n        <Redirect to=\"/ecommerce-client/#/admin-productos\" />\n      ) : null}\n    </div>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ColorSquares = styled.div`\n  background-color: ${(props) => props.color};\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n`;\n","import { Link } from \"react-router-dom\";\n\nexport const GoBackArrow = (props) => {\n  return (\n    <Link to={props.route}>\n      <i style={{ fontSize: \"50px\" }} className=\"fas fa-angle-double-left\"></i>\n    </Link>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption,\n} from \"reactstrap\";\n\nexport const ProductSlideShow = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex =\n      activeIndex === props.images.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const previous = () => {\n    if (animating) return;\n    const prevIndex =\n      activeIndex === 0 ? props.images.length - 1 : activeIndex - 1;\n    setActiveIndex(prevIndex);\n  };\n\n  const goToIndex = (index) => {\n    if (animating) return;\n    setActiveIndex(index);\n  };\n\n  const slides = props.images.map((image, index) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => {\n          setAnimating(false);\n        }}\n        className=\"text-center\"\n        key={index}\n      >\n        <img src={image.url} alt={image.name} />\n        <CarouselCaption captionText=\"\" />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel activeIndex={activeIndex} next={next} previous={previous}>\n      <CarouselIndicators\n        items={props.images}\n        activeIndex={activeIndex}\n        onClickHandler={goToIndex}\n      />\n      {slides}\n      <CarouselControl\n        direction=\"prev\"\n        directionText=\"previous\"\n        onClickHandler={previous}\n      />\n      <CarouselControl\n        direction=\"next\"\n        directionText=\"next\"\n        onClickHandler={next}\n      />\n    </Carousel>\n  );\n};\n","import { useState, useEffect, useContext } from \"react\";\nimport { productDetail, addToCart } from \"../API/API\";\nimport { Col, Row, Button } from \"reactstrap\";\nimport { userContext } from \"../Context/Contexts\";\nimport { SingleProduct } from \"./Admin/SingleProduct/SingleProduct\";\nimport { ColorSquares } from \"./Styled/ColorSquares\";\nimport { GoBackArrow } from \"./Styled/GoBackArrow\";\nimport { Redirect } from \"react-router\";\nimport { ProductSlideShow } from \"./ProductSlideShow\";\nimport { Link } from \"react-router-dom\";\n\n// SHOWS THE PRODUCT PAGE WITH ALL THE INFO\n//TODO ADD SLIDESHOW\n\nexport const ProductDetail = (props) => {\n  const [productId, setProductId] = useState(\"\");\n  const [product, setProduct] = useState({});\n  const [sizes, setSizes] = useState([]);\n  const [colors, setColors] = useState([]);\n  const [selectedSize, setSelectedSize] = useState();\n  const [selectedColor, setSelectedColor] = useState();\n  const [loading, setLoading] = useState(false);\n  const [addedToCart, setAddedToCart] = useState(false);\n\n  const { user, setUser } = useContext(userContext);\n\n  // GET THE ID FROM URL\n  useEffect(() => {\n    const url = window.location.href;\n    const id = url.split(\"?\")[1];\n    setProductId(id);\n    return () => setProductId(\"\");\n  }, []);\n\n  // FETCH THE PRODUCT\n  useEffect(() => {\n    if (productId) {\n      (async () => {\n        const token = \"Bearer \" + localStorage.getItem(\"token\");\n\n        setProduct(await productDetail(productId, token));\n      })();\n    }\n  }, [productId]);\n\n  // GET THE UNIQUE SIZES\n  useEffect(() => {\n    if (product.details) {\n      const { details } = product;\n      let availableSizes = {};\n      details.forEach((elem) => {\n        if (!availableSizes[elem.size]) {\n          availableSizes[elem.size] = 1;\n        }\n      });\n      for (let key in availableSizes) {\n        setSizes((old) => [...old, key]);\n      }\n    }\n  }, [product]);\n\n  // FIND THE COLORS OF THE SELECTED SIZE\n  const showColorsBySize = (size) => {\n    const { details } = product;\n    let colorsBySize = {};\n    let colors = [];\n    details.forEach((elem) => {\n      if (!colorsBySize[elem.color] && elem.size === size) {\n        colorsBySize[elem.color] = 1;\n      }\n    });\n    for (let key in colorsBySize) {\n      colors.push(key);\n    }\n    setColors(colors);\n  };\n\n  // SELECT SIZE\n  const selectSize = (elem) => {\n    setSelectedSize(elem);\n    showColorsBySize(elem);\n  };\n\n  const resetState = () => {\n    setSelectedColor(\"\");\n    setSelectedSize(\"\");\n    setAddedToCart(false);\n  };\n\n  const productAdded = () => {\n    setAddedToCart(true);\n  };\n\n  const GoToCart = () => {\n    return (\n      <div>\n        <p>Product added to cart</p>\n        <div>\n          <Link to=\"/cart\" className=\"bg-success btn btn-primary mb-2 mx-5\">\n            Go to cart\n          </Link>\n          <Button\n            className=\"bg-primary btn btn-primary mb-2 mx-5\"\n            onClick={resetState}\n          >\n            add another\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  return user ? (\n    user.admin ? (\n      <SingleProduct />\n    ) : product.details ? (\n      <div className=\"container bg-light mt-5\">\n        <Row>\n          <Col xs={12} sm={6} className=\" text-center\">\n            <GoBackArrow route={\"/products\"} />\n            <h1>{product.name}</h1>\n            <p>{product.description}</p>\n            <hr />\n            <Row>\n              <p>Available sizes</p>\n              <div className=\"size-container\">\n                {sizes.map((size, index) => {\n                  return (\n                    <div\n                      id={size}\n                      key={index}\n                      onClick={() => {\n                        selectSize(size);\n                      }}\n                      className={selectedSize === size ? \"selected\" : null}\n                    >\n                      {size}\n                    </div>\n                  );\n                })}\n              </div>\n              {selectedSize ? (\n                <div className=\"color-container mt-4\">\n                  <div>\n                    <p>Select a color</p>\n                  </div>\n                  <div>\n                    {colors.map((color, index) => {\n                      return (\n                        <ColorSquares\n                          color={color}\n                          height={\"30px\"}\n                          width={\"30px\"}\n                          key={index}\n                          onClick={() => setSelectedColor(color)}\n                          className={\n                            selectedColor === color ? \"selected\" : \"color\"\n                          }\n                        ></ColorSquares>\n                      );\n                    })}\n                  </div>\n                </div>\n              ) : (\n                <p> Select a size</p>\n              )}\n              {loading ? (\n                <div className=\"spinner-grow mx-auto\"></div>\n              ) : (\n                selectedColor &&\n                selectSize && (\n                  <div>\n                    {addedToCart ? (\n                      <GoToCart />\n                    ) : (\n                      //<p className=\"mt-2\">Product added to cart</p>\n                      <Button\n                        className=\"bg-primary my-4\"\n                        onClick={async () => {\n                          setLoading(true);\n                          const newCart = await addToCart(\n                            props.id,\n                            productId,\n                            selectedSize,\n                            selectedColor,\n                            1\n                          );\n                          setUser(newCart);\n                          setLoading(false);\n                          productAdded();\n                        }}\n                      >\n                        Add to cart\n                      </Button>\n                    )}\n                  </div>\n                )\n              )}\n            </Row>\n          </Col>\n          <Col xs={12} sm={6} className=\"bg-dark \">\n            <ProductSlideShow images={product.images} />\n          </Col>\n        </Row>\n      </div>\n    ) : (\n      <div className=\"d-flex justify-content-center mt-5\">\n        <div className=\"spinner-grow mx-auto\"></div>\n      </div>\n    )\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n","import { useState, useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { Button, Breadcrumb, BreadcrumbItem, Col, Row } from \"reactstrap\";\nimport { getCategories, getProductByCat } from \"../../API/API\";\nimport { ProductCard } from \"../../Components/ProductCard\";\nimport { userContext } from \"../../Context/Contexts\";\n\n// DISPLAY ALL THE CATEGORIES ON A BAR\n\nexport const AdminCategory = () => {\n  const [categories, setCategories] = useState();\n  const [active, setActive] = useState(0);\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { user, setUser } = useContext(userContext);\n\n  // GET ALL CATEGORIES ON LOAD\n  useEffect(() => {\n    (async () => {\n      setCategories(await getCategories());\n    })();\n  }, []);\n\n  // GET SPECIFIC CATEOGRY ITEMS ON CLICK\n  const getProducts = async (name, index) => {\n    setLoading(true);\n    setProducts(await getProductByCat(name));\n    setLoading(false);\n    setActive(index);\n  };\n\n  // GET THE FIRST CATEGORY\n  useEffect(() => {\n    setLoading(true);\n    if (categories) {\n      (async () => {\n        setProducts(await getProductByCat(categories[0]._id));\n        setLoading(false);\n      })();\n    }\n  }, [categories]);\n\n  return !user ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <div className=\"container text-center \">\n      <p className=\"mt-2\">\n        Select a category to find all the products of that category\n      </p>\n      {categories ? (\n        <Breadcrumb>\n          {categories.map((cat, index) => {\n            return (\n              <BreadcrumbItem\n                onClick={() => getProducts(cat._id, index)}\n                className={\n                  active === index ? \"active\" : \"text-primary cursorPointer\"\n                }\n                id={index}\n                key={cat._id}\n              >\n                {cat.name}\n              </BreadcrumbItem>\n            );\n          })}\n        </Breadcrumb>\n      ) : (\n        <div className=\"spinner-grow\"></div>\n      )}\n      {loading ? (\n        <div className=\"spinner-grow\"></div>\n      ) : products ? (\n        <Row>\n          {products.map((pro) => {\n            return (\n              <Col sm={12} md={6} lg={3} key={pro.name} className=\"mx-auto\">\n                <ProductCard\n                  name={pro.name}\n                  images={pro.images}\n                  price={pro.price.toLocaleString()}\n                  id={pro._id}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      ) : (\n        <div className=\"spinner-grow\"></div>\n      )}\n    </div>\n  );\n};\n","import { Col, Row } from \"reactstrap\";\nimport { ColorSquares } from \"./Styled/ColorSquares\";\nimport { useState, useEffect } from \"react\";\nimport { updateUserCart } from \"../API/API\";\n\n// DISPLAY EACH ITEM IN THE CART\n\nexport const CartItem = (props) => {\n  const { product, index, cartItems, id, setUser, setCartItems } = props;\n  const [quantity, setQuantity] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    product.quantity && setQuantity(product.quantity);\n    return () => setQuantity(\"\");\n  }, []);\n\n  const increment = async () => {\n    setLoading(true);\n    setQuantity(quantity + 1);\n    let cart = [...cartItems];\n    cart[index].quantity += 1;\n    setCartItems(cart);\n    await updateUserCart(id, cart);\n\n    setLoading(false);\n  };\n\n  const decrement = async () => {\n    setLoading(true);\n    if (quantity === 1) {\n      alert(\"Item cant have 0 quantity, either remove it. or leave at least 1\");\n      return;\n    }\n    setQuantity(quantity - 1);\n    let cart = [...cartItems];\n    cart[index].quantity -= 1;\n    setCartItems(cart);\n    await updateUserCart(id, cart);\n    setLoading(false);\n  };\n\n  // REMOVE ITEM FROM CART\n  const removeItem = async () => {\n    setLoading(true);\n    let cart = [...cartItems];\n    cart.splice(index, 1);\n    setCartItems(cart);\n    const updatedUser = await updateUserCart(id, cart);\n    setUser(updatedUser);\n    setLoading(false);\n  };\n\n  return (\n    <Col xs={12} md={6} className=\"cart-container\">\n      <h5 className=\"text-center\">{product.name}</h5>\n      <img src={product.image} className=\"cart-img\" alt=\"\" />\n      <div className=\"\">\n        <Row>\n          <Col className=\"cart-card\">\n            <p>Size: {product.size}</p>\n            <ColorSquares\n              color={product.color}\n              height={\"15px\"}\n              width={\"15px\"}\n              className=\"mt-1\"\n            ></ColorSquares>\n          </Col>\n        </Row>\n        <Row className=\"mb-2\">\n          {loading ? (\n            <div className=\"spinner-grow mx-auto\"></div>\n          ) : (\n            <Col className=\"cart-card\">\n              <i className=\"fas fa-minus cursorPointer\" onClick={decrement}></i>\n              <p>{quantity}</p>\n              <i className=\"fas fa-plus cursorPointer\" onClick={increment}></i>\n            </Col>\n          )}\n        </Row>\n      </div>\n      <p className=\"text-center\">\n        Total: ${(product.price * product.quantity).toLocaleString()}\n      </p>\n      <div className=\"text-center cart-button-del\">\n        <i\n          className=\"fas fa-times cursorPointer text-danger\"\n          onClick={removeItem}\n        ></i>\n      </div>\n    </Col>\n  );\n};\n","import { Row } from \"reactstrap\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { userContext } from \"../Context/Contexts\";\nimport { CartItem } from \"./CartItem\";\nimport { checkStock, updatePurchases, newTransaction } from \"../API/API\";\nimport { GoBackArrow } from \"./Styled/GoBackArrow\";\nimport { Redirect } from \"react-router\";\n\n// DISPLAY THE CART PAGE\nexport const Cart = () => {\n  const [cartItems, setCartItems] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const { user, setUser } = useContext(userContext);\n\n  useEffect(() => {\n    user && setCartItems(user.cart);\n  }, [user]);\n\n  useEffect(() => {\n    let sum = 0;\n    cartItems &&\n      cartItems.forEach((item) => {\n        sum += item.price * item.quantity;\n      });\n    setTotal(sum);\n  }, [cartItems]);\n\n  const checkoutButton = async (userId) => {\n    setLoading(true);\n    const response = await checkStock(userId);\n    if (response.status === 200) {\n      const { date_created, id, items, init_point } = response.data;\n      await newTransaction(user._id, id, \"pending\", items, date_created);\n      window.location.replace(init_point);\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n\n  return user ? (\n    <div className=\"container\">\n      <GoBackArrow route={\"/\"} />\n      <Row>\n        {cartItems &&\n          cartItems.map((product, index) => {\n            return (\n              <CartItem\n                product={product}\n                key={index}\n                cartItems={cartItems}\n                setCartItems={setCartItems}\n                index={index}\n                id={user._id}\n                setUser={setUser}\n              />\n            );\n          })}\n      </Row>\n      {cartItems && cartItems.length ? (\n        <div className=\"text-center\">\n          {loading ? (\n            <div className=\"spinner-grow\"></div>\n          ) : (\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => checkoutButton(user._id)}\n            >\n              Checkout\n            </button>\n          )}\n          <div className=\"text-center bg-dark text-light w-75 mx-auto\">\n            <p className=\"mt-3\">Total: ${total.toLocaleString()}</p>\n          </div>\n        </div>\n      ) : (\n        <div className=\"text-center bg-dark text-light w-75 mx-auto\">\n          <p className=\"mt-3\">Cart is empty</p>\n        </div>\n      )}\n    </div>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n","import { useState, useEffect, useContext } from \"react\";\nimport { updateTransactionStatus, updateUserCart } from \"../../API/API\";\nimport { Redirect } from \"react-router\";\nimport { userContext } from \"../../Context/Contexts\";\n\nexport const PurchaseSuccess = () => {\n  const [success, setSuccess] = useState(false);\n  const [preferenceId, setPreferenceId] = useState(\"\");\n  const { user, setUser } = useContext(userContext);\n\n  // UPDATE THE TRANSACTION TO APPROVED STATUS\n  const compareCollectionsId = async () => {\n    const url = window.location.href;\n    if (url.split(\"?\")[1]) {\n      const params = url.split(\"?\")[1].split(\"&\");\n      const id = params[7].split(\"=\")[1];\n      setPreferenceId(id);\n      await updateTransactionStatus(id, \"approved\");\n      const cart = [];\n      const newCart = await updateUserCart(user._id, cart);\n      setUser(newCart);\n      window.history.replaceState(null, null, url.split(\"?\")[0]);\n      setSuccess(true);\n    }\n  };\n\n  useEffect(() => {\n    user && compareCollectionsId();\n  }, [user]);\n\n  return success ? (\n    <Redirect to={\"/transactiondetail?\" + preferenceId} />\n  ) : null;\n};\n","import { useState, useEffect, useContext } from \"react\";\nimport { userContext } from \"../../Context/Contexts\";\nimport { Table } from \"reactstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { GoBackArrow } from \"../Styled/GoBackArrow\";\nimport { userTransactions } from \"../../API/API\";\n\n// DISPLAY THE CURRENT USER TRANSACTIONS\n\nexport const TransactionList = () => {\n  const { user } = useContext(userContext);\n  const [purchases, setPurchases] = useState([]);\n\n  const getUserTransactions = async () => {\n    const transactions = await userTransactions(user._id);\n    setPurchases(transactions);\n  };\n\n  useEffect(() => {\n    if (user) {\n      getUserTransactions();\n    }\n  }, [user]);\n\n  return !user ? null : purchases ? (\n    <div className=\"container text-center\">\n      <h3 className=\"text-center mt-3\"> Transaction List</h3>\n      <Table responsive bordered className=\"mx-auto\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Date</th>\n            <th>Product</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        {purchases.map((elem, index) => {\n          const { date, product, status, transaction_id } = elem;\n          return (\n            <tbody key={index}>\n              <tr>\n                <th\n                  scope=\"row\"\n                  width=\"25%\"\n                  id={index}\n                  className=\"cursorPointer\"\n                >\n                  <Link to={\"/transactiondetail/?\" + transaction_id}>\n                    Id: {transaction_id}\n                  </Link>\n                </th>\n                <td width=\"25%\">{new Date(date).toLocaleDateString()}</td>\n                {product.length > 1 ? (\n                  <td width=\"25%\" className=\"multiple-items\">\n                    {product.map((elem) => {\n                      return elem.title + \" \";\n                    })}\n                  </td>\n                ) : (\n                  <td width=\"25%\">{product[0].title}</td>\n                )}\n                <td width=\"25%\">Status: {status}</td>\n              </tr>\n            </tbody>\n          );\n        })}\n      </Table>\n      <GoBackArrow route={\"/\"} />\n    </div>\n  ) : (\n    <div className=\"mt-5 text-center\">\n      <p className=\"spinner-grow\"></p>\n    </div>\n  );\n};\n","import { useState, useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { purchaseDetail, getTransaction } from \"../../API/API\";\nimport { userContext } from \"../../Context/Contexts\";\nimport { GoBackArrow } from \"../Styled/GoBackArrow\";\n\n// GET THE SPECIFIED TRANSACTION DETAILS\nexport const TransactionDetail = () => {\n  const { user } = useContext(userContext);\n  const [detail, setDetail] = useState();\n  const [total, setTotal] = useState(\"\");\n\n  const getDetail = async () => {\n    let url = window.location.href;\n    let id = url.split(\"?\")[1];\n    const transaction = await getTransaction(id);\n    if (transaction) {\n      setDetail(transaction);\n    }\n  };\n\n  useEffect(() => {\n    getDetail();\n  }, [user]);\n\n  useEffect(() => {\n    let totalPrice = 0;\n    detail &&\n      detail.product.forEach((elem) => {\n        totalPrice += elem.quantity * elem.unit_price;\n      });\n    setTotal(totalPrice);\n  }, [detail]);\n\n  return !user ? null : detail ? (\n    <div className=\"container\">\n      <h3>Transaction ID: {detail.transaction_id}</h3>\n      <p>Date of transaction: {new Date(detail.date).toLocaleDateString()} </p>\n      <p>Status: {detail.status}</p>\n      <h5 className=\"text-center\">Items purchased</h5>\n      <table className=\"table text-center\">\n        <thead>\n          <tr>\n            <th>Item</th>\n            <th>Unit price</th>\n            <th>quantity</th>\n          </tr>\n        </thead>\n        {detail.product.map((elem, index) => {\n          return (\n            <tbody key={index}>\n              <tr>\n                <td>{elem.title}</td>\n                <td>{elem.unit_price.toLocaleString()}</td>\n                <td>{elem.quantity}</td>\n              </tr>\n            </tbody>\n          );\n        })}\n      </table>\n      <h5 className=\"text-center\">Total: {total.toLocaleString()}</h5>\n      <GoBackArrow route={\"/transactions\"} />\n    </div>\n  ) : (\n    <div className=\"mt-5 text-center\">\n      <p className=\"spinner-grow\">hola</p>\n    </div>\n  );\n};\n","import { useState, useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { Breadcrumb, BreadcrumbItem, Col, Row } from \"reactstrap\";\nimport { getCategories, getProductByCat } from \"../API/API\";\nimport { ProductCard } from \"./ProductCard\";\nimport { userContext } from \"../Context/Contexts\";\nimport { GoBackArrow } from \"./Styled/GoBackArrow\";\n\n// DISPLAY ALL THE CATEGORIES ON A BAR\n\nexport const Categories = () => {\n  const [categories, setCategories] = useState();\n  const [active, setActive] = useState(0);\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { user } = useContext(userContext);\n\n  // GET ALL CATEGORIES ON LOAD\n  useEffect(() => {\n    (async () => {\n      setCategories(await getCategories());\n    })();\n    return () => setCategories();\n  }, []);\n\n  // GET SPECIFIC CATEOGRY ITEMS ON CLICK\n  const getProducts = async (name, index) => {\n    setLoading(true);\n    setProducts(await getProductByCat(name));\n    setLoading(false);\n    setActive(index);\n    return () => setProducts([]);\n  };\n\n  // GET THE FIRST CATEGORY\n  useEffect(() => {\n    setLoading(true);\n    if (categories) {\n      (async () => {\n        setProducts(await getProductByCat(categories[0]._id));\n        setLoading(false);\n      })();\n      return () => setProducts([]);\n    }\n  }, [categories]);\n\n  return !user ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <div className=\"container text-center \">\n      <p className=\"mt-2\">\n        Select a category to find all the products of that category\n      </p>\n      {categories ? (\n        <Breadcrumb>\n          {categories.map((cat, index) => {\n            return (\n              <BreadcrumbItem\n                onClick={() => getProducts(cat._id, index)}\n                className={\n                  active === index ? \"active\" : \"text-primary cursorPointer\"\n                }\n                id={index}\n                key={cat._id}\n              >\n                {cat.name}\n              </BreadcrumbItem>\n            );\n          })}\n        </Breadcrumb>\n      ) : (\n        <div className=\"spinner-grow\"></div>\n      )}\n      {loading ? (\n        <div className=\"spinner-grow\"></div>\n      ) : products ? (\n        !products.length ? (\n          <p> No Products found</p>\n        ) : (\n          <Row>\n            {products.map((pro) => {\n              return (\n                <Col sm={12} md={6} lg={3} key={pro.name} className=\"mx-auto\">\n                  <ProductCard\n                    name={pro.name}\n                    images={pro.images}\n                    price={pro.price}\n                    id={pro._id}\n                  />\n                </Col>\n              );\n            })}\n          </Row>\n        )\n      ) : (\n        <div className=\"spinner-grow\"></div>\n      )}\n      <GoBackArrow route=\"/\" />\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { allTransactions } from \"../../API/API\";\nimport { Table } from \"reactstrap\";\n\n//TODO ADD TRANSACTION DETAIL\n\nexport const AdminTransactions = (props) => {\n  const [transactions, setTransactions] = useState([]);\n\n  const getAllTransactions = async () => {\n    const data = await allTransactions();\n    setTransactions(data);\n  };\n\n  useEffect(() => {\n    getAllTransactions();\n    return () => setTransactions([]);\n  }, []);\n\n  return (\n    <div className=\"container text-center\">\n      <h3 className=\"text-center my-5\">Transaction List</h3>\n      <Table responsive size=\"sm\" bordered>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>User</th>\n            <th>Date</th>\n            <th>Products</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        {transactions.length &&\n          transactions.map((elem, index) => {\n            const { transaction_id, user, date, product, status } = elem;\n            return (\n              <tbody key={index} id={transaction_id}>\n                <tr>\n                  <td>{transaction_id}</td>\n                  <td>{user.username}</td>\n                  <td>{new Date(date).toLocaleDateString()}</td>\n                  {product.length > 1 ? (\n                    <td className=\"multiple-items\">\n                      {product.map((elem) => {\n                        return elem.title + \" \";\n                      })}\n                    </td>\n                  ) : (\n                    <td width=\"25%\">{product[0].title}</td>\n                  )}\n                  <td>{status}</td>\n                </tr>\n              </tbody>\n            );\n          })}\n      </Table>\n    </div>\n  );\n};\n","// TODO DO FAILURE PAGE\nimport { useState, useEffect, useContext } from \"react\";\nimport { userContext } from \"../../Context/Contexts\";\nimport { updateTransactionStatus } from \"../../API/API\";\nimport { Redirect } from \"react-router\";\n\nexport const PurchaseFailure = (props) => {\n  const [success, setSuccess] = useState(false);\n  const [preferenceId, setPreferenceId] = useState(\"\");\n  const { user } = useContext(userContext);\n\n  // UPDATE THE TRANSACTION TO APPROVED STATUS\n  const compareCollectionsId = async () => {\n    const url = window.location.href;\n    if (url.split(\"?\")[1]) {\n      const params = url.split(\"?\")[1].split(\"&\");\n      const id = params[7].split(\"=\")[1];\n      setPreferenceId(id);\n      await updateTransactionStatus(id, \"canceled\");\n      window.history.replaceState(null, null, url.split(\"?\")[0]);\n      setSuccess(true);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"here\");\n    user && compareCollectionsId();\n  }, [user]);\n\n  return success ? (\n    <Redirect to={\"/transactiondetail?\" + preferenceId} />\n  ) : null;\n};\n","import Home from \"./Components/Home\";\nimport { NavBar } from \"./Components/Navbar\";\nimport { useState, useEffect } from \"react\";\nimport { userContext } from \"./Context/Contexts\";\nimport { userData, checkForToken } from \"./API/API\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { Token } from \"./Components/Token\";\nimport { LoginScreen } from \"./Components/LoginScreen\";\nimport { NewAccount } from \"./Components/NewAccount\";\nimport { AdminHome } from \"./Components/Admin/AdminHome\";\nimport { ProductDetail } from \"./Components/ProductDetail\";\nimport { AdminCategory } from \"./Components/Admin/AdminCategory\";\nimport { Cart } from \"./Components/Cart\";\nimport { PurchaseSuccess } from \"./Components/Transactions/PurchaseSuccess\";\nimport { TransactionList } from \"./Components/Transactions/TransactionList\";\nimport { TransactionDetail } from \"./Components/Transactions/TransactionDetail\";\nimport { Categories } from \"./Components/Categories\";\nimport { AdminTransactions } from \"./Components/Admin/AdminTransactions\";\nimport { PurchaseFailure } from \"./Components/Transactions/PurchaseFailure\";\n\nfunction App() {\n  const [user, setUser] = useState();\n\n  useEffect(() => {\n    (async () => {\n      const token = checkForToken();\n      if (token) setUser(await userData(token));\n      else setUser(null);\n    })();\n  }, []);\n\n  return (\n    <HashRouter>\n      <userContext.Provider value={{ user, setUser }}>\n        <NavBar />\n        <Switch>\n          <Route path=\"/logged\" component={Token} />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/newaccount\" component={NewAccount} />\n          <Route path=\"/admin-productos\" component={AdminHome} />\n          <Route path=\"/admin-categorias\" component={AdminCategory} />\n          <Route path=\"/cart\" component={Cart} />\n          <Route path=\"/purchasesuccess\" component={PurchaseSuccess} />\n          <Route path=\"/transactions\" component={TransactionList} />\n          <Route path=\"/transactiondetail\" component={TransactionDetail} />\n          <Route path=\"/categories\" component={Categories} />\n          <Route path=\"/admin-transactions\" component={AdminTransactions} />\n          <Route path=\"/purchasefailure\" component={PurchaseFailure} />\n          {user && (\n            <Route\n              path=\"/product\"\n              render={(props) => <ProductDetail id={user._id} {...props} />}\n            />\n          )}\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </userContext.Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Styles/styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}