{"version":3,"sources":["API/API.js","Context/Contexts.js","Components/Styled/ColorSquares.js","Components/Styled/Spinner.js","Components/NewAccount.jsx","Components/LoginScreen.jsx","Components/ProductDetail.jsx","Components/ProductCard.jsx","Components/SearchProduct.jsx","assets/home.png","Components/Categories.jsx","Components/Home.jsx","Components/Admin/AdminNav.jsx","Components/CartItem.jsx","assets/Online_shopping_PNG.png","assets/empty-cart.svg","Components/Cart.jsx","Components/Header.jsx","Components/Navbar.jsx","Components/Token.jsx","Components/Admin/AddProduct.jsx","Components/Admin/AddCategory.jsx","Components/Admin/AdminHome.jsx","Components/Admin/AdminCategory.jsx","Components/Transactions/PurchaseSuccess.jsx","Components/Styled/GoBackArrow.js","Components/Transactions/TransactionList.jsx","Components/Transactions/TransactionDetail.jsx","Components/Admin/AdminTransactions.jsx","Components/Transactions/PurchaseFailure.jsx","App.js","index.js"],"names":["token","decodedToken","url","params","Authorization","userData","a","id","_id","fetch","response","json","data","logout","localStorage","clear","localUser","email","password","method","headers","body","JSON","stringify","status","setItem","newUser","username","confirm","getProducts","addNewProduct","name","category","price","color","size","quantity","image","description","formData","FormData","append","productDetail","productId","addToCart","updateUserCart","cart","checkStock","newTransaction","userId","transaction_id","items","date","getTransaction","userTransactions","updateTransactionStatus","allTransactions","getCategories","getProductByCat","newCategory","userContext","createContext","ColorSquares","styled","div","props","rotate","keyframes","Spinner","NewAccount","setNewAccount","useState","setEmail","setUsername","setPassword","setConfirm","createAccErrors","setCreateAccErrors","accCreated","setAccCreated","count","setCount","loading","setLoading","useEffect","setTimeout","CreateAccBtn","className","onClick","e","preventDefault","errors","ShowErrors","map","error","msg","AccountSuccess","action","stopPropagation","type","value","onChange","target","autoComplete","required","LoginScreen","setLogin","logged","setLogged","loginError","setLogginErros","setUser","useContext","newAccount","LoginBtn","user","src","alt","href","ProductDetail","toggleModal","img","product","setProduct","sizes","setSizes","colors","setColors","selectedSize","setSelectedSize","selectedColor","setSelectedColor","addedToCart","setAddedToCart","dropdown","setDropwDown","login","details","availableSizes","forEach","elem","key","old","UniqueSizes","index","selectSize","colorsBySize","push","showColorsBySize","ColorDropdown","AddToCartBtn","newCart","onClickLogin","Login","ProductCard","images","modal","setModal","toLocaleString","SearchProduct","products","productName","setProductName","suggestions","setSuggestions","suggestionHandler","singleProduct","setSelectedCat","setProducts","matches","length","filter","regex","RegExp","match","placeholder","suggestion","Categories","categories","setCategories","getProductsByCategory","getAllProducts","selectedCat","style","backgroundImage","home","Home","AdminNav","isOpen","setIsOpen","logOut","window","location","replace","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","CartItem","cartItems","setCartItems","setQuantity","increment","decrement","alert","removeItem","splice","updatedUser","Cart","setIsCartOpen","total","setTotal","sum","item","checkoutButton","date_created","init_point","clearCart","emptyCart","DivTotal","EmptyCart","closeOverlay","Header","setDropwdown","cartTotal","setCartTotal","isCartOpen","toggleCartModal","toggleDropdown","UserNav","Title","NavBar","admin","Token","setToken","urlToken","split","localToken","history","pushState","to","AddProduct","productPrice","setProductPrice","categoryId","setCategoryId","setSize","setColor","showProductForm","setShowProductForm","productErrors","setProductErrors","setProductId","setImage","setDescription","productForm","resetState","Button","Form","encType","FormGroup","Label","Input","selectedIndex","element","options","defaultValue","disabled","cat","onFocus","files","err","uniqid","role","result","AddCategory","categoryName","setCategoryName","showCategoryForm","setShowCategoryForm","toggleForm","AdminHome","Col","Row","md","lg","xs","AdminCategory","active","setActive","Breadcrumb","BreadcrumbItem","pro","sm","PurchaseSuccess","success","setSuccess","preferenceId","setPreferenceId","compareCollectionsId","replaceState","GoBackArrow","route","fontSize","TransactionList","purchases","setPurchases","getUserTransactions","transactions","Table","responsive","bordered","scope","width","Date","toLocaleDateString","title","TransactionDetail","detail","setDetail","getDetail","transaction","totalPrice","unit_price","AdminTransactions","setTransactions","getAllTransactions","PurchaseFailure","console","log","App","getItem","jwt","decode","exp","now","Provider","path","component","render","ReactDOM","document","getElementById"],"mappings":"2ZAIIA,EACAC,E,gGAFEC,EAAM,0CAGNC,EAAS,CACbC,cAAeJ,EACf,eAAgB,oBAmBLK,EAAQ,uCAAG,gCAAAC,EAAA,sEAEhBC,EAAKN,EAAaO,IAFF,SAGGC,MAAMP,EAAM,SAAWK,GAH1B,cAGdG,EAHc,gBAIDA,EAASC,OAJR,cAIdC,EAJc,yBAKbA,GALa,2HAAH,qDAYRC,EAAM,uCAAG,sBAAAP,EAAA,sEACdG,MAAMP,EAAM,WADE,OAEpBY,aAAaC,QAFO,2CAAH,qDAMNC,EAAS,uCAAG,WAAOC,EAAOC,GAAd,iBAAAZ,EAAA,sEACAG,MAAMP,EAAM,cAAe,CAChDiB,OAAQ,OACRC,QAASjB,EACTkB,KAAMC,KAAKC,UAAU,CACnBN,QACAC,eANmB,cACjBR,EADiB,gBASJA,EAASC,OATL,cASjBC,EATiB,OAUC,MAApBF,EAASc,QAAgBV,aAAaW,QAAQ,QAASb,EAAKZ,OAVzC,kBAWhB,CAAEY,OAAMY,OAAQd,EAASc,SAXT,2CAAH,wDAeTE,EAAO,uCAAG,WAAOT,EAAOU,EAAUT,EAAUU,GAAlC,iBAAAtB,EAAA,sEACEG,MAAMP,EAAM,YAAa,CAC9CiB,OAAQ,OACRC,QAASjB,EACTkB,KAAMC,KAAKC,UAAU,CACnBN,QACAU,WACAT,WACAU,cARiB,cACflB,EADe,gBAWFA,EAASC,OAXP,cAWfC,EAXe,yBAYd,CAAEF,WAAUE,SAZE,2CAAH,4DAiBPiB,EAAW,uCAAG,8BAAAvB,EAAA,+EAEAG,MAAMP,EAAM,aAFZ,cAEjBQ,EAFiB,gBAGJA,EAASC,OAHL,cAGjBC,EAHiB,yBAIhBA,GAJgB,2HAAH,qDAWXkB,EAAa,uCAAG,WAC3BC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAR2B,mBAAAhC,EAAA,6DAUrBiC,EAAW,IAAIC,UACZC,OAAO,OAAQV,GACxBQ,EAASE,OAAO,QAASR,GACzBM,EAASE,OAAO,WAAYT,GAC5BO,EAASE,OAAO,QAASP,GACzBK,EAASE,OAAO,OAAQN,GACxBI,EAASE,OAAO,WAAYL,GAC5BG,EAASE,OAAO,QAASJ,GACzBE,EAASE,OAAO,cAAeH,GAlBJ,mBAoBF7B,MAAMP,EAAM,eAAgB,CACjDiB,OAAQ,OACRE,KAAMkB,IAtBiB,eAoBnB7B,EApBmB,iBAwBNA,EAASC,OAxBH,eAwBnBC,EAxBmB,yBAyBlB,CAAEY,OAAQd,EAASc,OAAQZ,SAzBT,2HAAH,oEAgCb8B,EAAa,uCAAG,WAAOC,GAAP,iBAAArC,EAAA,+EAEFG,MAAMP,EAAM,YAAcyC,EAAW,CAC1DxB,OAAQ,QAHe,cAEnBT,EAFmB,gBAKNA,EAASC,OALH,cAKnBC,EALmB,yBAMlBA,GANkB,2HAAH,sDAiGbgC,EAAS,uCAAG,WAAOrC,EAAIoC,EAAWR,EAAMD,EAAOE,GAAnC,iBAAA9B,EAAA,sEACAG,MAAMP,EAAM,iBAAmBK,EAAI,CACxDY,OAAQ,MACRC,QAASjB,EACTkB,KAAMC,KAAKC,UAAU,CACnBhB,GAAIoC,EACJR,OACAD,QACAE,eARmB,cACjB1B,EADiB,gBAWJA,EAASC,OAXL,cAWjBC,EAXiB,yBAYhBA,GAZgB,2CAAH,8DAgBTiC,EAAc,uCAAG,WAAOtC,EAAIuC,GAAX,iBAAAxC,EAAA,+EAEHG,MAAMP,EAAM,sBAAwBK,EAAI,CAC7DY,OAAQ,MACRC,QAASjB,EACTkB,KAAMC,KAAKC,UAAU,CACnBuB,WANsB,cAEpBpC,EAFoB,gBASPA,EAASC,OATF,cASpBC,EAToB,yBAUnBA,GAVmB,2HAAH,wDAqDdmC,EAAU,uCAAG,WAAOxC,GAAP,iBAAAD,EAAA,+EAECG,MAAMP,EAAM,aAAeK,EAAI,CACpDY,OAAQ,OACRC,QAASjB,IAJW,cAEhBO,EAFgB,gBAMHA,EAASC,OANN,cAMhBC,EANgB,yBAOf,CAAEA,OAAMY,OAAQd,EAASc,SAPV,2HAAH,sDA0CVwB,EAAc,uCAAG,WAC5BC,EACAC,EACA1B,EACA2B,EACAC,GAL4B,eAAA9C,EAAA,+EAQHG,MAAMP,EAAM,mBAAoB,CACrDiB,OAAQ,OACRC,QAASjB,EACTkB,KAAMC,KAAKC,UAAU,CACnB0B,SACAC,iBACA1B,SACA2B,QACAC,WAhBsB,cAQpB1C,EARoB,gBAmBPA,EAASC,OAnBF,sJAAH,8DA0Bd0C,EAAc,uCAAG,WAAOH,GAAP,iBAAA5C,EAAA,+EAEHG,MAAMP,EAAM,gBAAkBgD,GAF3B,cAEpBxC,EAFoB,gBAGPA,EAASC,OAHF,cAGpBC,EAHoB,yBAInBA,GAJmB,2HAAH,sDAWd0C,EAAgB,uCAAG,WAAOL,GAAP,iBAAA3C,EAAA,+EAELG,MAAMP,EAAM,sBAAwB+C,GAF/B,cAEtBvC,EAFsB,gBAGTA,EAASC,OAHA,cAGtBC,EAHsB,yBAIrBA,GAJqB,2HAAH,sDAWhB2C,EAAuB,uCAAG,WAAOhD,EAAIiB,GAAX,SAAAlB,EAAA,+EAE7BG,MAAMP,EAAM,sBAAuB,CACvCiB,OAAQ,MACRC,QAASjB,EACTkB,KAAMC,KAAKC,UAAU,CACnBhB,KACAiB,aAP+B,6IAAH,wDAgBvBgC,EAAe,uCAAG,8BAAAlD,EAAA,+EAEJG,MAAMP,EAAM,oBAAqB,CACtDiB,OAAQ,MACRC,QAASjB,IAJgB,cAErBO,EAFqB,gBAMRA,EAASC,OAND,cAMrBC,EANqB,yBAOpBA,GAPoB,2HAAH,qDAgBf6C,EAAa,uCAAG,8BAAAnD,EAAA,+EAEFG,MAAMP,EAAM,eAFV,cAEnBQ,EAFmB,gBAGNA,EAASC,OAHH,cAGnBC,EAHmB,yBAIlBA,GAJkB,2HAAH,qDAWb8C,EAAe,uCAAG,WAAO1B,GAAP,iBAAA1B,EAAA,+EAEJG,MAAMP,EAAM,oBAAqB,CACtDiB,OAAQ,OACRC,QAASjB,EACTkB,KAAMC,KAAKC,UAAU,CAAES,eALE,cAErBtB,EAFqB,gBAORA,EAASC,OAPD,cAOrBC,EAPqB,yBAQpBA,GARoB,4FAAH,sDAaf+C,EAAW,uCAAG,WAAO5B,GAAP,iBAAAzB,EAAA,+EAEAG,MAAMP,EAAM,gBAAiB,CAClDiB,OAAQ,OACRC,QAASjB,EACTkB,KAAMC,KAAKC,UAAU,CACnBQ,WANmB,cAEjBrB,EAFiB,gBASJA,EAASC,OATL,cASjBC,EATiB,yBAUhBA,GAVgB,4FAAH,sD,QC9aXgD,EAAcC,wBAAc,I,gBCA5BC,EAAeC,IAAOC,IAAV,+SACH,SAACC,GAAD,OAAWA,EAAM/B,S,4CCDjCgC,EAASC,YAAH,8GAqBGC,EAZCL,IAAOC,IAAV,6QACEE,GCRFG,EAAa,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC3B,EAA0BC,mBAAS,IAAnC,mBAAOtD,EAAP,KAAcuD,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAO5C,EAAP,KAAiB8C,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOrD,EAAP,KAAiBwD,EAAjB,KACA,EAA8BH,mBAAS,IAAvC,mBAAO3C,EAAP,KAAgB+C,EAAhB,KACA,EAA8CJ,oBAAS,GAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAA0BR,mBAAS,GAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAA8BV,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KAsBAC,qBAAU,WACJN,GACEE,EAAQ,GACVK,YAAW,WACTJ,EAASD,EAAQ,KAChB,OAGN,CAACF,EAAYE,IAEhBI,qBAAU,WACM,IAAVJ,GAAaV,GAAc,KAC9B,CAACU,EAAOV,IAGX,IAKMgB,EAAe,WACnB,OACE,qBAAKC,UAAU,gBAAf,SACE,wBACEA,UAAU,gBACVC,QAAO,uCAAE,WAAOC,GAAP,eAAAnF,EAAA,6DACP6E,GAAW,GACXM,EAAEC,iBAFK,SAGgBhE,EAAQT,EAAOU,EAAUT,EAAUU,GAHnD,OAI0B,OAD3BlB,EAHC,QAIMA,SAASc,SACpBqD,EAAmBnE,EAASE,KAAK+E,QACjCR,GAAW,IAEoB,MAA7BzE,EAASA,SAASc,SACpB2D,GAAW,GACXJ,GAAc,IAVT,2CAAF,sDAFT,uBAuBAa,EAAa,WACjB,OAAOhB,EAAgBiB,KAAI,SAACC,GAC1B,OACE,qBAAKP,UAAU,SAAf,SACE,gCAAQO,EAAMC,YAOhBC,EAAiB,WACrB,OACE,sBAAKT,UAAU,oBAAf,UACE,iDACA,+CAAkBP,SAKxB,OACE,qBAAKO,UAAU,UAAUC,QApDV,WACflB,GAAc,IAmDd,SACE,uBAAM2B,OAAO,GAAGV,UAAU,QAAQC,QAAS,SAACC,GAAD,OAAOA,EAAES,mBAApD,UACE,sBAAKX,UAAU,0BAAf,UACE,uBACEY,KAAK,OACLpE,KAAK,QACLqE,MAAOnF,EACPoF,SA9FW,SAACZ,GACpBjB,EAASiB,EAAEa,OAAOF,OAClBvB,GAAmB,IA6FX0B,aAAa,MACbC,UAAQ,IAEV,6CAEF,sBAAKjB,UAAU,0BAAf,UACE,uBACEY,KAAK,OACLpE,KAAK,WACLqE,MAAOzE,EACP0E,SApGc,SAACZ,GACvBhB,EAAYgB,EAAEa,OAAOF,OACrBvB,GAAmB,IAmGX2B,UAAQ,EACRD,aAAa,QAEf,gDAEF,sBAAKhB,UAAU,0BAAf,UACE,uBACEY,KAAK,WACLpE,KAAK,WACLqE,MAAOlF,EACPmF,SA1Gc,SAACZ,GACvBf,EAAYe,EAAEa,OAAOF,OACrBvB,GAAmB,IAyGX2B,UAAQ,IAEV,gDAEF,sBAAKjB,UAAU,0BAAf,UACE,uBACEY,KAAK,WACLpE,KAAK,WACLqE,MAAOxE,EACPyE,SA/Ga,SAACZ,GACtBd,EAAWc,EAAEa,OAAOF,OACpBvB,GAAmB,IA8GX2B,UAAQ,IAEV,wDAED5B,EACC,cAACgB,EAAD,IACEV,EACF,cAAC,EAAD,IACEJ,EACF,cAACkB,EAAD,IAEA,cAACV,EAAD,UClJGmB,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,EAA0BnC,mBAAS,IAAnC,mBAAOtD,EAAP,KAAcuD,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOrD,EAAP,KAAiBwD,EAAjB,KACA,EAA4BH,oBAAS,GAArC,mBAAOoC,EAAP,KAAeC,EAAf,KACA,EAAqCrC,mBAAS,IAA9C,mBAAOsC,EAAP,KAAmBC,EAAnB,KACQC,EAAYC,qBAAWpD,GAAvBmD,QACR,EAA8BxC,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KACA,EAAoCZ,oBAAS,GAA7C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAqBM4C,EAAW,WACf,OACE,qBAAK3B,UAAU,gBAAf,SACE,wBACEA,UAAU,gBACVC,QAAO,uCAAE,WAAOC,GAAP,eAAAnF,EAAA,6DACP6E,GAAW,GACXM,EAAEC,iBAFK,SAGgB1E,EAAUC,EAAOC,GAHjC,OAIiB,OADlBR,EAHC,QAIMc,SACXoF,GAAU,GACVG,EAAQrG,EAASE,KAAKuG,OAEA,MAApBzG,EAASc,QAAgBsF,EAAepG,EAASE,MACrDuE,GAAW,GATJ,2CAAF,sDAFT,uBAoBN,OAAO8B,EACL,cAAC,EAAD,CAAY3C,cAAeA,IAE3B,qBAAKiB,UAAU,UAAUC,QApCV,WACfkB,GAAS,IAmCT,SACE,sBAAKnB,UAAU,OAAOC,QAAS,SAACC,GAAD,OAAOA,EAAES,mBAAxC,UACE,sBAAKX,UAAU,kBAAf,UACE,uBACEY,KAAK,OACLpE,KAAK,QACLqE,MAAOnF,EACPoF,SApDW,SAACZ,GACpBjB,EAASiB,EAAEa,OAAOF,QAoDVG,aAAa,MACbC,UAAQ,IAEV,6CAEF,sBAAKjB,UAAU,kBAAf,UACE,uBACEY,KAAK,WACLpE,KAAK,WACLqE,MAAOlF,EACPmF,SA3Dc,SAACZ,GACvBf,EAAYe,EAAEa,OAAOF,QA2DbI,UAAQ,IAEV,gDAEDK,EACC,qBAAKtB,UAAU,QAAf,SACE,gCAAQsB,MAER,KAEH3B,EACC,qBAAKK,UAAU,oBAAf,SACE,cAAC,EAAD,MAGF,gCACE,cAAC2B,EAAD,IACA,qBAAK3B,UAAU,mBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBACE6B,IAAI,8EACJC,IAAI,GACJ9B,UAAU,OAGd,8BACE,mBACEC,QAAS,kBAAML,GAAW,IAC1BmC,KAAK,4DACL/B,UAAU,WAHZ,iCAUN,qBAAKA,UAAU,cAAf,SACE,wBAAQA,UAAU,gBAAgBC,QAxFpB,WACxBlB,GAAe2C,IAuFL,iCAMLN,EAASD,GAAS,GAAS,KAC3BO,EAAa,cAAC,EAAD,IAAiB,WClH1BM,EAAgB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAazF,EAAoB,EAApBA,KAAM0F,EAAc,EAAdA,IAAKlH,EAAS,EAATA,GACtD,EAA8BgE,mBAAS,IAAvC,mBAAOmD,EAAP,KAAgBC,EAAhB,KACA,EAA0BpD,mBAAS,IAAnC,mBAAOqD,EAAP,KAAcC,EAAd,KACA,EAA4BtD,mBAAS,IAArC,mBAAOuD,EAAP,KAAeC,EAAf,KACA,EAAwCxD,qBAAxC,mBAAOyD,EAAP,KAAqBC,EAArB,KACA,EAA0C1D,qBAA1C,mBAAO2D,EAAP,KAAsBC,EAAtB,KACA,EAA8B5D,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KACA,EAAsCZ,oBAAS,GAA/C,mBAAO6D,EAAP,KAAoBC,EAApB,KACA,EAAiC9D,oBAAS,GAA1C,mBAAO+D,EAAP,KAAiBC,EAAjB,KACA,EAA0BhE,oBAAS,GAAnC,mBAAOiE,EAAP,KAAc9B,EAAd,KAEA,EAA0BM,qBAAWpD,GAA7BuD,GAAR,EAAQA,KAAMJ,GAAd,EAAcA,QAGd3B,qBAAU,WACJ7E,GACF,sBAAC,sBAAAD,EAAA,kEACCqH,EADD,SACkBjF,EAAcnC,GADhC,4EAAD,KAID,CAACA,IAGJ6E,qBAAU,WACR,GAAIsC,EAAQe,QAAS,CACnB,IAAQA,EAAYf,EAAZe,QACJC,EAAiB,GACrBD,EAAQE,SAAQ,SAACC,GACVF,EAAeE,EAAKzG,QACvBuG,EAAeE,EAAKzG,MAAQ,MALb,eAQV0G,GACPhB,GAAS,SAACiB,GAAD,4BAAaA,GAAb,CAAkBD,QAD7B,IAAK,IAAIA,KAAOH,EAAiB,EAAxBG,MAIV,CAACnB,IAGJ,IAAMqB,GAAc,WAClB,OAAOnB,EAAM/B,KAAI,SAAC+C,EAAMI,GACtB,OACE,mBAEExD,QAAS,kBAAMyD,GAAWL,IAC1BrD,UAAWyC,IAAiBY,EAAO,gBAAkB,OAHvD,SAKGA,GAJII,OA2BPC,GAAa,SAACL,GACdZ,IACFC,IACAE,KAEFF,EAAgBW,GArBO,SAACzG,GACxB,IAAQsG,EAAYf,EAAZe,QACJS,EAAe,GACfpB,EAAS,GAMb,IAAK,IAAIe,KALTJ,EAAQE,SAAQ,SAACC,GACVM,EAAaN,EAAK1G,QAAU0G,EAAKzG,OAASA,IAC7C+G,EAAaN,EAAK1G,OAAS,MAGfgH,EACdpB,EAAOqB,KAAKN,GAEdd,EAAUD,GAUVsB,CAAiBR,IAcbS,GAAgB,WACpB,OACE,qBAAK9D,UAAU,oBAAf,SACGuC,EAAOjC,KAAI,SAAC+C,EAAMI,GACjB,OACE,qBAAKxD,QAAS,kBAAM2C,EAAiBS,IAArC,SACE,cAAC9E,EAAD,CAAc5B,MAAO0G,GAAWI,WAStCM,GAAe,WACnB,OACE,mBACE/D,UAAU,gBACVC,QAAO,sBAAE,4BAAAlF,EAAA,6DACP6E,GAAW,GADJ,SAEevC,EACpBuE,GAAK3G,IACLD,EACAyH,EACAE,EACA,GAPK,OAEDqB,EAFC,OASPxC,GAAQwC,GACRpE,GAAW,GAjCjBkD,GAAe,GAuBF,2CAFX,0BAsBEmB,GAAe,WACnB9C,GAAU8B,IAINiB,GAAQ,WACZ,OACE,mBAAGlE,UAAU,gBAAgBC,QAASgE,GAAtC,iCAMJ,OAAOhB,EACL,cAAC,EAAD,CAAa9B,SAAUA,IAEvB,qBAAKnB,UAAU,UAAUC,QAASgC,EAAlC,SACE,sBAAKjC,UAAU,aAAaC,QAAS,SAACC,GAAD,OAAOA,EAAES,mBAA9C,UACE,sBAAKX,UAAU,eAAf,UACE,sBAAMA,UAAU,YAAYC,QAASgC,EAArC,oBAGA,qBAAKjC,UAAU,YAAf,SACE,qBAAK6B,IAAKK,EAAKJ,IAAI,GAAG9B,UAAU,oBAGpC,sBAAKA,UAAU,aAAaC,QAAS,kBAAM+C,GAAa,IAAxD,UACE,mBAAGhD,UAAU,cAAb,SAA4BxD,IAC5B,mBAAGwD,UAAU,eAAb,iBACA,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAACwD,GAAD,MAEF,qBAAKxD,UAAU,yBAAf,SACGyC,EACEE,EAiBC,qBAAK3C,UAAU,eAAf,SACE,cAACzB,EAAD,CAAc5B,MAAOgG,MAjBvBI,EACE,cAACe,GAAD,IAGA,qBACE9D,UAAU,eACVC,QAAS,SAACC,GACRA,EAAES,kBACFqC,GAAcD,IAJlB,SAOE,mBAAG/C,UAAU,wBAWnB,qBAAKA,UAAU,eAAf,SACE,cAACzB,EAAD,WAKNqD,GAEGe,EAGDhD,EACF,cAAC,EAAD,IACEkD,EACF,mBAAG7C,UAAU,YAAb,4BAEA,cAAC+D,GAAD,IANA,mBAAG/D,UAAU,oBAAb,yBAHA,cAACkE,GAAD,aCvMCC,EAAc,SAACzF,GAC1B,IAAQ1D,EAA4B0D,EAA5B1D,GAAIwB,EAAwBkC,EAAxBlC,KAAME,EAAkBgC,EAAlBhC,MAAO0H,EAAW1F,EAAX0F,OACzB,EAA0BpF,oBAAS,GAAnC,mBAAOqF,EAAP,KAAcC,EAAd,KAEMrC,EAAc,kBAAMqC,GAAUD,IAEpC,OACE,sBAAKrE,UAAU,iBAAf,UACE,8BACE,qBAAKA,UAAU,aAAa6B,IAAKuC,EAAO,GAAGzJ,IAAKmH,IAAKtF,MAEvD,gCACE,6BAAKA,IACL,oBAAGwD,UAAU,aAAb,eAA6BtD,EAAM6H,oBACnC,wBAAQvE,UAAU,gBAAgBC,QAASgC,EAA3C,qBAIDoC,EACC,cAAC,EAAD,CACErJ,GAAIA,EACJqJ,MAAOA,EACPpC,YAAaA,EACbzF,KAAMA,EACN0F,IAAKkC,EAAO,GAAGzJ,MAEf,SC1BG6J,EAAgB,SAAC9F,GAC5B,IAAQ+F,EAAa/F,EAAb+F,SACR,EAAsCzF,mBAAS,IAA/C,mBAAO0F,EAAP,KAAoBC,EAApB,KACA,EAAsC3F,mBAAS,IAA/C,mBAAO4F,EAAP,KAAoBC,EAApB,KAeMC,EAAiB,uCAAG,WAAO3C,GAAP,eAAApH,EAAA,sEACKoC,EAAcgF,EAAQlH,KAD3B,mBAClB8J,EADkB,OAExBrG,EAAMsG,eAAe,IACrBtG,EAAMuG,YAAYF,GAClBJ,EAAe,IACfE,EAAe,IALS,2CAAH,sDAQvB,OACE,8BACE,sBAAK7E,UAAU,eAAf,UACE,uBACEc,SAzBY,SAACZ,GACnB,IAAIgF,EAAU,GAEVhF,EAAEa,OAAOF,MAAMsE,SACjBD,EAAUT,EAASW,QAAO,SAAC/B,GACzB,IAAMgC,EAAQ,IAAIC,OAAJ,UAAcpF,EAAEa,OAAOF,OAAS,MAC9C,OAAOwC,EAAK7G,KAAK+I,MAAMF,OAG3BR,EAAeK,GACfP,EAAezE,EAAEa,OAAOF,QAgBlBA,MAAO6D,EACPc,YAAY,+BAGd,qBAAKxF,UAAU,qBAAf,SACG4E,GACCA,EAAYtE,KAAI,SAACmF,EAAYhC,GAC3B,OACE,qBAAiBxD,QAAS,kBAAM6E,EAAkBW,IAAlD,SACGA,EAAWjJ,MADJiH,QAMlB,qBAAKzD,UAAU,SAAf,SACE,mBAAGA,UAAU,0BCnDR,MAA0B,iCCM5B0F,EAAa,SAAChH,GACzB,MAAoCM,qBAApC,mBAAO2G,EAAP,KAAmBC,EAAnB,KAGA/F,qBAAU,WAIR,OAHA,sBAAC,sBAAA9E,EAAA,kEACC6K,EADD,SACqB1H,IADrB,4EAAD,GAGO,kBAAM0H,OACZ,IAGH,IAAMC,EAAqB,uCAAG,WAAO7K,EAAIyI,GAAX,SAAA1I,EAAA,6DAC5B2D,EAAMkB,YAAW,GADW,KAE5BlB,EAF4B,SAEJP,EAAgBnD,GAFZ,+BAEtBiK,YAFsB,gBAG5BvG,EAAMsG,eAAevB,EAAQ,GAC7B/E,EAAMkB,YAAW,GAJW,mBAKrB,kBAAMlB,EAAMuG,YAAY,OALH,2CAAH,wDASrBa,EAAc,uCAAG,sBAAA/K,EAAA,kEACrB2D,EADqB,SACGpC,IADH,wBACf2I,YADe,gBAErBvG,EAAMsG,eAAe,GAFA,2CAAH,qDAKpB,OACE,sBAAKhF,UAAU,uBAAf,UACE,qBACEA,UACwB,IAAtBtB,EAAMqH,YACF,+BACA,kBAEN9F,QAAS,SAACC,GAAD,OAAO4F,EAAe5F,IAC/B8F,MAAO,CACLC,gBAAgB,OAAD,OAASC,EAAT,MARnB,SAWE,qBAAKlG,UAAU,yBAAf,SACE,2CAGH2F,GACCA,EAAWrF,KAAI,SAAC7D,EAAUgH,GACxB,IAAQjH,EAAqBC,EAArBD,KAAMM,EAAeL,EAAfK,MAAO7B,EAAQwB,EAARxB,IACrB,OACE,qBAEED,GAAIyI,EAAQ,EACZzD,UACEtB,EAAMqH,cAAgBtC,EAAQ,EAC1B,+BACA,kBAENuC,MAAO,CACLC,gBAAgB,OAAD,OAASnJ,EAAMnC,IAAf,MAEjBsF,QAAS,SAACC,GAAD,OAAO2F,EAAsB5K,EAAKwI,IAX7C,SAaE,qBAAKzD,UAAU,yBAAf,SACE,+BAAOxD,OAbJiH,UCSJ0C,EAzDF,WACX,MAAgCnH,mBAAS,IAAzC,mBAAOyF,EAAP,KAAiBQ,EAAjB,KACA,EAA8BjG,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KACA,EAAsCZ,mBAAS,GAA/C,mBAAO+G,EAAP,KAAoBf,EAApB,KAYA,OATAnF,qBAAU,WAIR,OAHA,sBAAC,sBAAA9E,EAAA,kEACCkK,EADD,SACmB3I,IADnB,4EAAD,GAGO,WACL2I,OAED,IAGD,sBAAKjF,UAAU,cAAf,UACE,cAAC,EAAD,CACEyE,SAAUA,EACVQ,YAAaA,EACbrF,WAAYA,EACZmG,YAAaA,EACbf,eAAgBA,IAElB,cAAC,EAAD,CACEP,SAAUA,EACVQ,YAAaA,EACbc,YAAaA,EACbf,eAAgBA,IAElB,qBAAKhF,UAAU,2BAAf,SACGL,EACC,qBAAKK,UAAU,iBAEfyE,GACAA,EAASnE,KAAI,SAAC6B,EAASsB,GACrB,IAAQjH,EACN2F,EADM3F,KAAMvB,EACZkH,EADYlH,IAAK8B,EACjBoF,EADiBpF,YAAaqH,EAC9BjC,EAD8BiC,OAAQxH,EACtCuF,EADsCvF,KAAMD,EAC5CwF,EAD4CxF,MAAOD,EACnDyF,EADmDzF,MAErD,OACE,cAAC,EAAD,CACE1B,GAAIC,EACJuB,KAAMA,EACNO,YAAaA,EACbqH,OAAQA,EACRxH,KAAMA,EACND,MAAOA,EACPD,MAAOA,GACF+G,Y,sECrCR2C,GAAW,WACtB,MAA4BpH,oBAAS,GAArC,mBAAOqH,EAAP,KAAeC,EAAf,KAIA,EAA0B7E,qBAAWpD,GAA7BuD,EAAR,EAAQA,KAAMJ,EAAd,EAAcA,QAER+E,EAAM,uCAAG,sBAAAxL,EAAA,sEACPO,IADO,OAEbkG,EAAQ,MACRgF,OAAOC,SAASC,QAAQ,sBAHX,2CAAH,qDAMZ,OACE,sBAAK1G,UAAU,iBAAf,UACE,eAAC2G,GAAA,EAAD,CAAQhK,MAAM,QAAQiK,OAAK,EAACC,OAAO,KAAnC,UACE,cAACC,GAAA,EAAD,CAAa/E,KAAK,sCAAlB,SACGH,EAAKxF,WAER,cAAC2K,GAAA,EAAD,CAAe9G,QAhBN,kBAAMqG,GAAWD,MAiB1B,cAACW,GAAA,EAAD,CAAUX,OAAQA,EAAQY,QAAM,EAAhC,SACE,eAACC,GAAA,EAAD,CAAKlH,UAAU,UAAUiH,QAAM,EAA/B,UACE,cAACE,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAASrF,KAAK,yCAAd,4BAIF,cAACoF,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAASrF,KAAK,uCAAd,0BAIF,cAACoF,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAASrF,KAAK,sCAAd,wBAIDH,EACC,cAACuF,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAASrF,KAAK,IAAI9B,QAASsG,EAA3B,uBAIA,aAIV,qBAAKvG,UAAU,aAAf,SACE,6CC3DKqH,ICLE,IDKS,SAAC3I,GACvB,IAAQyD,EAAyDzD,EAAzDyD,QAASsB,EAAgD/E,EAAhD+E,MAAO6D,EAAyC5I,EAAzC4I,UAAWtM,EAA8B0D,EAA9B1D,GAAIwG,EAA0B9C,EAA1B8C,QAAS+F,EAAiB7I,EAAjB6I,aAChD,EAAgCvI,mBAAS,IAAzC,mBAAOnC,EAAP,KAAiB2K,EAAjB,KACA,EAA8BxI,oBAAS,GAAvC,mBAAgBY,GAAhB,WAEAC,qBAAU,WAER,OADAsC,EAAQtF,UAAY2K,EAAYrF,EAAQtF,UACjC,kBAAM2K,EAAY,OACxB,IAEH,IAAMC,EAAS,uCAAG,4BAAA1M,EAAA,6DAChB6E,GAAW,GACX4H,EAAY3K,EAAW,IACnBU,EAHY,YAGD+J,IACV7D,GAAO5G,UAAY,EACxB0K,EAAahK,GALG,SAMVD,EAAetC,EAAIuC,GANT,OAQhBqC,GAAW,GARK,2CAAH,qDAWT8H,EAAS,uCAAG,4BAAA3M,EAAA,yDAChB6E,GAAW,GACM,IAAb/C,EAFY,uBAGd8K,MAAM,oEAHQ,iCAMhBH,EAAY3K,EAAW,IACnBU,EAPY,YAOD+J,IACV7D,GAAO5G,UAAY,EACxB0K,EAAahK,GATG,UAUVD,EAAetC,EAAIuC,GAVT,QAWhBqC,GAAW,GAXK,4CAAH,qDAeTgI,EAAU,uCAAG,8BAAA7M,EAAA,6DACjB6E,GAAW,IACPrC,EAFa,YAEF+J,IACVO,OAAOpE,EAAO,GACnB8D,EAAahK,GAJI,SAKSD,EAAetC,EAAIuC,GAL5B,OAKXuK,EALW,OAMjBtG,EAAQsG,GACRlI,GAAW,GAPM,2CAAH,qDAUhB,OACE,sBAAKI,UAAU,iBAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBAAK6B,IAAKM,EAAQrF,MAAOgF,IAAI,OAE/B,qBAAK9B,UAAU,QAAf,SACE,6BAAKmC,EAAQ3F,SAEf,qBAAKwD,UAAU,QAAf,SACE,mCAAMmC,EAAQzF,MAAM6H,sBAEtB,sBAAKvE,UAAU,WAAf,UACGmC,EAAQtF,SAAW,EAClB,sBAAMmD,UAAU,eAAeC,QAASyH,EAAxC,SACE,mBAAG1H,UAAU,mBAGf,sBAAMA,UAAU,gBAAgBC,QAAS2H,EAAzC,SACE,mBAAG5H,UAAU,+BAGjB,sBAAMA,UAAU,SAAhB,SAA0BmC,EAAQtF,WAClC,sBAAMmD,UAAU,OAAOC,QAASwH,EAAhC,SACE,mBAAGzH,UAAU,0BE1ER,OAA0B,uCCO5B+H,GAAO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAkChJ,mBAAS,IAA3C,mBAAOsI,EAAP,KAAkBC,EAAlB,KACA,EAA0BvI,mBAAS,GAAnC,mBAAOiJ,EAAP,KAAcC,EAAd,KACA,EAA8BlJ,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KAEA,EAA0B6B,qBAAWpD,GAA7BuD,EAAR,EAAQA,KAAMJ,EAAd,EAAcA,QAEd3B,qBAAU,WACR+B,GAAQ2F,EAAa3F,EAAKrE,QACzB,CAACqE,IAEJ/B,qBAAU,WACR,IAAIsI,EAAM,EACVb,GACEA,EAAUlE,SAAQ,SAACgF,GACjBD,GAAOC,EAAK1L,MAAQ0L,EAAKvL,YAE7BqL,EAASC,KACR,CAACb,IAIJ,IAAMe,EAAc,uCAAG,WAAO3K,GAAP,yBAAA3C,EAAA,6DACrB6E,GAAW,GADU,SAEEpC,EAAWE,GAFb,UAGG,OADlBvC,EAFe,QAGRc,OAHQ,0BAI6Bd,EAASE,KAAjDiN,EAJW,EAIXA,aAActN,EAJH,EAIGA,GAAI4C,EAJP,EAIOA,MAAO2K,EAJd,EAIcA,WAJd,SAKb9K,EAAemE,EAAK3G,IAAKD,EAAI,UAAW4C,EAAO0K,GALlC,OAMnB9B,OAAOC,SAASC,QAAQ6B,GACxB3I,GAAW,GAPQ,QASrBA,GAAW,GATU,4CAAH,sDAad4I,EAAS,uCAAG,4BAAAzN,EAAA,+EAEUuC,EAAesE,EAAK3G,IAAK,IAFnC,OAERwN,EAFQ,OAGdjH,EAAQiH,GAHM,wIAAH,qDAWTC,EAAW,WACf,OACE,sBAAK1I,UAAU,kBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,uCACA,kCAAKiI,EAAM1D,uBAEZ5E,EACC,qBAAKK,UAAU,iBAEf,wBACEA,UAAU,gBACVC,QAAS,kBAAMoI,EAAezG,EAAK3G,MAFrC,0BAaF0N,EAAY,WAChB,OACE,qBAAK3I,UAAU,aAAf,SACE,sBAAKA,UAAU,GAAf,UACE,qBAAK6B,IAAK4G,GAAW3G,IAAI,KACzB,mBAAG9B,UAAU,GAAb,SACE,qDAEF,8DACA,wBAAQA,UAAU,gBAAgBC,QAAS2I,EAA3C,SACE,iDAQJA,EAAe,WACnBZ,GAAc,IAGhB,OACE,qBAAKhI,UAAU,UAAUC,QAAS2I,EAAlC,SACE,sBACE5I,UAAU,uBACVC,QAAS,SAACC,GAAD,OAAOA,EAAES,mBAFpB,UAIE,wBAAQX,UAAU,SAASC,QAAS2I,EAApC,eAGA,+CACChH,GAAQA,EAAKrE,KAAK4H,OACjB,gCACE,qBAAKnF,UAAU,aAAaC,QAASuI,EAArC,SACE,8BACE,mBAAGxI,UAAU,6BADf,mBAIDsH,GACCA,EAAUhH,KAAI,SAAC6B,EAASsB,GACtB,OACE,gCACE,cAAC,GAAD,CACEtB,QAASA,EACTmF,UAAWA,EACXC,aAAcA,EACd9D,MAAOA,EACPzI,GAAI4G,EAAK3G,IACTuG,QAASA,IAEX,yBATQiC,MAahB,cAACiF,EAAD,OAGF,cAACC,EAAD,UC5HGE,GAAS,WACpB,MAAkC7J,mBAAS,IAA3C,mBAAOsI,EAAP,KAAkBC,EAAlB,KACA,EAAiCvI,oBAAS,GAA1C,mBAAO+D,EAAP,KAAiB+F,EAAjB,KACA,EAAkC9J,mBAAS,IAA3C,mBAAO+J,EAAP,KAAkBC,EAAlB,KACA,EAA0BhK,oBAAS,GAAnC,mBAAOiE,EAAP,KAAc9B,EAAd,KACA,EAAoCnC,oBAAS,GAA7C,mBAAOiK,EAAP,KAAmBjB,EAAnB,KAEMkB,EAAkB,WACtBlB,GAAeiB,GACfH,GAAa,IAGTK,EAAiB,kBAAML,GAAc/F,IAE3C,EAA0BtB,qBAAWpD,GAA7BuD,EAAR,EAAQA,KAAMJ,EAAd,EAAcA,QAGd3B,qBAAU,WACJ+B,GACF2F,EAAa3F,EAAKrE,QAEnB,CAACqE,IAGJ/B,qBAAU,WACR,IAAIoI,EAAQ,EACZX,GACEA,EAAUhH,KAAI,SAAC+C,GACb4E,GAAS5E,EAAK3G,MAAQ2G,EAAKxG,YAE/BmM,EAAaf,KACZ,CAACX,IAGJ,IAAMf,EAAM,uCAAG,sBAAAxL,EAAA,sEACPO,IADO,OAEbkG,EAAQ,MACR+F,EAAa,MAHA,2CAAH,qDAON6B,EAAU,WACd,OAAOrG,EACL,sBAAK/C,UAAU,sBAAf,UACE,oBAAGC,QAASkJ,EAAgBnJ,UAAU,YAAtC,UACG4B,EAAKxF,SADR,IACkB,mBAAG4D,UAAU,uBAE/B,mBACEC,QAAS,WACPiJ,IACAC,KAHJ,kBAQA,mBAAGlJ,QAASkJ,EAAZ,0BACA,mBACElJ,QAAS,WACP+H,GAAc,GACdmB,IACA5C,KAJJ,wBAWF,qBAAKvG,UAAU,uBAAf,SACE,oBAAGC,QAASkJ,EAAZ,qBACU,mBAAGnJ,UAAU,sBAAyB,UAOhDkE,EAAQ,WACZ,OACE,mBAAGlE,UAAU,uBAAuBC,QAAS,kBAAMkB,GAAS,IAA5D,qBAOEkI,EAAQ,WACZ,OACE,qBAAKrJ,UAAU,kBAAf,SACE,8CAKN,OACE,sBAAKA,UAAU,GAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,uBAAuBC,QAASiJ,EAA/C,UACE,mBAAGlJ,UAAU,yBACb,oBAAGA,UAAW+I,EAAY,eAAiB,SAA3C,eACKA,EAAUxE,oBAEd3C,GAAQA,EAAKrE,KAAK4H,OACjB,sBAAMnF,UAAU,cAAhB,SAA+B4B,EAAKrE,KAAK4H,SACvC,QAELvD,EAAO,cAACwH,EAAD,IAAc,cAAClF,EAAD,SAG1B,cAACmF,EAAD,IACCpG,EAAQ,cAAC,EAAD,CAAa9B,SAAUA,IAAe,KAC9C8H,EAAa,cAAC,GAAD,CAAMjB,cAAeA,IAAoB,SCpHhDsB,GAAS,WACpB,IAAQ1H,EAASH,qBAAWpD,GAApBuD,KACR,OAAOA,GAAOA,EAAK2H,MAAQ,cAAC,GAAD,IAA4B,cAAC,GAAD,K,kBCJ5CC,GAAQ,SAAC9K,GACpB,MAA0BM,mBAAS,IAAnC,mBAAOvE,EAAP,KAAcgP,EAAd,KAUA,OATA5J,qBAAU,WACR,IAAMlF,EAAM6L,OAAOC,SAAS1E,KACtB2H,EAAW/O,EAAIgP,MAAM,KAAK,GAE1BC,EAAaF,EAASC,MAAM,KAAK,GACvCF,EAASC,EAASC,MAAM,KAAK,IAC7BnD,OAAOqD,QAAQC,UAAU,GAAI,GAAInP,EAAIgP,MAAM,KAAK,IAChDpO,aAAaW,QAAQ,QAAS0N,KAC7B,IACI,8BAAMnP,EAAQ,cAAC,KAAD,CAAUsP,GAAG,MAAS,Q,0FCLhCC,GAAa,WACxB,MAAsChL,mBAAS,IAA/C,mBAAO0F,EAAP,KAAoBC,EAApB,KACA,EAAwC3F,mBAAS,GAAjD,mBAAOiL,EAAP,KAAqBC,EAArB,KACA,EAAoClL,mBAAS,IAA7C,mBAAOmL,EAAP,KAAmBC,EAAnB,KACA,EAAwBpL,mBAAS,IAAjC,mBAAOpC,EAAP,KAAayN,EAAb,KACA,EAA0BrL,mBAAS,IAAnC,mBAAOrC,EAAP,KAAc2N,EAAd,KACA,EAAgCtL,mBAAS,GAAzC,mBAAOnC,EAAP,KAAiB2K,EAAjB,KACA,EAAoCxI,mBAAS,IAA7C,mBAAO2G,EAAP,KAAmBC,EAAnB,KACA,EAA8C5G,oBAAS,GAAvD,mBAAOuL,EAAP,KAAwBC,EAAxB,KACA,EAA0CxL,qBAA1C,mBAAOyL,EAAP,KAAsBC,EAAtB,KACA,EAAkC1L,mBAAS,IAA3C,mBAAO5B,EAAP,KAAkBuN,EAAlB,KACA,EAA0B3L,mBAAS,IAAnC,mBAAOlC,EAAP,KAAc8N,EAAd,KACA,EAAsC5L,mBAAS,IAA/C,mBAAOjC,EAAP,KAAoB8N,GAApB,KACA,GAA8B7L,oBAAS,GAAvC,qBAAOW,GAAP,MAAgBC,GAAhB,MAoCMkL,GAAc,WAClBN,GAAoBD,GACpBQ,MAGIA,GAAa,WACjBX,EAAc,IACdzF,EAAe,IACfuF,EAAgB,GAChBI,EAAS,IACT9C,EAAY,GACZ6C,EAAQ,IACRQ,GAAe,KAWjB,OAPAhL,qBAAU,WAIR,OAHA,sBAAC,sBAAA9E,EAAA,kEACC6K,EADD,SACqB1H,IADrB,4EAAD,GAGO,kBAAM0H,OACZ,IAEID,EACJ4E,EAOC,sBAAKvK,UAAU,QAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAACgL,GAAA,EAAD,CAAQhL,UAAU,aAAaC,QAAS6K,GAAxC,oBAIF,eAACG,GAAA,EAAD,CAAMC,QAAQ,sBAAd,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,uBACA,eAACC,GAAA,EAAD,CACEzK,KAAK,SACLpE,KAAK,WACLsE,SAzEY,SAACZ,GACvB,IAAMuD,EAAQvD,EAAEa,OAAOuK,cACjBC,EAAUrL,EAAEa,OAAOyK,QAAQ/H,GACjC2G,EAAcmB,EAAQvQ,KAuEZyQ,aAActB,EAJhB,UAME,wBAAQtJ,MAAM,GAAG6K,UAAQ,EAAzB,+BAGC/F,EAAWrF,KAAI,SAACqL,GACf,OACE,wBAAQ3Q,GAAI2Q,EAAI1Q,IAAhB,SACG0Q,EAAInP,MADmBmP,EAAI1Q,cAOtC,eAACkQ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,2BACA,cAACC,GAAA,EAAD,CACE7O,KAAK,cACLwE,aAAa,MACbH,MAAO6D,EACPc,YAAY,qBACZ1E,SAnGQ,SAACZ,GACnByE,EAAezE,EAAEa,OAAOF,aAqGlB,eAACsK,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,kCACA,cAACC,GAAA,EAAD,CACE7O,KAAK,cACLwE,aAAa,MACbH,MAAO9D,EACP+D,SA9Ee,SAACZ,GAC1B2K,GAAe3K,EAAEa,OAAOF,QA8Ed2E,YAAY,yBAGhB,eAAC2F,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,4BACA,cAACC,GAAA,EAAD,CACEzK,KAAK,SACLpE,KAAK,eACLwE,aAAa,MACbH,MAAOoJ,EACPnJ,SA7GS,SAACZ,GACpBgK,EAAgBhK,EAAEa,OAAOF,QA6Gf2E,YAAY,sBACZoG,QAAS,kBAAM1B,EAAgB,UAGnC,eAACiB,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,2BACA,cAACC,GAAA,EAAD,CACE7O,KAAK,OACLwE,aAAa,MACbH,MAAOjE,EACP4I,YAAY,qBACZ1E,SArHQ,SAACZ,GACnBmK,EAAQnK,EAAEa,OAAOF,aAuHX,eAACsK,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,4BACA,cAACC,GAAA,EAAD,CACE7O,KAAK,QACLwE,aAAa,MACbH,MAAOlE,EACP6I,YAAY,sBACZ1E,SA3HS,SAACZ,GACpBoK,EAASpK,EAAEa,OAAOF,aA6HZ,eAACsK,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,4BACA,cAACC,GAAA,EAAD,CACEzK,KAAK,SACLpE,KAAK,WACLwE,aAAa,MACbH,MAAOhE,EACP2I,YAAY,+BACZ1E,SAlIS,SAACZ,GACpBsH,EAAYtH,EAAEa,OAAOF,QAkIX+K,QAAS,kBAAMpE,EAAY,UAG/B,eAAC2D,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,8BACA,8BACE,cAACC,GAAA,EAAD,CAAOzK,KAAK,OAAOpE,KAAK,QAAQsE,SArIvB,SAACZ,GACpB0K,EAAS1K,EAAEa,OAAO8K,MAAM,YAuIlB,eAACV,GAAA,EAAD,CAAWnL,UAAU,mBAArB,UACGyK,EACGA,EAAcnK,KAAI,SAACwL,GACjB,OACE,cAACX,GAAA,EAAD,CAA0BnL,UAAU,OAApC,SACE,cAACoL,GAAA,EAAD,UAAQU,EAAItL,OADEuL,WAKpB,KACHpM,GACC,qBAAKK,UAAU,eAAegM,KAAK,WAEnC,cAAChB,GAAA,EAAD,CACEhL,UAAU,aACVC,QAAO,sBAAE,4BAAAlF,EAAA,6DACP6E,IAAW,GADJ,SAEcrD,EACnBmI,EACAyF,EACAF,EACAtN,EACAC,EACAC,EACAC,EACAC,GAVK,OAEDkP,EAFC,OAYPrM,IAAW,GACW,MAAlBqM,EAAOhQ,OACTyO,EAAiBuB,EAAO5Q,OAExB0P,KACAJ,EAAasB,EAAO5Q,KAAKJ,MAjBpB,2CAFX,+BA4BLmC,EAAY,cAAC,KAAD,CAAU2M,GAAI,YAAc3M,IAAgB,QAhJ3D,qBAAK4C,UAAU,mBAAf,SACE,cAACgL,GAAA,EAAD,CAAQhL,UAAU,aAAaC,QAAS6K,GAAxC,+BAmJJ,yCCjOSoB,GAAc,WACzB,MAAwClN,mBAAS,IAAjD,mBAAOmN,EAAP,KAAqBC,EAArB,KACA,EAAoCpN,mBAAS,IAA7C,mBAAmB4G,GAAnB,WACA,EAAgD5G,oBAAS,GAAzD,mBAAOqN,EAAP,KAAyBC,EAAzB,KACA,EAA8BtN,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KAMM2M,EAAa,kBAAMD,GAAqBD,IAQ9C,OANAxM,qBAAU,WACR,sBAAC,sBAAA9E,EAAA,kEACC6K,EADD,SACqB1H,IADrB,4EAAD,KAGC,IAEKmO,EAON,sBAAKrM,UAAU,mBAAf,UACE,cAACgL,GAAA,EAAD,CAAQhL,UAAU,aAAaC,QAASsM,EAAxC,kBAGA,eAACtB,GAAA,EAAD,WACE,eAACE,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,4BACA,cAACC,GAAA,EAAD,CACE7O,KAAK,kBACLqE,MAAOsL,EACP3G,YAAY,sBACZ1E,SA9BU,SAACZ,GACnBkM,EAAgBlM,EAAEa,OAAOF,aAgCrB,cAACsK,GAAA,EAAD,CAAWnL,UAAU,mBAArB,SACGL,EACC,qBAAKK,UAAU,iBAEf,cAACgL,GAAA,EAAD,CACEhL,UAAU,aACVC,QAAO,sBAAE,sBAAAlF,EAAA,6DACP6E,GAAW,GADJ,SAEDxB,EAAY+N,GAFX,OAGPvM,GAAW,GACX0M,GAAoB,GAJb,2CAFX,kCAxBR,qBAAKtM,UAAU,mBAAf,SACE,cAACgL,GAAA,EAAD,CAAQhL,UAAU,aAAaC,QAASsM,EAAxC,iCCbOC,GAAY,WACvB,MAAgCxN,mBAAS,IAAzC,mBAAOyF,EAAP,KAAiBQ,EAAjB,KAEQrD,EAASH,qBAAWpD,GAApBuD,KAUR,OARA/B,qBAAU,WAKR,OAJA,sBAAC,sBAAA9E,EAAA,kEACCkK,EADD,SACmB3I,IADnB,4EAAD,GAIO,kBAAM2I,OACZ,IAEIrD,GACJA,EAAK2H,MAGJ,eAACkD,GAAA,EAAD,CAAKzM,UAAU,yBAAf,UACE,eAAC0M,GAAA,EAAD,WACE,cAACD,GAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC,GAAD,MAEF,cAACF,GAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC,GAAD,SAGJ,eAACD,GAAA,EAAD,WACE,qBAAK1M,UAAU,cAAf,SACE,cAAC,EAAD,CAAeyE,SAAUA,MAE1BA,EACGA,EAASnE,KAAI,SAAC6B,GACZ,IAAQ3F,EACN2F,EADM3F,KAAMvB,EACZkH,EADYlH,IAAKmJ,EACjBjC,EADiBiC,OAAQrH,EACzBoF,EADyBpF,YAAaJ,EACtCwF,EADsCxF,MAAOC,EAC7CuF,EAD6CvF,KAAMF,EACnDyF,EADmDzF,MAErD,OACE,cAAC+P,GAAA,EAAD,CACEE,GAAI,EACJC,GAAI,EACJC,GAAI,GACJ7M,UAAU,eAJZ,SAOE,cAAC,EAAD,CAEEhF,GAAIC,EACJuB,KAAMA,EACNE,MAAOA,EACP0H,OAAQA,EACRrH,YAAaA,EACbJ,MAAOA,EACPC,KAAMA,GAPDmP,SAHFA,WAeX,WAKV,cAAC,KAAD,CAAUhC,GAAG,O,oBChEJ+C,GAAgB,WAC3B,MAAoC9N,qBAApC,mBAAO2G,EAAP,KAAmBC,EAAnB,KACA,EAA4B5G,mBAAS,GAArC,mBAAO+N,EAAP,KAAeC,EAAf,KACA,EAAgChO,mBAAS,IAAzC,mBAAOyF,EAAP,KAAiBQ,EAAjB,KACA,EAA8BjG,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KACA,EAA0B6B,qBAAWpD,GAA7BuD,EAAR,EAAQA,KAAR,EAAcJ,QAGd3B,qBAAU,WACR,sBAAC,sBAAA9E,EAAA,kEACC6K,EADD,SACqB1H,IADrB,4EAAD,KAGC,IAGH,IAAM5B,EAAW,uCAAG,WAAOE,EAAMiH,GAAb,SAAA1I,EAAA,6DAClB6E,GAAW,GADO,KAElBqF,EAFkB,SAEA9G,EAAgB3B,GAFhB,kCAGlBoD,GAAW,GACXoN,EAAUvJ,GAJQ,2CAAH,wDAkBjB,OAVA5D,qBAAU,WACRD,GAAW,GACP+F,GACF,sBAAC,sBAAA5K,EAAA,kEACCkK,EADD,SACmB9G,EAAgBwH,EAAW,GAAG1K,KADjD,kCAEC2E,GAAW,GAFZ,0CAAD,KAKD,CAAC+F,IAEI/D,EAGN,sBAAK5B,UAAU,yBAAf,UACE,mBAAGA,UAAU,OAAb,yEAGC2F,EACC,cAACsH,GAAA,EAAD,UACGtH,EAAWrF,KAAI,SAACqL,EAAKlI,GACpB,OACE,cAACyJ,GAAA,EAAD,CACEjN,QAAS,kBAAM3D,EAAYqP,EAAI1Q,IAAKwI,IACpCzD,UACE+M,IAAWtJ,EAAQ,SAAW,6BAEhCzI,GAAIyI,EALN,SAQGkI,EAAInP,MAFAmP,EAAI1Q,UAQjB,qBAAK+E,UAAU,iBAEhBL,EACC,qBAAKK,UAAU,iBACbyE,EACF,cAACiI,GAAA,EAAD,UACGjI,EAASnE,KAAI,SAAC6M,GACb,OACE,cAACV,GAAA,EAAD,CAAKW,GAAI,GAAIT,GAAI,EAAGC,GAAI,EAAkB5M,UAAU,UAApD,SACE,cAAC,EAAD,CACExD,KAAM2Q,EAAI3Q,KACV4H,OAAQ+I,EAAI/I,OACZ1H,MAAOyQ,EAAIzQ,MAAM6H,iBACjBvJ,GAAImS,EAAIlS,OALoBkS,EAAI3Q,WAY1C,qBAAKwD,UAAU,oBA5CnB,cAAC,KAAD,CAAU+J,GAAG,OCtCJsD,GAAkB,WAC7B,MAA8BrO,oBAAS,GAAvC,mBAAOsO,EAAP,KAAgBC,EAAhB,KACA,EAAwCvO,mBAAS,IAAjD,mBAAOwO,EAAP,KAAqBC,EAArB,KACA,EAA0BhM,qBAAWpD,GAA7BuD,EAAR,EAAQA,KAAMJ,EAAd,EAAcA,QAGRkM,EAAoB,uCAAG,oCAAA3S,EAAA,2DACrBJ,EAAM6L,OAAOC,SAAS1E,MACpB4H,MAAM,KAAK,GAFQ,wBAGnB/O,EAASD,EAAIgP,MAAM,KAAK,GAAGA,MAAM,KACjC3O,EAAKJ,EAAO,GAAG+O,MAAM,KAAK,GAChC8D,EAAgBzS,GALS,SAMnBgD,EAAwBhD,EAAI,YANT,cAOnBuC,EAAO,GAPY,UAQHD,EAAesE,EAAK3G,IAAKsC,GARtB,QAQnByG,EARmB,OASzBxC,EAAQwC,GACRwC,OAAOqD,QAAQ8D,aAAa,KAAM,KAAMhT,EAAIgP,MAAM,KAAK,IACvD4D,GAAW,GAXc,4CAAH,qDAmB1B,OAJA1N,qBAAU,WACR+B,GAAQ8L,MACP,CAAC9L,IAEG0L,EACL,cAAC,KAAD,CAAUvD,GAAI,sBAAwByD,IACpC,M,UC9BOI,GAAc,SAAClP,GAC1B,OACE,cAAC,KAAD,CAAMqL,GAAIrL,EAAMmP,MAAhB,SACE,mBAAG7H,MAAO,CAAE8H,SAAU,QAAU9N,UAAU,gCCInC+N,GAAkB,WAC7B,IAAQnM,EAASH,qBAAWpD,GAApBuD,KACR,EAAkC5C,mBAAS,IAA3C,mBAAOgP,EAAP,KAAkBC,EAAlB,KAEMC,EAAmB,uCAAG,4BAAAnT,EAAA,sEACCgD,EAAiB6D,EAAK3G,KADvB,OACpBkT,EADoB,OAE1BF,EAAaE,GAFa,2CAAH,qDAWzB,OANAtO,qBAAU,WACJ+B,GACFsM,MAED,CAACtM,IAEIA,EAAcoM,EACpB,sBAAKhO,UAAU,wBAAf,UACE,oBAAIA,UAAU,mBAAd,+BACA,eAACoO,GAAA,EAAD,CAAOC,YAAU,EAACC,UAAQ,EAACtO,UAAU,UAArC,UACE,gCACE,+BACE,oCACA,sCACA,yCACA,6CAGHgO,EAAU1N,KAAI,SAAC+C,EAAMI,GACpB,IAAQ5F,EAA0CwF,EAA1CxF,KAAMsE,EAAoCkB,EAApClB,QAASlG,EAA2BoH,EAA3BpH,OAAQ0B,EAAmB0F,EAAnB1F,eAC/B,OACE,gCACE,+BACE,oBACE4Q,MAAM,MACNC,MAAM,MACNxT,GAAIyI,EACJzD,UAAU,gBAJZ,SAME,eAAC,KAAD,CAAM+J,GAAI,uBAAyBpM,EAAnC,iBACOA,OAGT,oBAAI6Q,MAAM,MAAV,SAAiB,IAAIC,KAAK5Q,GAAM6Q,uBAC/BvM,EAAQgD,OAAS,EAChB,oBAAIqJ,MAAM,MAAMxO,UAAU,iBAA1B,SACGmC,EAAQ7B,KAAI,SAAC+C,GACZ,OAAOA,EAAKsL,MAAQ,SAIxB,oBAAIH,MAAM,MAAV,SAAiBrM,EAAQ,GAAGwM,QAE9B,qBAAIH,MAAM,MAAV,qBAAyBvS,SAtBjBwH,SA4BlB,cAAC,GAAD,CAAaoK,MAAO,SAGtB,qBAAK7N,UAAU,mBAAf,SACE,mBAAGA,UAAU,mBA/CF,MCjBJ4O,GAAoB,WAC/B,IAAQhN,EAASH,qBAAWpD,GAApBuD,KACR,EAA4B5C,qBAA5B,mBAAO6P,EAAP,KAAeC,EAAf,KACA,EAA0B9P,mBAAS,IAAnC,mBAAOiJ,EAAP,KAAcC,EAAd,KAEM6G,EAAS,uCAAG,gCAAAhU,EAAA,6DACZJ,EAAM6L,OAAOC,SAAS1E,KACtB/G,EAAKL,EAAIgP,MAAM,KAAK,GAFR,SAGU7L,EAAe9C,GAHzB,QAGVgU,EAHU,SAKdF,EAAUE,GALI,2CAAH,qDAsBf,OAbAnP,qBAAU,WACRkP,MACC,CAACnN,IAEJ/B,qBAAU,WACR,IAAIoP,EAAa,EACjBJ,GACEA,EAAO1M,QAAQiB,SAAQ,SAACC,GACtB4L,GAAc5L,EAAKxG,SAAWwG,EAAK6L,cAEvChH,EAAS+G,KACR,CAACJ,IAEIjN,EAAciN,EACpB,sBAAK7O,UAAU,YAAf,UACE,kDAAqB6O,EAAOlR,kBAC5B,sDAAyB,IAAI8Q,KAAKI,EAAOhR,MAAM6Q,qBAA/C,OACA,yCAAYG,EAAO5S,UACnB,oBAAI+D,UAAU,cAAd,6BACA,wBAAOA,UAAU,oBAAjB,UACE,gCACE,+BACE,sCACA,4CACA,+CAGH6O,EAAO1M,QAAQ7B,KAAI,SAAC+C,EAAMI,GACzB,OACE,gCACE,+BACE,6BAAKJ,EAAKsL,QACV,6BAAKtL,EAAK6L,WAAW3K,mBACrB,6BAAKlB,EAAKxG,eAJF4G,SAUlB,qBAAIzD,UAAU,cAAd,oBAAoCiI,EAAM1D,oBAC1C,cAAC,GAAD,CAAasJ,MAAO,qBAGtB,qBAAK7N,UAAU,mBAAf,SACE,mBAAGA,UAAU,eAAb,oBA/BW,MC5BJmP,GAAoB,SAACzQ,GAChC,MAAwCM,mBAAS,IAAjD,mBAAOmP,EAAP,KAAqBiB,EAArB,KAEMC,EAAkB,uCAAG,4BAAAtU,EAAA,sEACNkD,IADM,OACnB5C,EADmB,OAEzB+T,EAAgB/T,GAFS,2CAAH,qDAUxB,OALAwE,qBAAU,WAER,OADAwP,IACO,kBAAMD,EAAgB,OAC5B,IAGD,sBAAKpP,UAAU,wBAAf,UACE,oBAAIA,UAAU,mBAAd,8BACA,eAACoO,GAAA,EAAD,CAAOC,YAAU,EAACzR,KAAK,KAAK0R,UAAQ,EAApC,UACE,gCACE,+BACE,oCACA,sCACA,sCACA,0CACA,6CAGHH,EAAahJ,QACZgJ,EAAa7N,KAAI,SAAC+C,EAAMI,GACtB,IAAQ9F,EAAgD0F,EAAhD1F,eAAgBiE,EAAgCyB,EAAhCzB,KAAM/D,EAA0BwF,EAA1BxF,KAAMsE,EAAoBkB,EAApBlB,QAASlG,EAAWoH,EAAXpH,OAC7C,OACE,uBAAmBjB,GAAI2C,EAAvB,SACE,+BACE,6BAAKA,IACL,6BAAKiE,EAAKxF,WACV,6BAAK,IAAIqS,KAAK5Q,GAAM6Q,uBACnBvM,EAAQgD,OAAS,EAChB,oBAAInF,UAAU,iBAAd,SACGmC,EAAQ7B,KAAI,SAAC+C,GACZ,OAAOA,EAAKsL,MAAQ,SAIxB,oBAAIH,MAAM,MAAV,SAAiBrM,EAAQ,GAAGwM,QAE9B,6BAAK1S,QAdGwH,aC9Bb6L,GAAkB,SAAC5Q,GAC9B,MAA8BM,oBAAS,GAAvC,mBAAOsO,EAAP,KAAgBC,EAAhB,KACA,EAAwCvO,mBAAS,IAAjD,mBAAOwO,EAAP,KAAqBC,EAArB,KACQ7L,EAASH,qBAAWpD,GAApBuD,KAGF8L,EAAoB,uCAAG,gCAAA3S,EAAA,2DACrBJ,EAAM6L,OAAOC,SAAS1E,MACpB4H,MAAM,KAAK,GAFQ,uBAGnB/O,EAASD,EAAIgP,MAAM,KAAK,GAAGA,MAAM,KACjC3O,EAAKJ,EAAO,GAAG+O,MAAM,KAAK,GAChC8D,EAAgBzS,GALS,SAMnBgD,EAAwBhD,EAAI,YANT,OAOzBwL,OAAOqD,QAAQ8D,aAAa,KAAM,KAAMhT,EAAIgP,MAAM,KAAK,IACvD4D,GAAW,GARc,2CAAH,qDAiB1B,OALA1N,qBAAU,WACR0P,QAAQC,IAAI,QACZ5N,GAAQ8L,MACP,CAAC9L,IAEG0L,EACL,cAAC,KAAD,CAAUvD,GAAI,sBAAwByD,IACpC,MCsBSiC,OArCf,WACE,MAAwBzQ,qBAAxB,mBAAO4C,EAAP,KAAaJ,EAAb,KAUA,OARA3B,qBAAU,WACR,sBAAC,4BAAA9E,EAAA,2DACON,G9BPVA,EAAQc,aAAamU,QAAQ,WAE3BhV,EAAeiV,IAAIC,OAAOnV,GACR,IAAIgU,KAAwB,IAAnB/T,EAAamV,KACxB,IAAIpB,KAAKA,KAAKqB,YAC5BvU,aAAaC,QAELf,EAAQ,UAAYA,GAElB,M8BHX,4BAEY+G,EAFZ,SAE0B1G,EAASL,GAFnC,yDAGM+G,EAAQ,MAHd,2CAAD,KAKC,IAGD,cAAC,KAAD,UACE,eAACnD,EAAY0R,SAAb,CAAsBlP,MAAO,CAAEe,OAAMJ,WAArC,UACE,cAAC,GAAD,IACA,eAAC,KAAD,WACE,cAAC,KAAD,CAAOwO,KAAK,UAAUC,UAAWzG,KACjC,cAAC,KAAD,CAAOwG,KAAK,mBAAmBC,UAAWzD,KAC1C,cAAC,KAAD,CAAOwD,KAAK,oBAAoBC,UAAWnD,KAC3C,cAAC,KAAD,CAAOkD,KAAK,mBAAmBC,UAAW5C,KAC1C,cAAC,KAAD,CAAO2C,KAAK,gBAAgBC,UAAWlC,KACvC,cAAC,KAAD,CAAOiC,KAAK,qBAAqBC,UAAWrB,KAC5C,cAAC,KAAD,CAAOoB,KAAK,sBAAsBC,UAAWd,KAC7C,cAAC,KAAD,CAAOa,KAAK,mBAAmBC,UAAWX,KACzC1N,GACC,cAAC,KAAD,CACEoO,KAAK,WACLE,OAAQ,SAACxR,GAAD,OAAW,cAAC,EAAD,aAAe1D,GAAI4G,EAAK3G,KAASyD,OAGxD,cAAC,KAAD,CAAOsR,KAAK,IAAIC,UAAW9J,a,OCzCrCgK,IAASD,OAAO,cAAC,GAAD,IAASE,SAASC,eAAe,W","file":"static/js/main.56420590.chunk.js","sourcesContent":["import jwt from \"jsonwebtoken\";\n\n//const url = \"http://localhost:5000\"; // DEVELOPMENT\nconst url = \"https://ecommercedemosite.herokuapp.com\"; // LIVE\nlet token;\nlet decodedToken;\nconst params = {\n  Authorization: token,\n  \"Content-Type\": \"application/json\",\n};\n\n/**************************************************** USER  ***************************************************************/\n// CHECK FOR LOCAL TOKEN\nexport const checkForToken = () => {\n  token = localStorage.getItem(\"token\");\n  if (token) {\n    decodedToken = jwt.decode(token);\n    const expiresAt = new Date(decodedToken.exp * 1000);\n    if (expiresAt < new Date(Date.now())) {\n      localStorage.clear();\n    } else {\n      return (token = \"Bearer \" + token);\n    }\n  } else return null;\n};\n\n// GET THE USER DATA\nexport const userData = async () => {\n  try {\n    let id = decodedToken._id;\n    const response = await fetch(url + \"/user/\" + id);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// LOGOUT USER\nexport const logout = async () => {\n  await fetch(url + \"/logout\");\n  localStorage.clear();\n};\n\n// LOG IN LOCAL USER\nexport const localUser = async (email, password) => {\n  const response = await fetch(url + \"/user/login\", {\n    method: \"POST\",\n    headers: params,\n    body: JSON.stringify({\n      email,\n      password,\n    }),\n  });\n  const data = await response.json();\n  if (response.status === 200) localStorage.setItem(\"token\", data.token);\n  return { data, status: response.status };\n};\n\n// CREATE LOCAL USER\nexport const newUser = async (email, username, password, confirm) => {\n  const response = await fetch(url + \"/user/new\", {\n    method: \"POST\",\n    headers: params,\n    body: JSON.stringify({\n      email,\n      username,\n      password,\n      confirm,\n    }),\n  });\n  const data = await response.json();\n  return { response, data };\n};\n\n/********************************************************* PRODUCTS ****************************************/\n// GET ALL PRODUCTS\nexport const getProducts = async () => {\n  try {\n    const response = await fetch(url + \"/products\");\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// ADD NEW PRODUCT\nexport const addNewProduct = async (\n  name,\n  category,\n  price,\n  color,\n  size,\n  quantity,\n  image,\n  description\n) => {\n  const formData = new FormData();\n  formData.append(\"name\", name);\n  formData.append(\"price\", price);\n  formData.append(\"category\", category);\n  formData.append(\"color\", color);\n  formData.append(\"size\", size);\n  formData.append(\"quantity\", quantity);\n  formData.append(\"image\", image);\n  formData.append(\"description\", description);\n  try {\n    const response = await fetch(url + \"/product/new\", {\n      method: \"POST\",\n      body: formData,\n    });\n    const data = await response.json();\n    return { status: response.status, data };\n  } catch (err) {\n    return err;\n  }\n};\n\n// PRODUCT DETAIL\nexport const productDetail = async (productId) => {\n  try {\n    const response = await fetch(url + \"/product/\" + productId, {\n      method: \"GET\",\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// DELETE PRODUCT WITH ALL INFO AND IMAGES\nexport const deleteProduct = async (id) => {\n  await fetch(url + \"/product/\" + id, {\n    method: \"DELETE\",\n    headers: params,\n  });\n};\n\n// UPDATE DESCRIPTION\nexport const updateDescription = async (id, description) => {\n  await fetch(url + \"/product/description/\" + id, {\n    method: \"PUT\",\n    headers: params,\n    body: JSON.stringify({\n      description,\n    }),\n  });\n};\n\n// EDIT PRODUCT PRICE STOCK\nexport const updateProduct = async (id, size, quantity, color, description) => {\n  try {\n    const response = await fetch(url + \"/product/update/\" + id, {\n      method: \"PUT\",\n      headers: params,\n      body: JSON.stringify({ size, quantity, color, description }),\n    });\n    const data = await response.json();\n    return { status: response.status, data };\n  } catch (err) {\n    return err;\n  }\n};\n\n// ADD IMAGES TO PRODUCT\nexport const addImagesToProduct = async (id, image) => {\n  const formData = new FormData();\n  for (let img of image) {\n    formData.append(\"image\", img);\n  }\n  try {\n    const response = await fetch(url + \"/product/image/\" + id, {\n      method: \"PUT\",\n      body: formData,\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// DELETE PRODUCT IMAGE\nexport const deleteProductImage = async (index, id) => {\n  try {\n    const response = await fetch(url + \"/product/delete/image/\" + id, {\n      method: \"DELETE\",\n      headers: params,\n      body: JSON.stringify({ imageToDeleteIndex: index }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// DELETE PRODUCT DETAIL\nexport const deleteProductInfo = async (id, index) => {\n  try {\n    const response = await fetch(url + \"/product/details/\" + id, {\n      method: \"DELETE\",\n      headers: params,\n      body: JSON.stringify({\n        index,\n      }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// ADD PRODUC TO USER CART\nexport const addToCart = async (id, productId, size, color, quantity) => {\n  const response = await fetch(url + \"/product/cart/\" + id, {\n    method: \"PUT\",\n    headers: params,\n    body: JSON.stringify({\n      id: productId,\n      size,\n      color,\n      quantity,\n    }),\n  });\n  const data = await response.json();\n  return data;\n};\n\n// UPDATE USER CART\nexport const updateUserCart = async (id, cart) => {\n  try {\n    const response = await fetch(url + \"/user/product/cart/\" + id, {\n      method: \"PUT\",\n      headers: params,\n      body: JSON.stringify({\n        cart,\n      }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// UPDATE USER PURCHASES ARRAY\nexport const updatePurchases = async (userId, purchase) => {\n  try {\n    const response = await fetch(url + \"/user/purchases/\" + userId, {\n      method: \"PUT\",\n      headers: params,\n      body: JSON.stringify({\n        purchase,\n      }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\n// GET PURCHASE DETAIL\nexport const purchaseDetail = async (userId, index) => {\n  try {\n    const response = await fetch(url + \"/purchase/detail/\" + userId, {\n      method: \"POST\",\n      headers: params,\n      body: JSON.stringify({\n        index,\n      }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n/****************************************************************** CHECKOUT    *******************************************************************/\n\n// CHECK STOCK BEFORE CHECKOUT AND REDIRECT\nexport const checkStock = async (id) => {\n  try {\n    const response = await fetch(url + \"/checkout/\" + id, {\n      method: \"POST\",\n      headers: params,\n    });\n    const data = await response.json();\n    return { data, status: response.status };\n  } catch (err) {\n    return err;\n  }\n};\n\n//SUCCESS TEST\nexport const success = async () => {\n  try {\n    const resposne = await fetch(url + \"/success\");\n    const data = await resposne.json();\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const updateSuccessPurchase = async (id, index) => {\n  try {\n    const response = await fetch(url + \"/user/success/\" + id, {\n      method: \"PUT\",\n      headers: params,\n      body: JSON.stringify({\n        index,\n      }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n/******************************************************************* TRANSACTIONS ***************************/\n\n// NEW TRANSACTION\nexport const newTransaction = async (\n  userId,\n  transaction_id,\n  status,\n  items,\n  date\n) => {\n  try {\n    const response = await fetch(url + \"/transaction/new\", {\n      method: \"POST\",\n      headers: params,\n      body: JSON.stringify({\n        userId,\n        transaction_id,\n        status,\n        items,\n        date,\n      }),\n    });\n    const data = await response.json();\n  } catch (err) {\n    return err;\n  }\n};\n\n// GET  SPECIFIC TRANSACTION\nexport const getTransaction = async (transaction_id) => {\n  try {\n    const response = await fetch(url + \"/transaction/\" + transaction_id);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// GET USER TRANSACTIONS\nexport const userTransactions = async (userId) => {\n  try {\n    const response = await fetch(url + \"/transactions/user/\" + userId);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n//UPDATE TRANSACTION STATUS\nexport const updateTransactionStatus = async (id, status) => {\n  try {\n    await fetch(url + \"/transaction/update\", {\n      method: \"PUT\",\n      headers: params,\n      body: JSON.stringify({\n        id,\n        status,\n      }),\n    });\n  } catch (err) {\n    return err;\n  }\n};\n\n// GET ALL TRANSACTIONS\nexport const allTransactions = async () => {\n  try {\n    const response = await fetch(url + \"/transactions/all\", {\n      method: \"GET\",\n      headers: params,\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n/******************************************************************* CATEGORIES  *******************************************************************/\n\n// GET ALL CATEGORIES\nexport const getCategories = async () => {\n  try {\n    const response = await fetch(url + \"/categories\");\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\n// GET PRODUCT BY CATEGORY\nexport const getProductByCat = async (category) => {\n  try {\n    const response = await fetch(url + \"/category/product\", {\n      method: \"POST\",\n      headers: params,\n      body: JSON.stringify({ category }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {}\n};\n\n// NEW CATEGORY\nexport const newCategory = async (name) => {\n  try {\n    const response = await fetch(url + \"/category/new\", {\n      method: \"POST\",\n      headers: params,\n      body: JSON.stringify({\n        name,\n      }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {}\n};\n","import { createContext } from \"react\";\n\nexport const userContext = createContext({});\nexport const userCartContext = createContext([]);\n","import styled from \"styled-components\";\n\nexport const ColorSquares = styled.div`\n  background-color: ${(props) => props.color};\n  width: 18px;\n  height: 18px;\n  border-radius: 4px;\n  margin: 2px;\n\n  &:hover {\n    transform: scale(1.3);\n    cursor: pointer;\n  }\n\n  @media (max-width: 520px) {\n    width: 1.5rem;\n    height: 1.5rem;\n    border-radius: 0.1rem;\n  }\n`;\n","import styled, { keyframes } from \"styled-components\";\n\nconst rotate = keyframes`\nfrom {\n    transform: rotate(0deg);\n}\nto {\n    transform: rotate(360deg);\n}\n`;\n\nconst Spinner = styled.div`\n  animation: ${rotate} 1s linear infinite;\n  border-top: 2px solid gray;\n  border-right: 2px solid gray;\n  border-bottom: 2px solid gray;\n  border-left: 4px solid black;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  margin: auto;\n`;\n\nexport default Spinner;\n","import { useState, useEffect } from \"react\";\nimport { newUser } from \"../API/API\";\nimport Spinner from \"./Styled/Spinner\";\n\nexport const NewAccount = ({ setNewAccount }) => {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [createAccErrors, setCreateAccErrors] = useState(false);\n  const [accCreated, setAccCreated] = useState(false);\n  const [count, setCount] = useState(3);\n  const [loading, setLoading] = useState(false);\n\n  const emailHandler = (e) => {\n    setEmail(e.target.value);\n    setCreateAccErrors(false);\n  };\n\n  const usernameHandler = (e) => {\n    setUsername(e.target.value);\n    setCreateAccErrors(false);\n  };\n\n  const passwordHandler = (e) => {\n    setPassword(e.target.value);\n    setCreateAccErrors(false);\n  };\n\n  const confirmHandler = (e) => {\n    setConfirm(e.target.value);\n    setCreateAccErrors(false);\n  };\n\n  useEffect(() => {\n    if (accCreated) {\n      if (count > 0) {\n        setTimeout(() => {\n          setCount(count - 1);\n        }, 1000);\n      }\n    }\n  }, [accCreated, count]);\n\n  useEffect(() => {\n    if (count === 0) setNewAccount(false);\n  }, [count, setNewAccount]);\n\n  // CLOSE NEW ACCOUNT FORM\n  const hideForm = () => {\n    setNewAccount(false);\n  };\n\n  // CONST CREATE ACCOUNT\n  const CreateAccBtn = () => {\n    return (\n      <div className=\"btn-container\">\n        <button\n          className=\"btn btn-black\"\n          onClick={async (e) => {\n            setLoading(true);\n            e.preventDefault();\n            const response = await newUser(email, username, password, confirm);\n            if (response.response.status === 500) {\n              setCreateAccErrors(response.data.errors);\n              setLoading(false);\n            }\n            if (response.response.status === 200) {\n              setLoading(false);\n              setAccCreated(true);\n            }\n          }}\n        >\n          Create\n        </button>\n      </div>\n    );\n  };\n\n  // SHOW ERRORS\n  const ShowErrors = () => {\n    return createAccErrors.map((error) => {\n      return (\n        <div className=\"errors\">\n          <label>{error.msg}</label>\n        </div>\n      );\n    });\n  };\n\n  // ACCOUNT SUCCESS\n  const AccountSuccess = () => {\n    return (\n      <div className=\"success-container\">\n        <p>Account Created!</p>\n        <p>Closing in... {count}</p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"overlay\" onClick={hideForm}>\n      <form action=\"\" className=\"form \" onClick={(e) => e.stopPropagation()}>\n        <div className=\"input-container new-acc\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={emailHandler}\n            autoComplete=\"off\"\n            required\n          />\n          <label>Email</label>\n        </div>\n        <div className=\"input-container new-acc\">\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={usernameHandler}\n            required\n            autoComplete=\"off\"\n          />\n          <label>Username</label>\n        </div>\n        <div className=\"input-container new-acc\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={passwordHandler}\n            required\n          />\n          <label>Password</label>\n        </div>\n        <div className=\"input-container new-acc\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={confirm}\n            onChange={confirmHandler}\n            required\n          />\n          <label>Confirm Password</label>\n        </div>\n        {createAccErrors ? (\n          <ShowErrors />\n        ) : loading ? (\n          <Spinner />\n        ) : accCreated ? (\n          <AccountSuccess />\n        ) : (\n          <CreateAccBtn />\n        )}\n      </form>\n    </div>\n  );\n};\n","import { useContext, useState } from \"react\";\nimport { localUser } from \"../API/API\";\nimport { userContext } from \"../Context/Contexts\";\nimport Spinner from \"./Styled/Spinner\";\nimport { NewAccount } from \"./NewAccount\";\n\nexport const LoginScreen = ({ setLogin }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [logged, setLogged] = useState(false);\n  const [loginError, setLogginErros] = useState(\"\");\n  const { setUser } = useContext(userContext);\n  const [loading, setLoading] = useState(false);\n  const [newAccount, setNewAccount] = useState(false);\n\n  const emailHandler = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const passwordHandler = (e) => {\n    setPassword(e.target.value);\n  };\n\n  // HIDE FORM\n  const hideForm = () => {\n    setLogin(false);\n  };\n\n  // NEW ACCOUNT FORM\n  const toggleAccountForm = () => {\n    setNewAccount(!newAccount);\n  };\n\n  // LOGIN BUTTON\n  const LoginBtn = () => {\n    return (\n      <div className=\"btn-container\">\n        <button\n          className=\"btn btn-black\"\n          onClick={async (e) => {\n            setLoading(true);\n            e.preventDefault();\n            const response = await localUser(email, password);\n            if (response.status === 200) {\n              setLogged(true);\n              setUser(response.data.user);\n            }\n            if (response.status === 500) setLogginErros(response.data);\n            setLoading(false);\n          }}\n        >\n          Log in\n        </button>\n      </div>\n    );\n  };\n\n  return newAccount ? (\n    <NewAccount setNewAccount={setNewAccount} />\n  ) : (\n    <div className=\"overlay\" onClick={hideForm}>\n      <div className=\"form\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={emailHandler}\n            autoComplete=\"off\"\n            required\n          />\n          <label>Email</label>\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={passwordHandler}\n            required\n          />\n          <label>Password</label>\n        </div>\n        {loginError ? (\n          <div className=\"error\">\n            <label>{loginError}</label>\n          </div>\n        ) : null}\n\n        {loading ? (\n          <div className=\"spinner-container\">\n            <Spinner />\n          </div>\n        ) : (\n          <div>\n            <LoginBtn />\n            <div className=\"google-container\">\n              <div className=\"btn btn-google\">\n                <div className=\"google-icon-wrapper\">\n                  <img\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                    alt=\"\"\n                    className=\"\"\n                  />\n                </div>\n                <div>\n                  <a\n                    onClick={() => setLoading(true)}\n                    href=\"https://ecommercedemosite.herokuapp.com/user/google/login\"\n                    className=\"btn-text\"\n                  >\n                    Google Login\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div className=\"new-account\">\n              <button className=\"btn btn-black\" onClick={toggleAccountForm}>\n                Create Account\n              </button>\n            </div>\n          </div>\n        )}\n        {logged ? setLogin(false) : null}\n        {newAccount ? <NewAccount /> : null}\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect, useContext } from \"react\";\nimport { productDetail, addToCart } from \"../API/API\";\nimport { userContext } from \"../Context/Contexts\";\nimport { ColorSquares } from \"./Styled/ColorSquares\";\nimport { ProductSlideShow } from \"./ProductSlideShow\";\nimport Spinner from \"../Components/Styled/Spinner\";\nimport { LoginScreen } from \"../Components/LoginScreen\";\n\n// SHOWS THE PRODUCT PAGE WITH ALL THE INFO\n\nexport const ProductDetail = ({ toggleModal, name, img, id }) => {\n  const [product, setProduct] = useState({});\n  const [sizes, setSizes] = useState([]);\n  const [colors, setColors] = useState([]);\n  const [selectedSize, setSelectedSize] = useState();\n  const [selectedColor, setSelectedColor] = useState();\n  const [loading, setLoading] = useState(false);\n  const [addedToCart, setAddedToCart] = useState(false);\n  const [dropdown, setDropwDown] = useState(false);\n  const [login, setLogin] = useState(false);\n\n  const { user, setUser } = useContext(userContext);\n\n  // FETCH THE PRODUCT\n  useEffect(() => {\n    if (id) {\n      (async () => {\n        setProduct(await productDetail(id));\n      })();\n    }\n  }, [id]);\n\n  // GET THE UNIQUE SIZES\n  useEffect(() => {\n    if (product.details) {\n      const { details } = product;\n      let availableSizes = {};\n      details.forEach((elem) => {\n        if (!availableSizes[elem.size]) {\n          availableSizes[elem.size] = 1;\n        }\n      });\n      for (let key in availableSizes) {\n        setSizes((old) => [...old, key]);\n      }\n    }\n  }, [product]);\n\n  // GET AND SHOWS THE UNIQUE SIZES\n  const UniqueSizes = () => {\n    return sizes.map((elem, index) => {\n      return (\n        <p\n          key={index}\n          onClick={() => selectSize(elem)}\n          className={selectedSize === elem ? \"selected-size\" : \"size\"}\n        >\n          {elem}\n        </p>\n      );\n    });\n  };\n\n  // FIND THE COLORS OF THE SELECTED SIZE\n  const showColorsBySize = (size) => {\n    const { details } = product;\n    let colorsBySize = {};\n    let colors = [];\n    details.forEach((elem) => {\n      if (!colorsBySize[elem.color] && elem.size === size) {\n        colorsBySize[elem.color] = 1;\n      }\n    });\n    for (let key in colorsBySize) {\n      colors.push(key);\n    }\n    setColors(colors);\n  };\n\n  // SELECT SIZE\n  const selectSize = (elem) => {\n    if (selectedSize) {\n      setSelectedSize();\n      setSelectedColor();\n    }\n    setSelectedSize(elem);\n    showColorsBySize(elem);\n  };\n\n  const resetState = () => {\n    setSelectedColor(\"\");\n    setSelectedSize(\"\");\n    setAddedToCart(false);\n  };\n\n  const productAdded = () => {\n    setAddedToCart(true);\n  };\n\n  // DROPDOWN OF AVAILABLE COLORS\n  const ColorDropdown = () => {\n    return (\n      <div className=\"detail-color-list\">\n        {colors.map((elem, index) => {\n          return (\n            <div onClick={() => setSelectedColor(elem)}>\n              <ColorSquares color={elem} key={index} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  // ADD TO CART BUTTON\n  const AddToCartBtn = () => {\n    return (\n      <p\n        className=\"btn btn-black\"\n        onClick={async () => {\n          setLoading(true);\n          const newCart = await addToCart(\n            user._id,\n            id,\n            selectedSize,\n            selectedColor,\n            1\n          );\n          setUser(newCart);\n          setLoading(false);\n          productAdded();\n        }}\n      >\n        add to cart\n      </p>\n    );\n  };\n\n  // SHOWS LOG IN FORM\n  const onClickLogin = () => {\n    setLogin(!login);\n  };\n\n  // LOG IN BUTTON\n  const Login = () => {\n    return (\n      <p className=\"btn btn-login\" onClick={onClickLogin}>\n        Log in to continue\n      </p>\n    );\n  };\n\n  return login ? (\n    <LoginScreen setLogin={setLogin} />\n  ) : (\n    <div className=\"overlay\" onClick={toggleModal}>\n      <div className=\"main-modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"header-modal\">\n          <span className=\"close-btn\" onClick={toggleModal}>\n            &#x3A7;\n          </span>\n          <div className=\"modal-img\">\n            <img src={img} alt=\"\" className=\"detail-img\" />\n          </div>\n        </div>\n        <div className=\"body-modal\" onClick={() => setDropwDown(false)}>\n          <p className=\"detail-name\">{name}</p>\n          <p className=\"detail-price\">$50</p>\n          <div className=\"detail-container\">\n            <div className=\"detail-sizes\">\n              <UniqueSizes />\n            </div>\n            <div className=\"detail-color-container\">\n              {selectedSize ? (\n                !selectedColor ? (\n                  dropdown ? (\n                    <ColorDropdown />\n                  ) : (\n                    /* COLOR LIST DROPDOWN BUTTON */\n                    <div\n                      className=\"detail-color\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        setDropwDown(!dropdown);\n                      }}\n                    >\n                      <i className=\"fas fa-caret-down\"></i>\n                    </div>\n                  )\n                ) : (\n                  /* SELECTED COLOR */\n                  <div className=\"detail-color\">\n                    <ColorSquares color={selectedColor} />\n                  </div>\n                )\n              ) : (\n                /* NON COLOR SELECTED */\n                <div className=\"detail-color\">\n                  <ColorSquares />\n                </div>\n              )}\n            </div>\n          </div>\n          {!user ? (\n            <Login />\n          ) : !selectedColor ? (\n            /* DISABLED BUTTON */\n            <p className=\"btn-disabled btn \">add to cart</p>\n          ) : loading ? (\n            <Spinner />\n          ) : addedToCart ? (\n            <p className=\"added-msg\">product added </p>\n          ) : (\n            <AddToCartBtn />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { ProductDetail } from \"./ProductDetail\";\n\n// DISPLAY THE PRODUCTS CARDS WITH TITLE; PRICE AND IMAGE\n\nexport const ProductCard = (props) => {\n  const { id, name, price, images } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggleModal = () => setModal(!modal);\n\n  return (\n    <div className=\"card-container\">\n      <div>\n        <img className=\"detail-img\" src={images[0].url} alt={name} />\n      </div>\n      <div>\n        <h4>{name}</h4>\n        <p className=\"card-price\">$ {price.toLocaleString()}</p>\n        <button className=\"btn btn-black\" onClick={toggleModal}>\n          Info\n        </button>\n      </div>\n      {modal ? (\n        <ProductDetail\n          id={id}\n          modal={modal}\n          toggleModal={toggleModal}\n          name={name}\n          img={images[0].url}\n        />\n      ) : null}\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { productDetail } from \"../API/API\";\n\n// SEARCH PRODUCTS ON INPUT\n\nexport const SearchProduct = (props) => {\n  const { products } = props;\n  const [productName, setProductName] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n\n  const nameHandler = (e) => {\n    let matches = [];\n    // VALIDATES THE INPUT WITH POSSIBLE SUGGESTIONS\n    if (e.target.value.length) {\n      matches = products.filter((elem) => {\n        const regex = new RegExp(`${e.target.value}`, \"gi\");\n        return elem.name.match(regex);\n      });\n    }\n    setSuggestions(matches);\n    setProductName(e.target.value);\n  };\n\n  const suggestionHandler = async (product) => {\n    const singleProduct = [await productDetail(product._id)];\n    props.setSelectedCat(\"\");\n    props.setProducts(singleProduct);\n    setProductName(\"\");\n    setSuggestions([]);\n  };\n\n  return (\n    <div>\n      <div className=\"autocomplete\">\n        <input\n          onChange={nameHandler}\n          value={productName}\n          placeholder=\"What are you looking for ?\"\n        />\n\n        <div className=\"autocomplete-items\">\n          {suggestions &&\n            suggestions.map((suggestion, index) => {\n              return (\n                <div key={index} onClick={() => suggestionHandler(suggestion)}>\n                  {suggestion.name}\n                </div>\n              );\n            })}\n        </div>\n        <div className=\"search\">\n          <i className=\"fas fa-search\"></i>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/home.266fbb07.png\";","import { useState, useEffect } from \"react\";\nimport { getCategories, getProductByCat, getProducts } from \"../API/API\";\nimport home from \"../assets/home.png\";\n\n// DISPLAY ALL THE CATEGORIES ON A BAR\n\nexport const Categories = (props) => {\n  const [categories, setCategories] = useState();\n\n  // GET ALL CATEGORIES ON LOAD\n  useEffect(() => {\n    (async () => {\n      setCategories(await getCategories());\n    })();\n    return () => setCategories();\n  }, []);\n\n  // GET SPECIFIC CATEOGRY ITEMS ON CLICK\n  const getProductsByCategory = async (id, index) => {\n    props.setLoading(true);\n    props.setProducts(await getProductByCat(id));\n    props.setSelectedCat(index + 1);\n    props.setLoading(false);\n    return () => props.setProducts([]);\n  };\n\n  // GET ALL PRODUCTS\n  const getAllProducts = async () => {\n    props.setProducts(await getProducts());\n    props.setSelectedCat(0);\n  };\n\n  return (\n    <div className=\"categories-container\">\n      <div\n        className={\n          props.selectedCat === 0\n            ? \"categories-card selected-cat\"\n            : \"categories-card\"\n        }\n        onClick={(e) => getAllProducts(e)}\n        style={{\n          backgroundImage: `url(${home})`,\n        }}\n      >\n        <div className=\"ribbon ribbon-top-left\">\n          <span>all</span>\n        </div>\n      </div>\n      {categories &&\n        categories.map((category, index) => {\n          const { name, image, _id } = category;\n          return (\n            <div\n              key={index}\n              id={index + 1}\n              className={\n                props.selectedCat === index + 1\n                  ? \"categories-card selected-cat\"\n                  : \"categories-card\"\n              }\n              style={{\n                backgroundImage: `url(${image.url})`,\n              }}\n              onClick={(e) => getProductsByCategory(_id, index)}\n            >\n              <div className=\"ribbon ribbon-top-left\">\n                <span>{name}</span>\n              </div>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { getProducts } from \"../API/API\";\nimport { ProductCard } from \"./ProductCard\";\nimport { SearchProduct } from \"./SearchProduct\";\nimport { Categories } from \"./Categories\";\n\nconst Home = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedCat, setSelectedCat] = useState(0);\n\n  // GET ALL PRODUCTS\n  useEffect(() => {\n    (async () => {\n      setProducts(await getProducts());\n    })();\n    return () => {\n      setProducts();\n    };\n  }, []);\n\n  return (\n    <div className=\"text-center\">\n      <Categories\n        products={products}\n        setProducts={setProducts}\n        setLoading={setLoading}\n        selectedCat={selectedCat}\n        setSelectedCat={setSelectedCat}\n      />\n      <SearchProduct\n        products={products}\n        setProducts={setProducts}\n        selectedCat={selectedCat}\n        setSelectedCat={setSelectedCat}\n      />\n      <div className=\"home-container container\">\n        {loading ? (\n          <div className=\"spinner-grow\"></div>\n        ) : (\n          products &&\n          products.map((product, index) => {\n            const { name, _id, description, images, size, color, price } =\n              product;\n            return (\n              <ProductCard\n                id={_id}\n                name={name}\n                description={description}\n                images={images}\n                size={size}\n                color={color}\n                price={price}\n                key={index}\n              />\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useContext } from \"react\";\nimport { userContext } from \"../../Context/Contexts\";\nimport { logout } from \"../../API/API\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from \"reactstrap\";\n\n/* DISPLAY THE ADMIN NAV BAR, WITH LINKS TO SELLS, CATEGORIES AND \nPRODUCTS LINKS */\n\nexport const AdminNav = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const { user, setUser } = useContext(userContext);\n\n  const logOut = async () => {\n    await logout();\n    setUser(null);\n    window.location.replace(\"/ecommerce-client/\");\n  };\n\n  return (\n    <div className=\"px-2 container\">\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/ecommerce-client/#/admin-productos\">\n          {user.username}\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/ecommerce-client/#/admin-transactions\">\n                Transactions\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/ecommerce-client/#/admin-categorias\">\n                Categories\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/ecommerce-client/#/admin-productos\">\n                Products\n              </NavLink>\n            </NavItem>\n            {user ? (\n              <NavItem>\n                <NavLink href=\"#\" onClick={logOut}>\n                  Log out\n                </NavLink>\n              </NavItem>\n            ) : null}\n          </Nav>\n        </Collapse>\n      </Navbar>\n      <div className=\"home-title\">\n        <h1>Lorem</h1>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { updateUserCart } from \"../API/API\";\n\n// DISPLAY EACH ITEM IN THE CART\n\nexport const CartItem = (props) => {\n  const { product, index, cartItems, id, setUser, setCartItems } = props;\n  const [quantity, setQuantity] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    product.quantity && setQuantity(product.quantity);\n    return () => setQuantity(\"\");\n  }, []);\n\n  const increment = async () => {\n    setLoading(true);\n    setQuantity(quantity + 1);\n    let cart = [...cartItems];\n    cart[index].quantity += 1;\n    setCartItems(cart);\n    await updateUserCart(id, cart);\n\n    setLoading(false);\n  };\n\n  const decrement = async () => {\n    setLoading(true);\n    if (quantity === 1) {\n      alert(\"Item cant have 0 quantity, either remove it. or leave at least 1\");\n      return;\n    }\n    setQuantity(quantity - 1);\n    let cart = [...cartItems];\n    cart[index].quantity -= 1;\n    setCartItems(cart);\n    await updateUserCart(id, cart);\n    setLoading(false);\n  };\n\n  // REMOVE ITEM FROM CART\n  const removeItem = async () => {\n    setLoading(true);\n    let cart = [...cartItems];\n    cart.splice(index, 1);\n    setCartItems(cart);\n    const updatedUser = await updateUserCart(id, cart);\n    setUser(updatedUser);\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"cart-container\">\n      <div className=\"img-container\">\n        <img src={product.image} alt=\"\" />\n      </div>\n      <div className=\"title\">\n        <h4>{product.name}</h4>\n      </div>\n      <div className=\"price\">\n        <p>$ {product.price.toLocaleString()}</p>\n      </div>\n      <div className=\"quantity\">\n        {product.quantity > 1 ? (\n          <span className=\"minus fadeIn\" onClick={decrement}>\n            <i className=\"fas fa-minus\"></i>\n          </span>\n        ) : (\n          <span className=\"minus fadeOut\" onClick={removeItem}>\n            <i className=\"fas fa-trash text-danger\"></i>\n          </span>\n        )}\n        <span className=\"number\">{product.quantity}</span>\n        <span className=\"plus\" onClick={increment}>\n          <i className=\"fas fa-plus\"></i>\n        </span>\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/Online_shopping_PNG.0faa957a.png\";","export default __webpack_public_path__ + \"static/media/empty-cart.916aede4.svg\";","import { useState, useEffect, useContext } from \"react\";\nimport { userContext } from \"../Context/Contexts\";\nimport { CartItem } from \"./CartItem\";\nimport { checkStock, newTransaction, updateUserCart } from \"../API/API\";\nimport emptyCart from \"../assets/empty-cart.svg\";\n\n// DISPLAY THE CART PAGE\nexport const Cart = ({ setIsCartOpen }) => {\n  const [cartItems, setCartItems] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const { user, setUser } = useContext(userContext);\n\n  useEffect(() => {\n    user && setCartItems(user.cart);\n  }, [user]);\n\n  useEffect(() => {\n    let sum = 0;\n    cartItems &&\n      cartItems.forEach((item) => {\n        sum += item.price * item.quantity;\n      });\n    setTotal(sum);\n  }, [cartItems]);\n\n  // CHECKOUT\n\n  const checkoutButton = async (userId) => {\n    setLoading(true);\n    const response = await checkStock(userId);\n    if (response.status === 200) {\n      const { date_created, id, items, init_point } = response.data;\n      await newTransaction(user._id, id, \"pending\", items, date_created);\n      window.location.replace(init_point);\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n\n  // CLEAR CART\n  const clearCart = async () => {\n    try {\n      const emptyCart = await updateUserCart(user._id, []);\n      setUser(emptyCart);\n    } catch (err) {\n      return err;\n    }\n  };\n\n  // TOTAL AND CHECKOUT BUTTON DIV\n\n  const DivTotal = () => {\n    return (\n      <div className=\"total-container\">\n        <div className=\"total\">\n          <h4>TOTAL</h4>\n          <p>${total.toLocaleString()}</p>\n        </div>\n        {loading ? (\n          <div className=\"spinner-grow\"></div>\n        ) : (\n          <button\n            className=\"btn btn-black\"\n            onClick={() => checkoutButton(user._id)}\n          >\n            checkout\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  // EMPTY CART DISPLAY\n\n  const EmptyCart = () => {\n    return (\n      <div className=\"empty-cart\">\n        <div className=\"\">\n          <img src={emptyCart} alt=\"\" />\n          <p className=\"\">\n            <b>Your cart is empty</b>\n          </p>\n          <p>Check out all of our products</p>\n          <button className=\"btn btn-black\" onClick={closeOverlay}>\n            <b>Products</b>\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  /* CLOSE OVERLAY */\n  const closeOverlay = () => {\n    setIsCartOpen(false);\n  };\n\n  return (\n    <div className=\"overlay\" onClick={closeOverlay}>\n      <div\n        className=\"cart-items-container\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <button className=\" x-btn\" onClick={closeOverlay}>\n          x\n        </button>\n        <h3>Shopping cart</h3>\n        {user && user.cart.length ? (\n          <div>\n            <div className=\"clear-cart\" onClick={clearCart}>\n              <p>\n                <i className=\"fas fa-trash text-danger\"></i> empty cart\n              </p>\n            </div>\n            {cartItems &&\n              cartItems.map((product, index) => {\n                return (\n                  <div key={index}>\n                    <CartItem\n                      product={product}\n                      cartItems={cartItems}\n                      setCartItems={setCartItems}\n                      index={index}\n                      id={user._id}\n                      setUser={setUser}\n                    />\n                    <hr />\n                  </div>\n                );\n              })}\n            <DivTotal />\n          </div>\n        ) : (\n          <EmptyCart />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { userContext } from \"../Context/Contexts\";\nimport { logout } from \"../API/API\";\nimport { Link } from \"react-router-dom\";\nimport onlineShopping from \"../assets/Online_shopping_PNG.png\";\nimport { Cart } from \"./Cart\";\nimport { LoginScreen } from \"./LoginScreen\";\n\n// DISPLAY THE CLIENT NAV BAR\n\nexport const Header = () => {\n  const [cartItems, setCartItems] = useState([]);\n  const [dropdown, setDropwdown] = useState(false);\n  const [cartTotal, setCartTotal] = useState(\"\");\n  const [login, setLogin] = useState(false);\n  const [isCartOpen, setIsCartOpen] = useState(false);\n\n  const toggleCartModal = () => {\n    setIsCartOpen(!isCartOpen);\n    setDropwdown(false);\n  };\n\n  const toggleDropdown = () => setDropwdown(!dropdown);\n\n  const { user, setUser } = useContext(userContext);\n\n  // GET CART ITEMS\n  useEffect(() => {\n    if (user) {\n      setCartItems(user.cart);\n    }\n  }, [user]);\n\n  // CART ITEMS TOTAL\n  useEffect(() => {\n    let total = 0;\n    cartItems &&\n      cartItems.map((elem) => {\n        total += elem.price * elem.quantity;\n      });\n    setCartTotal(total);\n  }, [cartItems]);\n\n  // LOGOUT\n  const logOut = async () => {\n    await logout();\n    setUser(null);\n    setCartItems(null);\n  };\n\n  // USER DROPDOWN\n  const UserNav = () => {\n    return dropdown ? (\n      <div className=\"user-nav-show grow \">\n        <p onClick={toggleDropdown} className=\"user-name\">\n          {user.username} <i className=\"fas fa-caret-up\"></i>\n        </p>\n        <p\n          onClick={() => {\n            toggleCartModal();\n            toggleDropdown();\n          }}\n        >\n          Cart\n        </p>\n        <p onClick={toggleDropdown}>Transactions</p>\n        <p\n          onClick={() => {\n            setIsCartOpen(false);\n            toggleDropdown();\n            logOut();\n          }}\n        >\n          Log out\n        </p>\n      </div>\n    ) : (\n      <div className=\"user-nav nav-buttons\">\n        <p onClick={toggleDropdown}>\n          Account <i className=\"fas fa-caret-down\"></i>{\" \"}\n        </p>\n      </div>\n    );\n  };\n\n  // LOGIN BUTTON\n  const Login = () => {\n    return (\n      <p className=\"user-nav nav-buttons\" onClick={() => setLogin(true)}>\n        Log in\n      </p>\n    );\n  };\n\n  // TITLE\n  const Title = () => {\n    return (\n      <div className=\"title-container\">\n        <h1>EcommercE</h1>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\" header-container\">\n        <div className=\"cart-user-container\">\n          <div className=\"cart-nav nav-buttons\" onClick={toggleCartModal}>\n            <i className=\"fas fa-shopping-cart\"></i>\n            <i className={cartTotal ? \"header-total\" : \"hidden\"}>\n              $ {cartTotal.toLocaleString()}\n            </i>\n            {user && user.cart.length ? (\n              <span className=\"cart-length\">{user.cart.length}</span>\n            ) : null}\n          </div>\n          {user ? <UserNav /> : <Login />}\n        </div>\n      </div>\n      <Title />\n      {login ? <LoginScreen setLogin={setLogin} /> : null}\n      {isCartOpen ? <Cart setIsCartOpen={setIsCartOpen} /> : null}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { userContext } from \"../Context/Contexts\";\nimport { AdminNav } from \"./Admin/AdminNav\";\nimport { Header } from \"./Header\";\n\nexport const NavBar = () => {\n  const { user } = useContext(userContext);\n  return user ? user.admin ? <AdminNav /> : <Header /> : <Header />;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nexport const Token = (props) => {\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {\n    const url = window.location.href;\n    const urlToken = url.split(\"?\")[1];\n    //split token=\n    const localToken = urlToken.split(\"=\")[1];\n    setToken(urlToken.split(\"=\")[1]);\n    window.history.pushState({}, \"\", url.split(\"?\")[0]);\n    localStorage.setItem(\"token\", localToken);\n  }, []);\n  return <div>{token ? <Redirect to=\"/\" /> : null}</div>;\n};\n","import { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { getCategories, addNewProduct } from \"../../API/API\";\nimport { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport uniqid from \"uniqid\";\n\n/* ADDS A NEW PRODUCT WITH ALL THE DETAILS AND 1 IMAGE, \nMORE IMAGES CAN BE ADDED LATER. REDIRECTS TO SINGLEPRODUCT */\n\nexport const AddProduct = () => {\n  const [productName, setProductName] = useState(\"\");\n  const [productPrice, setProductPrice] = useState(0);\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [quantity, setQuantity] = useState(0);\n  const [categories, setCategories] = useState([]);\n  const [showProductForm, setShowProductForm] = useState(false);\n  const [productErrors, setProductErrors] = useState();\n  const [productId, setProductId] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const nameHandler = (e) => {\n    setProductName(e.target.value);\n  };\n\n  const categoryHandler = (e) => {\n    const index = e.target.selectedIndex;\n    const element = e.target.options[index];\n    setCategoryId(element.id);\n  };\n\n  const priceHandler = (e) => {\n    setProductPrice(e.target.value);\n  };\n\n  const sizeHandler = (e) => {\n    setSize(e.target.value);\n  };\n\n  const colorHandler = (e) => {\n    setColor(e.target.value);\n  };\n\n  const stockHandler = (e) => {\n    setQuantity(e.target.value);\n  };\n\n  const imageHandler = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  const descriptionHandler = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const productForm = () => {\n    setShowProductForm(!showProductForm);\n    resetState();\n  };\n\n  const resetState = () => {\n    setCategoryId(\"\");\n    setProductName(\"\");\n    setProductPrice(0);\n    setColor(\"\");\n    setQuantity(0);\n    setSize(\"\");\n    setDescription(\"\");\n  };\n\n  // GET ALL CATEGORIES\n  useEffect(() => {\n    (async () => {\n      setCategories(await getCategories());\n    })();\n    return () => setCategories();\n  }, []);\n\n  return categories ? (\n    !showProductForm ? (\n      <div className=\"text-center mb-2\">\n        <Button className=\"bg-primary\" onClick={productForm}>\n          Add new product\n        </Button>\n      </div>\n    ) : (\n      <div className=\" mb-2\">\n        <div className=\"text-center\">\n          <Button className=\"bg-primary\" onClick={productForm}>\n            Hide\n          </Button>\n        </div>\n        <Form encType=\"multipart/form-data\">\n          <FormGroup>\n            <Label>Category</Label>\n            <Input\n              type=\"select\"\n              name=\"category\"\n              onChange={categoryHandler}\n              defaultValue={categoryId}\n            >\n              <option value=\"\" disabled>\n                Select a category\n              </option>\n              {categories.map((cat) => {\n                return (\n                  <option id={cat._id} key={cat._id}>\n                    {cat.name}\n                  </option>\n                );\n              })}\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label>Product name</Label>\n            <Input\n              name=\"productName\"\n              autoComplete=\"off\"\n              value={productName}\n              placeholder=\"enter product name\"\n              onChange={nameHandler}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>Product description</Label>\n            <Input\n              name=\"description\"\n              autoComplete=\"off\"\n              value={description}\n              onChange={descriptionHandler}\n              placeholder=\"brief description\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>Product price</Label>\n            <Input\n              type=\"number\"\n              name=\"productPrice\"\n              autoComplete=\"off\"\n              value={productPrice}\n              onChange={priceHandler}\n              placeholder=\"Enter product price\"\n              onFocus={() => setProductPrice(\"\")}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>Product size</Label>\n            <Input\n              name=\"size\"\n              autoComplete=\"off\"\n              value={size}\n              placeholder=\"enter product size\"\n              onChange={sizeHandler}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>Product color</Label>\n            <Input\n              name=\"color\"\n              autoComplete=\"off\"\n              value={color}\n              placeholder=\"enter product color\"\n              onChange={colorHandler}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>Product stock</Label>\n            <Input\n              type=\"number\"\n              name=\"quantity\"\n              autoComplete=\"off\"\n              value={quantity}\n              placeholder=\"enter product quantity/stock\"\n              onChange={stockHandler}\n              onFocus={() => setQuantity(\"\")}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>Product picture</Label>\n            <div>\n              <Input type=\"file\" name=\"image\" onChange={imageHandler} />\n            </div>\n          </FormGroup>\n          <FormGroup className=\"text-center mt-3\">\n            {productErrors\n              ? productErrors.map((err) => {\n                  return (\n                    <FormGroup key={uniqid()} className=\"mb-1\">\n                      <Label>{err.msg}</Label>\n                    </FormGroup>\n                  );\n                })\n              : null}\n            {loading ? (\n              <div className=\"spinner-grow\" role=\"status\"></div>\n            ) : (\n              <Button\n                className=\"bg-primary\"\n                onClick={async () => {\n                  setLoading(true);\n                  const result = await addNewProduct(\n                    productName,\n                    categoryId,\n                    productPrice,\n                    color,\n                    size,\n                    quantity,\n                    image,\n                    description\n                  );\n                  setLoading(false);\n                  if (result.status === 500) {\n                    setProductErrors(result.data);\n                  } else {\n                    resetState();\n                    setProductId(result.data._id);\n                  }\n                }}\n              >\n                Add product\n              </Button>\n            )}\n          </FormGroup>\n        </Form>\n        {productId ? <Redirect to={\"/product?\" + productId} /> : null}\n      </div>\n    )\n  ) : (\n    <p>loading</p>\n  );\n};\n","import { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { getCategories, newCategory } from \"../../API/API\";\nimport { useState, useEffect } from \"react\";\n\n/* ADDS A NEW PRODUCT CATEGORY */\n\nexport const AddCategory = () => {\n  const [categoryName, setCategoryName] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [showCategoryForm, setShowCategoryForm] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const nameHandler = (e) => {\n    setCategoryName(e.target.value);\n  };\n\n  const toggleForm = () => setShowCategoryForm(!showCategoryForm);\n\n  useEffect(() => {\n    (async () => {\n      setCategories(await getCategories());\n    })();\n  }, []);\n\n  return !showCategoryForm ? (\n    <div className=\"text-center mb-2\">\n      <Button className=\"bg-primary\" onClick={toggleForm}>\n        Add new category\n      </Button>\n    </div>\n  ) : (\n    <div className=\"text-center mb-2\">\n      <Button className=\"bg-primary\" onClick={toggleForm}>\n        Hide\n      </Button>\n      <Form>\n        <FormGroup>\n          <Label>Category name</Label>\n          <Input\n            name=\"productCategory\"\n            value={categoryName}\n            placeholder=\"enter category name\"\n            onChange={nameHandler}\n          />\n        </FormGroup>\n        <FormGroup className=\"text-center mt-3\">\n          {loading ? (\n            <div className=\"spinner-grow\"></div>\n          ) : (\n            <Button\n              className=\"bg-primary\"\n              onClick={async () => {\n                setLoading(true);\n                await newCategory(categoryName);\n                setLoading(false);\n                setShowCategoryForm(false);\n              }}\n            >\n              Add category\n            </Button>\n          )}\n        </FormGroup>\n      </Form>\n    </div>\n  );\n};\n","import { getProducts } from \"../../API/API\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { ProductCard } from \"../ProductCard\";\nimport uniqid from \"uniqid\";\nimport { Col, Row } from \"reactstrap\";\nimport { userContext } from \"../../Context/Contexts\";\nimport { Redirect } from \"react-router-dom\";\nimport { AddProduct } from \"./AddProduct\";\nimport { AddCategory } from \"./AddCategory\";\nimport { SearchProduct } from \"../SearchProduct\";\n\n/* DISPLAY THE ADMIN PRODUDCT PAGE WITH ALL THE PRODUCTS */\n\nexport const AdminHome = () => {\n  const [products, setProducts] = useState([]);\n\n  const { user } = useContext(userContext);\n\n  useEffect(() => {\n    (async () => {\n      setProducts(await getProducts());\n    })();\n\n    return () => setProducts();\n  }, []);\n\n  return user ? (\n    !user.admin ? (\n      <Redirect to=\"/\" />\n    ) : (\n      <Col className=\"mt-5 mx-auto container\">\n        <Row>\n          <Col md={6}>\n            <AddProduct />\n          </Col>\n          <Col md={6}>\n            <AddCategory />\n          </Col>\n        </Row>\n        <Row>\n          <div className=\"text-center\">\n            <SearchProduct products={products} />\n          </div>\n          {products\n            ? products.map((product) => {\n                const { name, _id, images, description, color, size, price } =\n                  product;\n                return (\n                  <Col\n                    md={6}\n                    lg={3}\n                    xs={12}\n                    className=\"mt-2 mx-auto\"\n                    key={uniqid()}\n                  >\n                    <ProductCard\n                      key={uniqid()}\n                      id={_id}\n                      name={name}\n                      price={price}\n                      images={images}\n                      description={description}\n                      color={color}\n                      size={size}\n                    />\n                  </Col>\n                );\n              })\n            : null}\n        </Row>\n      </Col>\n    )\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n","import { useState, useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { Button, Breadcrumb, BreadcrumbItem, Col, Row } from \"reactstrap\";\nimport { getCategories, getProductByCat } from \"../../API/API\";\nimport { ProductCard } from \"../../Components/ProductCard\";\nimport { userContext } from \"../../Context/Contexts\";\n\n// DISPLAY ALL THE CATEGORIES ON A BAR\n\nexport const AdminCategory = () => {\n  const [categories, setCategories] = useState();\n  const [active, setActive] = useState(0);\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { user, setUser } = useContext(userContext);\n\n  // GET ALL CATEGORIES ON LOAD\n  useEffect(() => {\n    (async () => {\n      setCategories(await getCategories());\n    })();\n  }, []);\n\n  // GET SPECIFIC CATEOGRY ITEMS ON CLICK\n  const getProducts = async (name, index) => {\n    setLoading(true);\n    setProducts(await getProductByCat(name));\n    setLoading(false);\n    setActive(index);\n  };\n\n  // GET THE FIRST CATEGORY\n  useEffect(() => {\n    setLoading(true);\n    if (categories) {\n      (async () => {\n        setProducts(await getProductByCat(categories[0]._id));\n        setLoading(false);\n      })();\n    }\n  }, [categories]);\n\n  return !user ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <div className=\"container text-center \">\n      <p className=\"mt-2\">\n        Select a category to find all the products of that category\n      </p>\n      {categories ? (\n        <Breadcrumb>\n          {categories.map((cat, index) => {\n            return (\n              <BreadcrumbItem\n                onClick={() => getProducts(cat._id, index)}\n                className={\n                  active === index ? \"active\" : \"text-primary cursorPointer\"\n                }\n                id={index}\n                key={cat._id}\n              >\n                {cat.name}\n              </BreadcrumbItem>\n            );\n          })}\n        </Breadcrumb>\n      ) : (\n        <div className=\"spinner-grow\"></div>\n      )}\n      {loading ? (\n        <div className=\"spinner-grow\"></div>\n      ) : products ? (\n        <Row>\n          {products.map((pro) => {\n            return (\n              <Col sm={12} md={6} lg={3} key={pro.name} className=\"mx-auto\">\n                <ProductCard\n                  name={pro.name}\n                  images={pro.images}\n                  price={pro.price.toLocaleString()}\n                  id={pro._id}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      ) : (\n        <div className=\"spinner-grow\"></div>\n      )}\n    </div>\n  );\n};\n","import { useState, useEffect, useContext } from \"react\";\nimport { updateTransactionStatus, updateUserCart } from \"../../API/API\";\nimport { Redirect } from \"react-router\";\nimport { userContext } from \"../../Context/Contexts\";\n\nexport const PurchaseSuccess = () => {\n  const [success, setSuccess] = useState(false);\n  const [preferenceId, setPreferenceId] = useState(\"\");\n  const { user, setUser } = useContext(userContext);\n\n  // UPDATE THE TRANSACTION TO APPROVED STATUS\n  const compareCollectionsId = async () => {\n    const url = window.location.href;\n    if (url.split(\"?\")[1]) {\n      const params = url.split(\"?\")[1].split(\"&\");\n      const id = params[7].split(\"=\")[1];\n      setPreferenceId(id);\n      await updateTransactionStatus(id, \"approved\");\n      const cart = [];\n      const newCart = await updateUserCart(user._id, cart);\n      setUser(newCart);\n      window.history.replaceState(null, null, url.split(\"?\")[0]);\n      setSuccess(true);\n    }\n  };\n\n  useEffect(() => {\n    user && compareCollectionsId();\n  }, [user]);\n\n  return success ? (\n    <Redirect to={\"/transactiondetail?\" + preferenceId} />\n  ) : null;\n};\n","import { Link } from \"react-router-dom\";\n\nexport const GoBackArrow = (props) => {\n  return (\n    <Link to={props.route}>\n      <i style={{ fontSize: \"50px\" }} className=\"fas fa-angle-double-left\"></i>\n    </Link>\n  );\n};\n","import { useState, useEffect, useContext } from \"react\";\nimport { userContext } from \"../../Context/Contexts\";\nimport { Table } from \"reactstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { GoBackArrow } from \"../Styled/GoBackArrow\";\nimport { userTransactions } from \"../../API/API\";\n\n// DISPLAY THE CURRENT USER TRANSACTIONS\n\nexport const TransactionList = () => {\n  const { user } = useContext(userContext);\n  const [purchases, setPurchases] = useState([]);\n\n  const getUserTransactions = async () => {\n    const transactions = await userTransactions(user._id);\n    setPurchases(transactions);\n  };\n\n  useEffect(() => {\n    if (user) {\n      getUserTransactions();\n    }\n  }, [user]);\n\n  return !user ? null : purchases ? (\n    <div className=\"container text-center\">\n      <h3 className=\"text-center mt-3\"> Transaction List</h3>\n      <Table responsive bordered className=\"mx-auto\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Date</th>\n            <th>Product</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        {purchases.map((elem, index) => {\n          const { date, product, status, transaction_id } = elem;\n          return (\n            <tbody key={index}>\n              <tr>\n                <th\n                  scope=\"row\"\n                  width=\"25%\"\n                  id={index}\n                  className=\"cursorPointer\"\n                >\n                  <Link to={\"/transactiondetail/?\" + transaction_id}>\n                    Id: {transaction_id}\n                  </Link>\n                </th>\n                <td width=\"25%\">{new Date(date).toLocaleDateString()}</td>\n                {product.length > 1 ? (\n                  <td width=\"25%\" className=\"multiple-items\">\n                    {product.map((elem) => {\n                      return elem.title + \" \";\n                    })}\n                  </td>\n                ) : (\n                  <td width=\"25%\">{product[0].title}</td>\n                )}\n                <td width=\"25%\">Status: {status}</td>\n              </tr>\n            </tbody>\n          );\n        })}\n      </Table>\n      <GoBackArrow route={\"/\"} />\n    </div>\n  ) : (\n    <div className=\"mt-5 text-center\">\n      <p className=\"spinner-grow\"></p>\n    </div>\n  );\n};\n","import { useState, useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { purchaseDetail, getTransaction } from \"../../API/API\";\nimport { userContext } from \"../../Context/Contexts\";\nimport { GoBackArrow } from \"../Styled/GoBackArrow\";\n\n// GET THE SPECIFIED TRANSACTION DETAILS\nexport const TransactionDetail = () => {\n  const { user } = useContext(userContext);\n  const [detail, setDetail] = useState();\n  const [total, setTotal] = useState(\"\");\n\n  const getDetail = async () => {\n    let url = window.location.href;\n    let id = url.split(\"?\")[1];\n    const transaction = await getTransaction(id);\n    if (transaction) {\n      setDetail(transaction);\n    }\n  };\n\n  useEffect(() => {\n    getDetail();\n  }, [user]);\n\n  useEffect(() => {\n    let totalPrice = 0;\n    detail &&\n      detail.product.forEach((elem) => {\n        totalPrice += elem.quantity * elem.unit_price;\n      });\n    setTotal(totalPrice);\n  }, [detail]);\n\n  return !user ? null : detail ? (\n    <div className=\"container\">\n      <h3>Transaction ID: {detail.transaction_id}</h3>\n      <p>Date of transaction: {new Date(detail.date).toLocaleDateString()} </p>\n      <p>Status: {detail.status}</p>\n      <h5 className=\"text-center\">Items purchased</h5>\n      <table className=\"table text-center\">\n        <thead>\n          <tr>\n            <th>Item</th>\n            <th>Unit price</th>\n            <th>quantity</th>\n          </tr>\n        </thead>\n        {detail.product.map((elem, index) => {\n          return (\n            <tbody key={index}>\n              <tr>\n                <td>{elem.title}</td>\n                <td>{elem.unit_price.toLocaleString()}</td>\n                <td>{elem.quantity}</td>\n              </tr>\n            </tbody>\n          );\n        })}\n      </table>\n      <h5 className=\"text-center\">Total: {total.toLocaleString()}</h5>\n      <GoBackArrow route={\"/transactions\"} />\n    </div>\n  ) : (\n    <div className=\"mt-5 text-center\">\n      <p className=\"spinner-grow\">hola</p>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { allTransactions } from \"../../API/API\";\nimport { Table } from \"reactstrap\";\n\n//TODO ADD TRANSACTION DETAIL\n\nexport const AdminTransactions = (props) => {\n  const [transactions, setTransactions] = useState([]);\n\n  const getAllTransactions = async () => {\n    const data = await allTransactions();\n    setTransactions(data);\n  };\n\n  useEffect(() => {\n    getAllTransactions();\n    return () => setTransactions([]);\n  }, []);\n\n  return (\n    <div className=\"container text-center\">\n      <h3 className=\"text-center my-5\">Transaction List</h3>\n      <Table responsive size=\"sm\" bordered>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>User</th>\n            <th>Date</th>\n            <th>Products</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        {transactions.length &&\n          transactions.map((elem, index) => {\n            const { transaction_id, user, date, product, status } = elem;\n            return (\n              <tbody key={index} id={transaction_id}>\n                <tr>\n                  <td>{transaction_id}</td>\n                  <td>{user.username}</td>\n                  <td>{new Date(date).toLocaleDateString()}</td>\n                  {product.length > 1 ? (\n                    <td className=\"multiple-items\">\n                      {product.map((elem) => {\n                        return elem.title + \" \";\n                      })}\n                    </td>\n                  ) : (\n                    <td width=\"25%\">{product[0].title}</td>\n                  )}\n                  <td>{status}</td>\n                </tr>\n              </tbody>\n            );\n          })}\n      </Table>\n    </div>\n  );\n};\n","// TODO DO FAILURE PAGE\nimport { useState, useEffect, useContext } from \"react\";\nimport { userContext } from \"../../Context/Contexts\";\nimport { updateTransactionStatus } from \"../../API/API\";\nimport { Redirect } from \"react-router\";\n\nexport const PurchaseFailure = (props) => {\n  const [success, setSuccess] = useState(false);\n  const [preferenceId, setPreferenceId] = useState(\"\");\n  const { user } = useContext(userContext);\n\n  // UPDATE THE TRANSACTION TO APPROVED STATUS\n  const compareCollectionsId = async () => {\n    const url = window.location.href;\n    if (url.split(\"?\")[1]) {\n      const params = url.split(\"?\")[1].split(\"&\");\n      const id = params[7].split(\"=\")[1];\n      setPreferenceId(id);\n      await updateTransactionStatus(id, \"canceled\");\n      window.history.replaceState(null, null, url.split(\"?\")[0]);\n      setSuccess(true);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"here\");\n    user && compareCollectionsId();\n  }, [user]);\n\n  return success ? (\n    <Redirect to={\"/transactiondetail?\" + preferenceId} />\n  ) : null;\n};\n","import Home from \"./Components/Home\";\nimport { NavBar } from \"./Components/Navbar\";\nimport { useState, useEffect } from \"react\";\nimport { userContext } from \"./Context/Contexts\";\nimport { userData, checkForToken } from \"./API/API\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { Token } from \"./Components/Token\";\nimport { AdminHome } from \"./Components/Admin/AdminHome\";\nimport { ProductDetail } from \"./Components/ProductDetail\";\nimport { AdminCategory } from \"./Components/Admin/AdminCategory\";\nimport { PurchaseSuccess } from \"./Components/Transactions/PurchaseSuccess\";\nimport { TransactionList } from \"./Components/Transactions/TransactionList\";\nimport { TransactionDetail } from \"./Components/Transactions/TransactionDetail\";\nimport { AdminTransactions } from \"./Components/Admin/AdminTransactions\";\nimport { PurchaseFailure } from \"./Components/Transactions/PurchaseFailure\";\n\nfunction App() {\n  const [user, setUser] = useState();\n\n  useEffect(() => {\n    (async () => {\n      const token = checkForToken();\n      if (token) setUser(await userData(token));\n      else setUser(null);\n    })();\n  }, []);\n\n  return (\n    <HashRouter>\n      <userContext.Provider value={{ user, setUser }}>\n        <NavBar />\n        <Switch>\n          <Route path=\"/logged\" component={Token} />\n          <Route path=\"/admin-productos\" component={AdminHome} />\n          <Route path=\"/admin-categorias\" component={AdminCategory} />\n          <Route path=\"/purchasesuccess\" component={PurchaseSuccess} />\n          <Route path=\"/transactions\" component={TransactionList} />\n          <Route path=\"/transactiondetail\" component={TransactionDetail} />\n          <Route path=\"/admin-transactions\" component={AdminTransactions} />\n          <Route path=\"/purchasefailure\" component={PurchaseFailure} />\n          {user && (\n            <Route\n              path=\"/product\"\n              render={(props) => <ProductDetail id={user._id} {...props} />}\n            />\n          )}\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </userContext.Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./sass/main.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}